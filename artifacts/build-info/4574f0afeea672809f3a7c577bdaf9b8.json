{
	"id": "4574f0afeea672809f3a7c577bdaf9b8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.21",
	"solcLongVersion": "0.8.21+commit.d9974bed",
	"input": {
		"language": "Solidity",
		"sources": {
			".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"./extensions/IERC721Metadata.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/Strings.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n    address public _owner;\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_, address owner_) {\n        _name = name_;\n        _symbol = symbol_;\n        _owner = owner_;\n    }\n    modifier onlyOwner() {\n        require(msg.sender == _owner, \"could only be called by the owner\");\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: address zero is not a valid owner\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _ownerOf(tokenId);\n        require(owner != address(0), \"ERC721: invalid token ID\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireMinted(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not token owner or approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        _requireMinted(tokenId);\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n        _safeTransfer(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _ownerOf(tokenId) != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\n\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        unchecked {\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\n            // Given that tokens are minted one by one, it is impossible in practice that\n            // this ever happens. Might change if we allow batch minting.\n            // The ERC fails to describe this case.\n            _balances[to] += 1;\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n\n        _afterTokenTransfer(address(0), to, tokenId, 1);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\n\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\n        owner = ERC721.ownerOf(tokenId);\n\n        // Clear approvals\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // Cannot overflow, as that would require more tokens to be burned/transferred\n            // out than the owner initially received through minting and transferring in.\n            _balances[owner] -= 1;\n        }\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) public  {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n       // require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId, 1);\n\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n\n        // Clear approvals from the previous owner\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\n            // `from`'s balance is the number of token held, which is at least one before the current\n            // transfer.\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\n            // all 2**256 token ids to be minted, which in practice is impossible.\n            _balances[from] -= 1;\n            _balances[to] += 1;\n        }\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        _afterTokenTransfer(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits an {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` has not been minted yet.\n     */\n    function _requireMinted(uint256 tokenId) internal view virtual {\n        require(_exists(tokenId), \"ERC721: invalid token ID\");\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n     * - When `from` is zero, the tokens will be minted for `to`.\n     * - When `to` is zero, ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n     * - When `from` is zero, the tokens were minted for `to`.\n     * - When `to` is zero, ``from``'s tokens were burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\n     * being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\n     * that `ownerOf(tokenId)` is `a`.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function __unsafe_increaseBalance(address account, uint256 amount) internal {\n        _balances[account] += amount;\n    }\n}\n"
			},
			".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			".deps/npm/@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			".deps/npm/@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			".deps/npm/@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			".deps/npm/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			".deps/npm/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			".deps/npm/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			".deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			".deps/npm/@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			".deps/npm/@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"evmVersion": "paris"
		}
	},
	"output": {
		"contracts": {
			".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "owner_",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "_owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "_transfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"_transfer(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`.  As opposed to {transferFrom}, this imposes no restrictions on msg.sender. Requirements: - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. Emits a {Transfer} event."
							},
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":628:17185  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n  mstore(0x40, 0x80)\n    /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1416:1570  constructor(string memory name_, string memory symbol_, address owner_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1506:1511  name_ */\n  dup3\n    /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1498:1503  _name */\n  0x01\n    /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1498:1511  _name = name_ */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1531:1538  symbol_ */\n  dup2\n    /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1521:1528  _symbol */\n  0x02\n    /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1521:1538  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1557:1563  owner_ */\n  dup1\n    /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1548:1554  _owner */\n  0x00\n  dup1\n    /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1548:1563  _owner = owner_ */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1416:1570  constructor(string memory name_, string memory symbol_, address owner_) {... */\n  pop\n  pop\n  pop\n    /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":628:17185  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n  jump(tag_9)\n    /* \"#utility.yul\":7:82   */\ntag_10:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_11:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_12:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_13:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_14:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_15:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_16:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_17:\n    /* \"#utility.yul\":957:984   */\n  tag_55\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_15\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_56\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_57\n  tag_16\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":1030:1118   */\ntag_56:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_18:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_59\n  tag_10\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_60\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_17\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_19:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_62\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_63\n  tag_16\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":1434:1490   */\ntag_62:\n    /* \"#utility.yul\":1508:1537   */\n  tag_64\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_15\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1856   */\ntag_20:\n    /* \"#utility.yul\":1691:1692   */\n  0x00\n    /* \"#utility.yul\":1701:1814   */\ntag_66:\n    /* \"#utility.yul\":1715:1721   */\n  dup4\n    /* \"#utility.yul\":1712:1713   */\n  dup2\n    /* \"#utility.yul\":1709:1722   */\n  lt\n    /* \"#utility.yul\":1701:1814   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":1800:1801   */\n  dup1\n    /* \"#utility.yul\":1795:1798   */\n  dup3\n    /* \"#utility.yul\":1791:1802   */\n  add\n    /* \"#utility.yul\":1785:1803   */\n  mload\n    /* \"#utility.yul\":1781:1782   */\n  dup2\n    /* \"#utility.yul\":1776:1779   */\n  dup5\n    /* \"#utility.yul\":1772:1783   */\n  add\n    /* \"#utility.yul\":1765:1804   */\n  mstore\n    /* \"#utility.yul\":1737:1739   */\n  0x20\n    /* \"#utility.yul\":1734:1735   */\n  dup2\n    /* \"#utility.yul\":1730:1740   */\n  add\n    /* \"#utility.yul\":1725:1740   */\n  swap1\n  pop\n    /* \"#utility.yul\":1701:1814   */\n  jump(tag_66)\ntag_68:\n    /* \"#utility.yul\":1848:1849   */\n  0x00\n    /* \"#utility.yul\":1839:1845   */\n  dup5\n    /* \"#utility.yul\":1834:1837   */\n  dup5\n    /* \"#utility.yul\":1830:1846   */\n  add\n    /* \"#utility.yul\":1823:1850   */\n  mstore\n    /* \"#utility.yul\":1672:1856   */\n  pop\n    /* \"#utility.yul\":1610:1856   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1862:2296   */\ntag_21:\n    /* \"#utility.yul\":1951:1956   */\n  0x00\n    /* \"#utility.yul\":1976:2042   */\n  tag_70\n    /* \"#utility.yul\":1992:2041   */\n  tag_71\n    /* \"#utility.yul\":2034:2040   */\n  dup5\n    /* \"#utility.yul\":1992:2041   */\n  tag_19\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":1976:2042   */\n  tag_18\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":1967:2042   */\n  swap1\n  pop\n    /* \"#utility.yul\":2065:2071   */\n  dup3\n    /* \"#utility.yul\":2058:2063   */\n  dup2\n    /* \"#utility.yul\":2051:2072   */\n  mstore\n    /* \"#utility.yul\":2103:2107   */\n  0x20\n    /* \"#utility.yul\":2096:2101   */\n  dup2\n    /* \"#utility.yul\":2092:2108   */\n  add\n    /* \"#utility.yul\":2141:2144   */\n  dup5\n    /* \"#utility.yul\":2132:2138   */\n  dup5\n    /* \"#utility.yul\":2127:2130   */\n  dup5\n    /* \"#utility.yul\":2123:2139   */\n  add\n    /* \"#utility.yul\":2120:2145   */\n  gt\n    /* \"#utility.yul\":2117:2229   */\n  iszero\n  tag_72\n  jumpi\n    /* \"#utility.yul\":2148:2227   */\n  tag_73\n  tag_14\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":2117:2229   */\ntag_72:\n    /* \"#utility.yul\":2238:2290   */\n  tag_74\n    /* \"#utility.yul\":2283:2289   */\n  dup5\n    /* \"#utility.yul\":2278:2281   */\n  dup3\n    /* \"#utility.yul\":2273:2276   */\n  dup6\n    /* \"#utility.yul\":2238:2290   */\n  tag_20\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":1957:2296   */\n  pop\n    /* \"#utility.yul\":1862:2296   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2316:2671   */\ntag_22:\n    /* \"#utility.yul\":2383:2388   */\n  0x00\n    /* \"#utility.yul\":2432:2435   */\n  dup3\n    /* \"#utility.yul\":2425:2429   */\n  0x1f\n    /* \"#utility.yul\":2417:2423   */\n  dup4\n    /* \"#utility.yul\":2413:2430   */\n  add\n    /* \"#utility.yul\":2409:2436   */\n  slt\n    /* \"#utility.yul\":2399:2521   */\n  tag_76\n  jumpi\n    /* \"#utility.yul\":2440:2519   */\n  tag_77\n  tag_13\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":2399:2521   */\ntag_76:\n    /* \"#utility.yul\":2550:2556   */\n  dup2\n    /* \"#utility.yul\":2544:2557   */\n  mload\n    /* \"#utility.yul\":2575:2665   */\n  tag_78\n    /* \"#utility.yul\":2661:2664   */\n  dup5\n    /* \"#utility.yul\":2653:2659   */\n  dup3\n    /* \"#utility.yul\":2646:2650   */\n  0x20\n    /* \"#utility.yul\":2638:2644   */\n  dup7\n    /* \"#utility.yul\":2634:2651   */\n  add\n    /* \"#utility.yul\":2575:2665   */\n  tag_21\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":2566:2665   */\n  swap2\n  pop\n    /* \"#utility.yul\":2389:2671   */\n  pop\n    /* \"#utility.yul\":2316:2671   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2677:2803   */\ntag_23:\n    /* \"#utility.yul\":2714:2721   */\n  0x00\n    /* \"#utility.yul\":2754:2796   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2747:2752   */\n  dup3\n    /* \"#utility.yul\":2743:2797   */\n  and\n    /* \"#utility.yul\":2732:2797   */\n  swap1\n  pop\n    /* \"#utility.yul\":2677:2803   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2809:2905   */\ntag_24:\n    /* \"#utility.yul\":2846:2853   */\n  0x00\n    /* \"#utility.yul\":2875:2899   */\n  tag_81\n    /* \"#utility.yul\":2893:2898   */\n  dup3\n    /* \"#utility.yul\":2875:2899   */\n  tag_23\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":2864:2899   */\n  swap1\n  pop\n    /* \"#utility.yul\":2809:2905   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2911:3033   */\ntag_25:\n    /* \"#utility.yul\":2984:3008   */\n  tag_83\n    /* \"#utility.yul\":3002:3007   */\n  dup2\n    /* \"#utility.yul\":2984:3008   */\n  tag_24\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":2977:2982   */\n  dup2\n    /* \"#utility.yul\":2974:3009   */\n  eq\n    /* \"#utility.yul\":2964:3027   */\n  tag_84\n  jumpi\n    /* \"#utility.yul\":3023:3024   */\n  0x00\n    /* \"#utility.yul\":3020:3021   */\n  dup1\n    /* \"#utility.yul\":3013:3025   */\n  revert\n    /* \"#utility.yul\":2964:3027   */\ntag_84:\n    /* \"#utility.yul\":2911:3033   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3039:3182   */\ntag_26:\n    /* \"#utility.yul\":3096:3101   */\n  0x00\n    /* \"#utility.yul\":3127:3133   */\n  dup2\n    /* \"#utility.yul\":3121:3134   */\n  mload\n    /* \"#utility.yul\":3112:3134   */\n  swap1\n  pop\n    /* \"#utility.yul\":3143:3176   */\n  tag_86\n    /* \"#utility.yul\":3170:3175   */\n  dup2\n    /* \"#utility.yul\":3143:3176   */\n  tag_25\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":3039:3182   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3188:4197   */\ntag_3:\n    /* \"#utility.yul\":3296:3302   */\n  0x00\n    /* \"#utility.yul\":3304:3310   */\n  dup1\n    /* \"#utility.yul\":3312:3318   */\n  0x00\n    /* \"#utility.yul\":3361:3363   */\n  0x60\n    /* \"#utility.yul\":3349:3358   */\n  dup5\n    /* \"#utility.yul\":3340:3347   */\n  dup7\n    /* \"#utility.yul\":3336:3359   */\n  sub\n    /* \"#utility.yul\":3332:3364   */\n  slt\n    /* \"#utility.yul\":3329:3448   */\n  iszero\n  tag_88\n  jumpi\n    /* \"#utility.yul\":3367:3446   */\n  tag_89\n  tag_11\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":3329:3448   */\ntag_88:\n    /* \"#utility.yul\":3508:3509   */\n  0x00\n    /* \"#utility.yul\":3497:3506   */\n  dup5\n    /* \"#utility.yul\":3493:3510   */\n  add\n    /* \"#utility.yul\":3487:3511   */\n  mload\n    /* \"#utility.yul\":3538:3556   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3530:3536   */\n  dup2\n    /* \"#utility.yul\":3527:3557   */\n  gt\n    /* \"#utility.yul\":3524:3641   */\n  iszero\n  tag_90\n  jumpi\n    /* \"#utility.yul\":3560:3639   */\n  tag_91\n  tag_12\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":3524:3641   */\ntag_90:\n    /* \"#utility.yul\":3665:3739   */\n  tag_92\n    /* \"#utility.yul\":3731:3738   */\n  dup7\n    /* \"#utility.yul\":3722:3728   */\n  dup3\n    /* \"#utility.yul\":3711:3720   */\n  dup8\n    /* \"#utility.yul\":3707:3729   */\n  add\n    /* \"#utility.yul\":3665:3739   */\n  tag_22\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":3655:3739   */\n  swap4\n  pop\n    /* \"#utility.yul\":3458:3749   */\n  pop\n    /* \"#utility.yul\":3809:3811   */\n  0x20\n    /* \"#utility.yul\":3798:3807   */\n  dup5\n    /* \"#utility.yul\":3794:3812   */\n  add\n    /* \"#utility.yul\":3788:3813   */\n  mload\n    /* \"#utility.yul\":3840:3858   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3832:3838   */\n  dup2\n    /* \"#utility.yul\":3829:3859   */\n  gt\n    /* \"#utility.yul\":3826:3943   */\n  iszero\n  tag_93\n  jumpi\n    /* \"#utility.yul\":3862:3941   */\n  tag_94\n  tag_12\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":3826:3943   */\ntag_93:\n    /* \"#utility.yul\":3967:4041   */\n  tag_95\n    /* \"#utility.yul\":4033:4040   */\n  dup7\n    /* \"#utility.yul\":4024:4030   */\n  dup3\n    /* \"#utility.yul\":4013:4022   */\n  dup8\n    /* \"#utility.yul\":4009:4031   */\n  add\n    /* \"#utility.yul\":3967:4041   */\n  tag_22\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":3957:4041   */\n  swap3\n  pop\n    /* \"#utility.yul\":3759:4051   */\n  pop\n    /* \"#utility.yul\":4090:4092   */\n  0x40\n    /* \"#utility.yul\":4116:4180   */\n  tag_96\n    /* \"#utility.yul\":4172:4179   */\n  dup7\n    /* \"#utility.yul\":4163:4169   */\n  dup3\n    /* \"#utility.yul\":4152:4161   */\n  dup8\n    /* \"#utility.yul\":4148:4170   */\n  add\n    /* \"#utility.yul\":4116:4180   */\n  tag_26\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":4106:4180   */\n  swap2\n  pop\n    /* \"#utility.yul\":4061:4190   */\n  pop\n    /* \"#utility.yul\":3188:4197   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":4203:4302   */\ntag_27:\n    /* \"#utility.yul\":4255:4261   */\n  0x00\n    /* \"#utility.yul\":4289:4294   */\n  dup2\n    /* \"#utility.yul\":4283:4295   */\n  mload\n    /* \"#utility.yul\":4273:4295   */\n  swap1\n  pop\n    /* \"#utility.yul\":4203:4302   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4308:4488   */\ntag_28:\n    /* \"#utility.yul\":4356:4433   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4353:4354   */\n  0x00\n    /* \"#utility.yul\":4346:4434   */\n  mstore\n    /* \"#utility.yul\":4453:4457   */\n  0x22\n    /* \"#utility.yul\":4450:4451   */\n  0x04\n    /* \"#utility.yul\":4443:4458   */\n  mstore\n    /* \"#utility.yul\":4477:4481   */\n  0x24\n    /* \"#utility.yul\":4474:4475   */\n  0x00\n    /* \"#utility.yul\":4467:4482   */\n  revert\n    /* \"#utility.yul\":4494:4814   */\ntag_29:\n    /* \"#utility.yul\":4538:4544   */\n  0x00\n    /* \"#utility.yul\":4575:4576   */\n  0x02\n    /* \"#utility.yul\":4569:4573   */\n  dup3\n    /* \"#utility.yul\":4565:4577   */\n  div\n    /* \"#utility.yul\":4555:4577   */\n  swap1\n  pop\n    /* \"#utility.yul\":4622:4623   */\n  0x01\n    /* \"#utility.yul\":4616:4620   */\n  dup3\n    /* \"#utility.yul\":4612:4624   */\n  and\n    /* \"#utility.yul\":4643:4661   */\n  dup1\n    /* \"#utility.yul\":4633:4714   */\n  tag_100\n  jumpi\n    /* \"#utility.yul\":4699:4703   */\n  0x7f\n    /* \"#utility.yul\":4691:4697   */\n  dup3\n    /* \"#utility.yul\":4687:4704   */\n  and\n    /* \"#utility.yul\":4677:4704   */\n  swap2\n  pop\n    /* \"#utility.yul\":4633:4714   */\ntag_100:\n    /* \"#utility.yul\":4761:4763   */\n  0x20\n    /* \"#utility.yul\":4753:4759   */\n  dup3\n    /* \"#utility.yul\":4750:4764   */\n  lt\n    /* \"#utility.yul\":4730:4748   */\n  dup2\n    /* \"#utility.yul\":4727:4765   */\n  sub\n    /* \"#utility.yul\":4724:4808   */\n  tag_101\n  jumpi\n    /* \"#utility.yul\":4780:4798   */\n  tag_102\n  tag_28\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":4724:4808   */\ntag_101:\n    /* \"#utility.yul\":4545:4814   */\n  pop\n    /* \"#utility.yul\":4494:4814   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4820:4961   */\ntag_30:\n    /* \"#utility.yul\":4869:4873   */\n  0x00\n    /* \"#utility.yul\":4892:4895   */\n  dup2\n    /* \"#utility.yul\":4884:4895   */\n  swap1\n  pop\n    /* \"#utility.yul\":4915:4918   */\n  dup2\n    /* \"#utility.yul\":4912:4913   */\n  0x00\n    /* \"#utility.yul\":4905:4919   */\n  mstore\n    /* \"#utility.yul\":4949:4953   */\n  0x20\n    /* \"#utility.yul\":4946:4947   */\n  0x00\n    /* \"#utility.yul\":4936:4954   */\n  keccak256\n    /* \"#utility.yul\":4928:4954   */\n  swap1\n  pop\n    /* \"#utility.yul\":4820:4961   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4967:5060   */\ntag_31:\n    /* \"#utility.yul\":5004:5010   */\n  0x00\n    /* \"#utility.yul\":5051:5053   */\n  0x20\n    /* \"#utility.yul\":5046:5048   */\n  0x1f\n    /* \"#utility.yul\":5039:5044   */\n  dup4\n    /* \"#utility.yul\":5035:5049   */\n  add\n    /* \"#utility.yul\":5031:5054   */\n  div\n    /* \"#utility.yul\":5021:5054   */\n  swap1\n  pop\n    /* \"#utility.yul\":4967:5060   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5066:5173   */\ntag_32:\n    /* \"#utility.yul\":5110:5118   */\n  0x00\n    /* \"#utility.yul\":5160:5165   */\n  dup3\n    /* \"#utility.yul\":5154:5158   */\n  dup3\n    /* \"#utility.yul\":5150:5166   */\n  shl\n    /* \"#utility.yul\":5129:5166   */\n  swap1\n  pop\n    /* \"#utility.yul\":5066:5173   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5179:5572   */\ntag_33:\n    /* \"#utility.yul\":5248:5254   */\n  0x00\n    /* \"#utility.yul\":5298:5299   */\n  0x08\n    /* \"#utility.yul\":5286:5296   */\n  dup4\n    /* \"#utility.yul\":5282:5300   */\n  mul\n    /* \"#utility.yul\":5321:5418   */\n  tag_107\n    /* \"#utility.yul\":5351:5417   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5340:5349   */\n  dup3\n    /* \"#utility.yul\":5321:5418   */\n  tag_32\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":5439:5478   */\n  tag_108\n    /* \"#utility.yul\":5469:5477   */\n  dup7\n    /* \"#utility.yul\":5458:5467   */\n  dup4\n    /* \"#utility.yul\":5439:5478   */\n  tag_32\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":5427:5478   */\n  swap6\n  pop\n    /* \"#utility.yul\":5511:5515   */\n  dup1\n    /* \"#utility.yul\":5507:5516   */\n  not\n    /* \"#utility.yul\":5500:5505   */\n  dup5\n    /* \"#utility.yul\":5496:5517   */\n  and\n    /* \"#utility.yul\":5487:5517   */\n  swap4\n  pop\n    /* \"#utility.yul\":5560:5564   */\n  dup1\n    /* \"#utility.yul\":5550:5558   */\n  dup7\n    /* \"#utility.yul\":5546:5565   */\n  and\n    /* \"#utility.yul\":5539:5544   */\n  dup5\n    /* \"#utility.yul\":5536:5566   */\n  or\n    /* \"#utility.yul\":5526:5566   */\n  swap3\n  pop\n    /* \"#utility.yul\":5255:5572   */\n  pop\n  pop\n    /* \"#utility.yul\":5179:5572   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5578:5655   */\ntag_34:\n    /* \"#utility.yul\":5615:5622   */\n  0x00\n    /* \"#utility.yul\":5644:5649   */\n  dup2\n    /* \"#utility.yul\":5633:5649   */\n  swap1\n  pop\n    /* \"#utility.yul\":5578:5655   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5661:5721   */\ntag_35:\n    /* \"#utility.yul\":5689:5692   */\n  0x00\n    /* \"#utility.yul\":5710:5715   */\n  dup2\n    /* \"#utility.yul\":5703:5715   */\n  swap1\n  pop\n    /* \"#utility.yul\":5661:5721   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5727:5869   */\ntag_36:\n    /* \"#utility.yul\":5777:5786   */\n  0x00\n    /* \"#utility.yul\":5810:5863   */\n  tag_112\n    /* \"#utility.yul\":5828:5862   */\n  tag_113\n    /* \"#utility.yul\":5837:5861   */\n  tag_114\n    /* \"#utility.yul\":5855:5860   */\n  dup5\n    /* \"#utility.yul\":5837:5861   */\n  tag_34\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":5828:5862   */\n  tag_35\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":5810:5863   */\n  tag_34\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":5797:5863   */\n  swap1\n  pop\n    /* \"#utility.yul\":5727:5869   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5875:5950   */\ntag_37:\n    /* \"#utility.yul\":5918:5921   */\n  0x00\n    /* \"#utility.yul\":5939:5944   */\n  dup2\n    /* \"#utility.yul\":5932:5944   */\n  swap1\n  pop\n    /* \"#utility.yul\":5875:5950   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5956:6225   */\ntag_38:\n    /* \"#utility.yul\":6066:6105   */\n  tag_117\n    /* \"#utility.yul\":6097:6104   */\n  dup4\n    /* \"#utility.yul\":6066:6105   */\n  tag_36\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":6127:6218   */\n  tag_118\n    /* \"#utility.yul\":6176:6217   */\n  tag_119\n    /* \"#utility.yul\":6200:6216   */\n  dup3\n    /* \"#utility.yul\":6176:6217   */\n  tag_37\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":6168:6174   */\n  dup5\n    /* \"#utility.yul\":6161:6165   */\n  dup5\n    /* \"#utility.yul\":6155:6166   */\n  sload\n    /* \"#utility.yul\":6127:6218   */\n  tag_33\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":6121:6125   */\n  dup3\n    /* \"#utility.yul\":6114:6219   */\n  sstore\n    /* \"#utility.yul\":6032:6225   */\n  pop\n    /* \"#utility.yul\":5956:6225   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6231:6304   */\ntag_39:\n    /* \"#utility.yul\":6276:6279   */\n  0x00\n    /* \"#utility.yul\":6231:6304   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":6310:6499   */\ntag_40:\n    /* \"#utility.yul\":6387:6419   */\n  tag_122\n  tag_39\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":6428:6493   */\n  tag_123\n    /* \"#utility.yul\":6486:6492   */\n  dup2\n    /* \"#utility.yul\":6478:6484   */\n  dup5\n    /* \"#utility.yul\":6472:6476   */\n  dup5\n    /* \"#utility.yul\":6428:6493   */\n  tag_38\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":6363:6499   */\n  pop\n    /* \"#utility.yul\":6310:6499   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6505:6691   */\ntag_41:\n    /* \"#utility.yul\":6565:6685   */\ntag_125:\n    /* \"#utility.yul\":6582:6585   */\n  dup2\n    /* \"#utility.yul\":6575:6580   */\n  dup2\n    /* \"#utility.yul\":6572:6586   */\n  lt\n    /* \"#utility.yul\":6565:6685   */\n  iszero\n  tag_127\n  jumpi\n    /* \"#utility.yul\":6636:6675   */\n  tag_128\n    /* \"#utility.yul\":6673:6674   */\n  0x00\n    /* \"#utility.yul\":6666:6671   */\n  dup3\n    /* \"#utility.yul\":6636:6675   */\n  tag_40\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":6609:6610   */\n  0x01\n    /* \"#utility.yul\":6602:6607   */\n  dup2\n    /* \"#utility.yul\":6598:6611   */\n  add\n    /* \"#utility.yul\":6589:6611   */\n  swap1\n  pop\n    /* \"#utility.yul\":6565:6685   */\n  jump(tag_125)\ntag_127:\n    /* \"#utility.yul\":6505:6691   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6697:7240   */\ntag_42:\n    /* \"#utility.yul\":6798:6800   */\n  0x1f\n    /* \"#utility.yul\":6793:6796   */\n  dup3\n    /* \"#utility.yul\":6790:6801   */\n  gt\n    /* \"#utility.yul\":6787:7233   */\n  iszero\n  tag_130\n  jumpi\n    /* \"#utility.yul\":6832:6870   */\n  tag_131\n    /* \"#utility.yul\":6864:6869   */\n  dup2\n    /* \"#utility.yul\":6832:6870   */\n  tag_30\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":6916:6945   */\n  tag_132\n    /* \"#utility.yul\":6934:6944   */\n  dup5\n    /* \"#utility.yul\":6916:6945   */\n  tag_31\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":6906:6914   */\n  dup2\n    /* \"#utility.yul\":6902:6946   */\n  add\n    /* \"#utility.yul\":7099:7101   */\n  0x20\n    /* \"#utility.yul\":7087:7097   */\n  dup6\n    /* \"#utility.yul\":7084:7102   */\n  lt\n    /* \"#utility.yul\":7081:7130   */\n  iszero\n  tag_133\n  jumpi\n    /* \"#utility.yul\":7120:7128   */\n  dup2\n    /* \"#utility.yul\":7105:7128   */\n  swap1\n  pop\n    /* \"#utility.yul\":7081:7130   */\ntag_133:\n    /* \"#utility.yul\":7143:7223   */\n  tag_134\n    /* \"#utility.yul\":7199:7221   */\n  tag_135\n    /* \"#utility.yul\":7217:7220   */\n  dup6\n    /* \"#utility.yul\":7199:7221   */\n  tag_31\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":7189:7197   */\n  dup4\n    /* \"#utility.yul\":7185:7222   */\n  add\n    /* \"#utility.yul\":7172:7183   */\n  dup3\n    /* \"#utility.yul\":7143:7223   */\n  tag_41\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":6802:7233   */\n  pop\n  pop\n    /* \"#utility.yul\":6787:7233   */\ntag_130:\n    /* \"#utility.yul\":6697:7240   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7246:7363   */\ntag_43:\n    /* \"#utility.yul\":7300:7308   */\n  0x00\n    /* \"#utility.yul\":7350:7355   */\n  dup3\n    /* \"#utility.yul\":7344:7348   */\n  dup3\n    /* \"#utility.yul\":7340:7356   */\n  shr\n    /* \"#utility.yul\":7319:7356   */\n  swap1\n  pop\n    /* \"#utility.yul\":7246:7363   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7369:7538   */\ntag_44:\n    /* \"#utility.yul\":7413:7419   */\n  0x00\n    /* \"#utility.yul\":7446:7497   */\n  tag_138\n    /* \"#utility.yul\":7494:7495   */\n  0x00\n    /* \"#utility.yul\":7490:7496   */\n  not\n    /* \"#utility.yul\":7482:7487   */\n  dup5\n    /* \"#utility.yul\":7479:7480   */\n  0x08\n    /* \"#utility.yul\":7475:7488   */\n  mul\n    /* \"#utility.yul\":7446:7497   */\n  tag_43\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":7442:7498   */\n  not\n    /* \"#utility.yul\":7527:7531   */\n  dup1\n    /* \"#utility.yul\":7521:7525   */\n  dup4\n    /* \"#utility.yul\":7517:7532   */\n  and\n    /* \"#utility.yul\":7507:7532   */\n  swap2\n  pop\n    /* \"#utility.yul\":7420:7538   */\n  pop\n    /* \"#utility.yul\":7369:7538   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7543:7838   */\ntag_45:\n    /* \"#utility.yul\":7619:7623   */\n  0x00\n    /* \"#utility.yul\":7765:7794   */\n  tag_140\n    /* \"#utility.yul\":7790:7793   */\n  dup4\n    /* \"#utility.yul\":7784:7788   */\n  dup4\n    /* \"#utility.yul\":7765:7794   */\n  tag_44\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":7757:7794   */\n  swap2\n  pop\n    /* \"#utility.yul\":7827:7830   */\n  dup3\n    /* \"#utility.yul\":7824:7825   */\n  0x02\n    /* \"#utility.yul\":7820:7831   */\n  mul\n    /* \"#utility.yul\":7814:7818   */\n  dup3\n    /* \"#utility.yul\":7811:7832   */\n  or\n    /* \"#utility.yul\":7803:7832   */\n  swap1\n  pop\n    /* \"#utility.yul\":7543:7838   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7843:9238   */\ntag_7:\n    /* \"#utility.yul\":7960:7997   */\n  tag_142\n    /* \"#utility.yul\":7993:7996   */\n  dup3\n    /* \"#utility.yul\":7960:7997   */\n  tag_27\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":8062:8080   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":8054:8060   */\n  dup2\n    /* \"#utility.yul\":8051:8081   */\n  gt\n    /* \"#utility.yul\":8048:8104   */\n  iszero\n  tag_143\n  jumpi\n    /* \"#utility.yul\":8084:8102   */\n  tag_144\n  tag_16\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":8048:8104   */\ntag_143:\n    /* \"#utility.yul\":8128:8166   */\n  tag_145\n    /* \"#utility.yul\":8160:8164   */\n  dup3\n    /* \"#utility.yul\":8154:8165   */\n  sload\n    /* \"#utility.yul\":8128:8166   */\n  tag_29\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":8213:8280   */\n  tag_146\n    /* \"#utility.yul\":8273:8279   */\n  dup3\n    /* \"#utility.yul\":8265:8271   */\n  dup3\n    /* \"#utility.yul\":8259:8263   */\n  dup6\n    /* \"#utility.yul\":8213:8280   */\n  tag_42\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":8307:8308   */\n  0x00\n    /* \"#utility.yul\":8331:8335   */\n  0x20\n    /* \"#utility.yul\":8318:8335   */\n  swap1\n  pop\n    /* \"#utility.yul\":8363:8365   */\n  0x1f\n    /* \"#utility.yul\":8355:8361   */\n  dup4\n    /* \"#utility.yul\":8352:8366   */\n  gt\n    /* \"#utility.yul\":8380:8381   */\n  0x01\n    /* \"#utility.yul\":8375:8993   */\n  dup2\n  eq\n  tag_148\n  jumpi\n    /* \"#utility.yul\":9037:9038   */\n  0x00\n    /* \"#utility.yul\":9054:9060   */\n  dup5\n    /* \"#utility.yul\":9051:9128   */\n  iszero\n  tag_149\n  jumpi\n    /* \"#utility.yul\":9103:9112   */\n  dup3\n    /* \"#utility.yul\":9098:9101   */\n  dup8\n    /* \"#utility.yul\":9094:9113   */\n  add\n    /* \"#utility.yul\":9088:9114   */\n  mload\n    /* \"#utility.yul\":9079:9114   */\n  swap1\n  pop\n    /* \"#utility.yul\":9051:9128   */\ntag_149:\n    /* \"#utility.yul\":9154:9221   */\n  tag_150\n    /* \"#utility.yul\":9214:9220   */\n  dup6\n    /* \"#utility.yul\":9207:9212   */\n  dup3\n    /* \"#utility.yul\":9154:9221   */\n  tag_45\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":9148:9152   */\n  dup7\n    /* \"#utility.yul\":9141:9222   */\n  sstore\n    /* \"#utility.yul\":9010:9232   */\n  pop\n    /* \"#utility.yul\":8345:9232   */\n  jump(tag_147)\n    /* \"#utility.yul\":8375:8993   */\ntag_148:\n    /* \"#utility.yul\":8427:8431   */\n  0x1f\n    /* \"#utility.yul\":8423:8432   */\n  not\n    /* \"#utility.yul\":8415:8421   */\n  dup5\n    /* \"#utility.yul\":8411:8433   */\n  and\n    /* \"#utility.yul\":8461:8498   */\n  tag_151\n    /* \"#utility.yul\":8493:8497   */\n  dup7\n    /* \"#utility.yul\":8461:8498   */\n  tag_30\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":8520:8521   */\n  0x00\n    /* \"#utility.yul\":8534:8742   */\ntag_152:\n    /* \"#utility.yul\":8548:8555   */\n  dup3\n    /* \"#utility.yul\":8545:8546   */\n  dup2\n    /* \"#utility.yul\":8542:8556   */\n  lt\n    /* \"#utility.yul\":8534:8742   */\n  iszero\n  tag_154\n  jumpi\n    /* \"#utility.yul\":8627:8636   */\n  dup5\n    /* \"#utility.yul\":8622:8625   */\n  dup10\n    /* \"#utility.yul\":8618:8637   */\n  add\n    /* \"#utility.yul\":8612:8638   */\n  mload\n    /* \"#utility.yul\":8604:8610   */\n  dup3\n    /* \"#utility.yul\":8597:8639   */\n  sstore\n    /* \"#utility.yul\":8678:8679   */\n  0x01\n    /* \"#utility.yul\":8670:8676   */\n  dup3\n    /* \"#utility.yul\":8666:8680   */\n  add\n    /* \"#utility.yul\":8656:8680   */\n  swap2\n  pop\n    /* \"#utility.yul\":8725:8727   */\n  0x20\n    /* \"#utility.yul\":8714:8723   */\n  dup6\n    /* \"#utility.yul\":8710:8728   */\n  add\n    /* \"#utility.yul\":8697:8728   */\n  swap5\n  pop\n    /* \"#utility.yul\":8571:8575   */\n  0x20\n    /* \"#utility.yul\":8568:8569   */\n  dup2\n    /* \"#utility.yul\":8564:8576   */\n  add\n    /* \"#utility.yul\":8559:8576   */\n  swap1\n  pop\n    /* \"#utility.yul\":8534:8742   */\n  jump(tag_152)\ntag_154:\n    /* \"#utility.yul\":8770:8776   */\n  dup7\n    /* \"#utility.yul\":8761:8768   */\n  dup4\n    /* \"#utility.yul\":8758:8777   */\n  lt\n    /* \"#utility.yul\":8755:8934   */\n  iszero\n  tag_155\n  jumpi\n    /* \"#utility.yul\":8828:8837   */\n  dup5\n    /* \"#utility.yul\":8823:8826   */\n  dup10\n    /* \"#utility.yul\":8819:8838   */\n  add\n    /* \"#utility.yul\":8813:8839   */\n  mload\n    /* \"#utility.yul\":8871:8919   */\n  tag_156\n    /* \"#utility.yul\":8913:8917   */\n  0x1f\n    /* \"#utility.yul\":8905:8911   */\n  dup10\n    /* \"#utility.yul\":8901:8918   */\n  and\n    /* \"#utility.yul\":8890:8899   */\n  dup3\n    /* \"#utility.yul\":8871:8919   */\n  tag_44\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":8863:8869   */\n  dup4\n    /* \"#utility.yul\":8856:8920   */\n  sstore\n    /* \"#utility.yul\":8778:8934   */\n  pop\n    /* \"#utility.yul\":8755:8934   */\ntag_155:\n    /* \"#utility.yul\":8980:8981   */\n  0x01\n    /* \"#utility.yul\":8976:8977   */\n  0x02\n    /* \"#utility.yul\":8968:8974   */\n  dup9\n    /* \"#utility.yul\":8964:8978   */\n  mul\n    /* \"#utility.yul\":8960:8982   */\n  add\n    /* \"#utility.yul\":8954:8958   */\n  dup9\n    /* \"#utility.yul\":8947:8983   */\n  sstore\n    /* \"#utility.yul\":8382:8993   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8345:9232   */\ntag_147:\n  pop\n    /* \"#utility.yul\":7935:9238   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7843:9238   */\n  pop\n  pop\n  jump\t// out\n    /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":628:17185  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":628:17185  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xb2bdfa7b\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xb2bdfa7b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x6352211e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x095ea7b3\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x30e0789e\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1757:2057  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2658:2756  function name() public view virtual override returns (string memory) {... */\n    tag_4:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4122:4289  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_5:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3655:4061  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_6:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      stop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4799:5095  function transferFrom(address from, address to, uint256 tokenId) public virtual override {... */\n    tag_7:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      stop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11444:12640  function _transfer(address from, address to, uint256 tokenId) public  {... */\n    tag_8:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n    tag_45:\n      stop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5161:5310  function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {... */\n    tag_9:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n    tag_48:\n      stop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2377:2596  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_10:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2116:2320  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_11:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2820:2922  function symbol() public view virtual override returns (string memory) {... */\n    tag_12:\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4356:4509  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_13:\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      tag_67\n      jump\t// in\n    tag_64:\n      stop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":757:778  address public _owner */\n    tag_14:\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5376:5652  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {... */\n    tag_15:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      tag_74\n      jump\t// in\n    tag_71:\n      stop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2988:3264  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_16:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4575:4737  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_17:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      tag_82\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1757:2057  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_24:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1859:1863  bool */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1909:1934  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1894:1934  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1894:1905  interfaceId */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1894:1934  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1894:1998  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_85\n      jumpi\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1965:1998  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1950:1998  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1950:1961  interfaceId */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1950:1998  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1894:1998  interfaceId == type(IERC721).interfaceId ||... */\n    tag_85:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1894:2050  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_86\n      jumpi\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2014:2050  super.supportsInterface(interfaceId) */\n      tag_87\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2038:2049  interfaceId */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2014:2037  super.supportsInterface */\n      tag_88\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2014:2050  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_87:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1894:2050  interfaceId == type(IERC721).interfaceId ||... */\n    tag_86:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1875:2050  return... */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1757:2057  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2658:2756  function name() public view virtual override returns (string memory) {... */\n    tag_28:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2712:2725  string memory */\n      0x60\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2744:2749  _name */\n      0x01\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2737:2749  return _name */\n      dup1\n      sload\n      tag_90\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_92\n      swap1\n      tag_91\n      jump\t// in\n    tag_92:\n      dup1\n      iszero\n      tag_93\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_94\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_93)\n    tag_94:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_95:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_95\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_93:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2658:2756  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4122:4289  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_34:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4198:4205  address */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4217:4240  _requireMinted(tokenId) */\n      tag_97\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4232:4239  tokenId */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4217:4231  _requireMinted */\n      tag_98\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4217:4240  _requireMinted(tokenId) */\n      jump\t// in\n    tag_97:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4258:4273  _tokenApprovals */\n      0x05\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4258:4282  _tokenApprovals[tokenId] */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4274:4281  tokenId */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4258:4282  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4251:4282  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4122:4289  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3655:4061  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_40:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3735:3748  address owner */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3751:3774  ERC721.ownerOf(tokenId) */\n      tag_100\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3766:3773  tokenId */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3751:3765  ERC721.ownerOf */\n      tag_53\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3751:3774  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_100:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3735:3774  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3798:3803  owner */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3792:3803  to != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3792:3794  to */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3792:3803  to != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3784:3841  require(to != owner, \"ERC721: approval to current owner\") */\n      tag_101\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_101:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3889:3894  owner */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3873:3894  _msgSender() == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3873:3885  _msgSender() */\n      tag_104\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3873:3883  _msgSender */\n      tag_105\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3873:3885  _msgSender() */\n      jump\t// in\n    tag_104:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3873:3894  _msgSender() == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3873:3935  _msgSender() == owner || isApprovedForAll(owner, _msgSender()) */\n      dup1\n      tag_106\n      jumpi\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3898:3935  isApprovedForAll(owner, _msgSender()) */\n      tag_107\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3915:3920  owner */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3922:3934  _msgSender() */\n      tag_108\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3922:3932  _msgSender */\n      tag_105\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3922:3934  _msgSender() */\n      jump\t// in\n    tag_108:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3898:3914  isApprovedForAll */\n      tag_82\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3898:3935  isApprovedForAll(owner, _msgSender()) */\n      jump\t// in\n    tag_107:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3873:3935  _msgSender() == owner || isApprovedForAll(owner, _msgSender()) */\n    tag_106:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3852:4022  require(... */\n      tag_109\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_109:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4033:4054  _approve(to, tokenId) */\n      tag_112\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4042:4044  to */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4046:4053  tokenId */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4033:4041  _approve */\n      tag_113\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4033:4054  _approve(to, tokenId) */\n      jump\t// in\n    tag_112:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3725:4061  {... */\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3655:4061  function approve(address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4799:5095  function transferFrom(address from, address to, uint256 tokenId) public virtual override {... */\n    tag_44:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4958:4999  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_115\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4977:4989  _msgSender() */\n      tag_116\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4977:4987  _msgSender */\n      tag_105\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4977:4989  _msgSender() */\n      jump\t// in\n    tag_116:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4991:4998  tokenId */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4958:4976  _isApprovedOrOwner */\n      tag_117\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4958:4999  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_115:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4950:5049  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\") */\n      tag_118\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_119\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_118:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5060:5088  _transfer(from, to, tokenId) */\n      tag_121\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5070:5074  from */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5076:5078  to */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5080:5087  tokenId */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5060:5069  _transfer */\n      tag_47\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5060:5088  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_121:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4799:5095  function transferFrom(address from, address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11444:12640  function _transfer(address from, address to, uint256 tokenId) public  {... */\n    tag_47:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11559:11563  from */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11532:11563  ERC721.ownerOf(tokenId) == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11532:11555  ERC721.ownerOf(tokenId) */\n      tag_123\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11547:11554  tokenId */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11532:11546  ERC721.ownerOf */\n      tag_53\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11532:11555  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_123:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11532:11563  ERC721.ownerOf(tokenId) == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11524:11605  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_124:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11693:11735  _beforeTokenTransfer(from, to, tokenId, 1) */\n      tag_127\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11714:11718  from */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11720:11722  to */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11724:11731  tokenId */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11733:11734  1 */\n      0x01\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11693:11713  _beforeTokenTransfer */\n      tag_128\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11693:11735  _beforeTokenTransfer(from, to, tokenId, 1) */\n      jump\t// in\n    tag_127:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11862:11866  from */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11835:11866  ERC721.ownerOf(tokenId) == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11835:11858  ERC721.ownerOf(tokenId) */\n      tag_129\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11850:11857  tokenId */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11835:11849  ERC721.ownerOf */\n      tag_53\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11835:11858  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_129:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11835:11866  ERC721.ownerOf(tokenId) == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11827:11908  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      tag_130\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_131\n      swap1\n      tag_126\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_130:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11977:11992  _tokenApprovals */\n      0x05\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11977:12001  _tokenApprovals[tokenId] */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11993:12000  tokenId */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11977:12001  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11970:12001  delete _tokenApprovals[tokenId] */\n      0x0100\n      exp\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12464:12465  1 */\n      0x01\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12445:12454  _balances */\n      0x04\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12445:12460  _balances[from] */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12455:12459  from */\n      dup6\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12445:12460  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12445:12465  _balances[from] -= 1 */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12496:12497  1 */\n      0x01\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12479:12488  _balances */\n      0x04\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12479:12492  _balances[to] */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12489:12491  to */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12479:12492  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12479:12497  _balances[to] += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12536:12538  to */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12517:12524  _owners */\n      0x03\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12517:12533  _owners[tokenId] */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12525:12532  tokenId */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12517:12533  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12517:12538  _owners[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12573:12580  tokenId */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12569:12571  to */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12554:12581  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12563:12567  from */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12554:12581  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12592:12633  _afterTokenTransfer(from, to, tokenId, 1) */\n      tag_132\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12612:12616  from */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12618:12620  to */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12622:12629  tokenId */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12631:12632  1 */\n      0x01\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12592:12611  _afterTokenTransfer */\n      tag_133\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12592:12633  _afterTokenTransfer(from, to, tokenId, 1) */\n      jump\t// in\n    tag_132:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11444:12640  function _transfer(address from, address to, uint256 tokenId) public  {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5161:5310  function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {... */\n    tag_50:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5264:5303  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_135\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5281:5285  from */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5287:5289  to */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5291:5298  tokenId */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5264:5303  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5264:5280  safeTransferFrom */\n      tag_74\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5264:5303  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_135:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5161:5310  function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2377:2596  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_53:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2449:2456  address */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2468:2481  address owner */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2484:2501  _ownerOf(tokenId) */\n      tag_137\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2493:2500  tokenId */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2484:2492  _ownerOf */\n      tag_138\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2484:2501  _ownerOf(tokenId) */\n      jump\t// in\n    tag_137:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2468:2501  address owner = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2536:2537  0 */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2519:2538  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2519:2524  owner */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2519:2538  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2511:2567  require(owner != address(0), \"ERC721: invalid token ID\") */\n      tag_139\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_140\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_139:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2584:2589  owner */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2577:2589  return owner */\n      swap2\n      pop\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2377:2596  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2116:2320  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_58:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2188:2195  uint256 */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2232:2233  0 */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2215:2234  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2215:2220  owner */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2215:2234  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2207:2280  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n      tag_143\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_144\n      swap1\n      tag_145\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_143:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2297:2306  _balances */\n      0x04\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2297:2313  _balances[owner] */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2307:2312  owner */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2297:2313  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2290:2313  return _balances[owner] */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2116:2320  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2820:2922  function symbol() public view virtual override returns (string memory) {... */\n    tag_62:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2876:2889  string memory */\n      0x60\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2908:2915  _symbol */\n      0x02\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2915  return _symbol */\n      dup1\n      sload\n      tag_147\n      swap1\n      tag_91\n      jump\t// in\n    tag_147:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_148\n      swap1\n      tag_91\n      jump\t// in\n    tag_148:\n      dup1\n      iszero\n      tag_149\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_150\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_149)\n    tag_150:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_151:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_151\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_149:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2820:2922  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4356:4509  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_67:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4450:4502  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_153\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4469:4481  _msgSender() */\n      tag_154\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4469:4479  _msgSender */\n      tag_105\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4469:4481  _msgSender() */\n      jump\t// in\n    tag_154:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4483:4491  operator */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4493:4501  approved */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4450:4468  _setApprovalForAll */\n      tag_155\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4450:4502  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_153:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4356:4509  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":757:778  address public _owner */\n    tag_69:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5376:5652  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {... */\n    tag_74:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5506:5547  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_157\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5525:5537  _msgSender() */\n      tag_158\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5525:5535  _msgSender */\n      tag_105\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5525:5537  _msgSender() */\n      jump\t// in\n    tag_158:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5539:5546  tokenId */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5506:5524  _isApprovedOrOwner */\n      tag_117\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5506:5547  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_157:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5498:5597  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\") */\n      tag_159\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_160\n      swap1\n      tag_120\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_159:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5607:5645  _safeTransfer(from, to, tokenId, data) */\n      tag_161\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5621:5625  from */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5627:5629  to */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5631:5638  tokenId */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5640:5644  data */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5607:5620  _safeTransfer */\n      tag_162\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5607:5645  _safeTransfer(from, to, tokenId, data) */\n      jump\t// in\n    tag_161:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5376:5652  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2988:3264  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_77:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3061:3074  string memory */\n      0x60\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3086:3109  _requireMinted(tokenId) */\n      tag_164\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3101:3108  tokenId */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3086:3100  _requireMinted */\n      tag_98\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3086:3109  _requireMinted(tokenId) */\n      jump\t// in\n    tag_164:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3120:3141  string memory baseURI */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3144:3154  _baseURI() */\n      tag_165\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3144:3152  _baseURI */\n      tag_166\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3144:3154  _baseURI() */\n      jump\t// in\n    tag_165:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3120:3154  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3195:3196  0 */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3177:3184  baseURI */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3171:3192  bytes(baseURI).length */\n      mload\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3171:3196  bytes(baseURI).length > 0 */\n      gt\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3171:3257  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      tag_167\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_168)\n    tag_167:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3223:3230  baseURI */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3232:3250  tokenId.toString() */\n      tag_169\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3232:3239  tokenId */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3232:3248  tokenId.toString */\n      tag_170\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3232:3250  tokenId.toString() */\n      jump\t// in\n    tag_169:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3206:3251  abi.encodePacked(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_171\n      swap3\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3171:3257  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n    tag_168:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3164:3257  return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      swap2\n      pop\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2988:3264  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4575:4737  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_82:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4672:4676  bool */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4695:4713  _operatorApprovals */\n      0x06\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4695:4720  _operatorApprovals[owner] */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4714:4719  owner */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4695:4720  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4695:4730  _operatorApprovals[owner][operator] */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4721:4729  operator */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4695:4730  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4688:4730  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4575:4737  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_88:\n        /* \".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol\":914:918  bool */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol\":952:977  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:948  interfaceId */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol\":930:977  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13420:13553  function _requireMinted(uint256 tokenId) internal view virtual {... */\n    tag_98:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13501:13517  _exists(tokenId) */\n      tag_176\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13509:13516  tokenId */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13501:13508  _exists */\n      tag_177\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13501:13517  _exists(tokenId) */\n      jump\t// in\n    tag_176:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13493:13546  require(_exists(tokenId), \"ERC721: invalid token ID\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap1\n      tag_141\n      jump\t// in\n    tag_179:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_178:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13420:13553  function _requireMinted(uint256 tokenId) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_105:\n        /* \".deps/npm/@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \".deps/npm/@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12752:12923  function _approve(address to, uint256 tokenId) internal virtual {... */\n    tag_113:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12853:12855  to */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12826:12841  _tokenApprovals */\n      0x05\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12826:12850  _tokenApprovals[tokenId] */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12842:12849  tokenId */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12826:12850  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12826:12855  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12908:12915  tokenId */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12904:12906  to */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12870:12916  Approval(ERC721.ownerOf(tokenId), to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12879:12902  ERC721.ownerOf(tokenId) */\n      tag_182\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12894:12901  tokenId */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12879:12893  ERC721.ownerOf */\n      tag_53\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12879:12902  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_182:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12870:12916  Approval(ERC721.ownerOf(tokenId), to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12752:12923  function _approve(address to, uint256 tokenId) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7591:7852  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_117:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7684:7688  bool */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7700:7713  address owner */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7716:7739  ERC721.ownerOf(tokenId) */\n      tag_184\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7731:7738  tokenId */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7716:7730  ERC721.ownerOf */\n      tag_53\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7716:7739  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_184:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7700:7739  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7768:7773  owner */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7757:7773  spender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7757:7764  spender */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7757:7773  spender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7757:7809  spender == owner || isApprovedForAll(owner, spender) */\n      dup1\n      tag_185\n      jumpi\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7777:7809  isApprovedForAll(owner, spender) */\n      tag_186\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7794:7799  owner */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7801:7808  spender */\n      dup6\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7777:7793  isApprovedForAll */\n      tag_82\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7777:7809  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_186:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7757:7809  spender == owner || isApprovedForAll(owner, spender) */\n    tag_185:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7757:7844  spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender */\n      dup1\n      tag_187\n      jumpi\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7837:7844  spender */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7813:7844  getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7813:7833  getApproved(tokenId) */\n      tag_188\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7825:7832  tokenId */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7813:7824  getApproved */\n      tag_34\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7813:7833  getApproved(tokenId) */\n      jump\t// in\n    tag_188:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7813:7844  getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7757:7844  spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender */\n    tag_187:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7749:7845  return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender) */\n      swap2\n      pop\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7591:7852  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15652:15768  function _beforeTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {} */\n    tag_128:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16474:16589  function _afterTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {} */\n    tag_133:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6889:7004  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_138:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6955:6962  address */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6981:6988  _owners */\n      0x03\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6981:6997  _owners[tokenId] */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6989:6996  tokenId */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6981:6997  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6974:6997  return _owners[tokenId] */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6889:7004  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13059:13336  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_155:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13179:13187  operator */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13170:13187  owner != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13170:13175  owner */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13170:13187  owner != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13162:13217  require(owner != operator, \"ERC721: approve to caller\") */\n      tag_193\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_194\n      swap1\n      tag_195\n      jump\t// in\n    tag_194:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_193:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13265:13273  approved */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13227:13245  _operatorApprovals */\n      0x06\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13227:13252  _operatorApprovals[owner] */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13246:13251  owner */\n      dup6\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13227:13252  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13227:13262  _operatorApprovals[owner][operator] */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13253:13261  operator */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13227:13262  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13227:13273  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13310:13318  operator */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13288:13329  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13303:13308  owner */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13288:13329  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13320:13328  approved */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13288:13329  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_196\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_196:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13059:13336  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6513:6780  function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {... */\n    tag_162:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6625:6653  _transfer(from, to, tokenId) */\n      tag_198\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6635:6639  from */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6641:6643  to */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6645:6652  tokenId */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6625:6634  _transfer */\n      tag_47\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6625:6653  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_198:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6671:6718  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_199\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6694:6698  from */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6700:6702  to */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6704:6711  tokenId */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6713:6717  data */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6671:6693  _checkOnERC721Received */\n      tag_200\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6671:6718  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_199:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6663:6773  require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\") */\n      tag_201\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_203\n      jump\t// in\n    tag_202:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_201:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6513:6780  function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3506:3598  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_166:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3557:3570  string memory */\n      0x60\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3582:3591  return \"\" */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3506:3598  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":447:1143  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_170:\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":503:516  string memory */\n      0x60\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":552:566  uint256 length */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":589:590  1 */\n      0x01\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":569:586  Math.log10(value) */\n      tag_206\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":580:585  value */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":569:579  Math.log10 */\n      tag_207\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":569:586  Math.log10(value) */\n      jump\t// in\n    tag_206:\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":569:590  Math.log10(value) + 1 */\n      add\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":552:590  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":604:624  string memory buffer */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":638:644  length */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":627:645  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_208\n      jumpi\n      tag_209\n      tag_210\n      jump\t// in\n    tag_209:\n    tag_208:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_211\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_211:\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":604:645  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":659:670  uint256 ptr */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":785:791  length */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":781:783  32 */\n      0x20\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":777:792  add(32, length) */\n      add\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":769:775  buffer */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":765:793  add(buffer, add(32, length)) */\n      add\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":758:793  ptr := add(buffer, add(32, length)) */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":820:1100  while (true) {... */\n    tag_212:\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":827:831  true */\n      0x01\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":820:1100  while (true) {... */\n      iszero\n      tag_213\n      jumpi\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":851:856  ptr-- */\n      dup1\n      dup1\n      0x01\n      swap1\n      sub\n      swap2\n      pop\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":990:998  _SYMBOLS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":985:987  10 */\n      0x0a\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":978:983  value */\n      dup7\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":974:988  mod(value, 10) */\n      mod\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":969:999  byte(mod(value, 10), _SYMBOLS) */\n      byte\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":964:967  ptr */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":956:1000  mstore8(ptr, byte(mod(value, 10), _SYMBOLS)) */\n      mstore8\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":1044:1046  10 */\n      0x0a\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":1035:1046  value /= 10 */\n      dup6\n      dup2\n      tag_214\n      jumpi\n      tag_215\n      tag_216\n      jump\t// in\n    tag_215:\n    tag_214:\n      div\n      swap5\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":1077:1078  0 */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":1068:1073  value */\n      dup6\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":1068:1078  value == 0 */\n      sub\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":820:1100  while (true) {... */\n      tag_212\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":1064:1085  if (value == 0) break */\n      jumpi\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":820:1100  while (true) {... */\n    tag_213:\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":1120:1126  buffer */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":1113:1126  return buffer */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":447:1143  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7307:7433  function _exists(uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_177:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7372:7376  bool */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7424:7425  0 */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7395:7426  _ownerOf(tokenId) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7395:7412  _ownerOf(tokenId) */\n      tag_219\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7404:7411  tokenId */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7395:7403  _ownerOf */\n      tag_138\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7395:7412  _ownerOf(tokenId) */\n      jump\t// in\n    tag_219:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7395:7426  _ownerOf(tokenId) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7388:7426  return _ownerOf(tokenId) != address(0) */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7307:7433  function _exists(uint256 tokenId) internal view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14105:14936  function _checkOnERC721Received(... */\n    tag_200:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14254:14258  bool */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14274:14289  to.isContract() */\n      tag_221\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14274:14276  to */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14274:14287  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_222\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14274:14289  to.isContract() */\n      jump\t// in\n    tag_221:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14270:14930  if (to.isContract()) {... */\n      iszero\n      tag_223\n      jumpi\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14325:14327  to */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14309:14345  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14346:14358  _msgSender() */\n      tag_224\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14346:14356  _msgSender */\n      tag_105\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14346:14358  _msgSender() */\n      jump\t// in\n    tag_224:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14360:14364  from */\n      dup8\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14366:14373  tokenId */\n      dup7\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14375:14379  data */\n      dup7\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14309:14380  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_225\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_226\n      jump\t// in\n    tag_225:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_227\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_228\n      swap2\n      swap1\n      tag_229\n      jump\t// in\n    tag_228:\n      0x01\n    tag_227:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14305:14878  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_230\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_235\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_234)\n    tag_235:\n      0x60\n      swap2\n      pop\n    tag_234:\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14564:14565  0 */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14547:14553  reason */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14547:14560  reason.length */\n      mload\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14547:14565  reason.length == 0 */\n      sub\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14543:14864  if (reason.length == 0) {... */\n      tag_236\n      jumpi\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14589:14649  revert(\"ERC721: transfer to non ERC721Receiver implementer\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_237\n      swap1\n      tag_203\n      jump\t// in\n    tag_237:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14543:14864  if (reason.length == 0) {... */\n    tag_236:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14816:14822  reason */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14810:14823  mload(reason) */\n      mload\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14801:14807  reason */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14797:14799  32 */\n      0x20\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14793:14808  add(32, reason) */\n      add\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14786:14824  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14305:14878  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_230:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14440:14481  IERC721Receiver.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14430:14481  retval == IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14430:14436  retval */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14430:14481  retval == IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14423:14481  return retval == IERC721Receiver.onERC721Received.selector */\n      swap2\n      pop\n      pop\n      jump(tag_220)\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14270:14930  if (to.isContract()) {... */\n    tag_223:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14915:14919  true */\n      0x01\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14908:14919  return true */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14105:14936  function _checkOnERC721Received(... */\n    tag_220:\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10139:11055  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_207:\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10192:10199  uint256 */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10211:10225  uint256 result */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10228:10229  0 */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10211:10229  uint256 result = 0 */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10276:10284  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10267:10272  value */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10267:10284  value >= 10 ** 64 */\n      lt\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10263:10366  if (value >= 10 ** 64) {... */\n      tag_242\n      jumpi\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10313:10321  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10304:10321  value /= 10 ** 64 */\n      dup4\n      dup2\n      tag_243\n      jumpi\n      tag_244\n      tag_216\n      jump\t// in\n    tag_244:\n    tag_243:\n      div\n      swap3\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10349:10351  64 */\n      0x40\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10339:10351  result += 64 */\n      dup2\n      add\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10263:10366  if (value >= 10 ** 64) {... */\n    tag_242:\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10392:10400  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10383:10388  value */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10383:10400  value >= 10 ** 32 */\n      lt\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10379:10482  if (value >= 10 ** 32) {... */\n      tag_245\n      jumpi\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10429:10437  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10420:10437  value /= 10 ** 32 */\n      dup4\n      dup2\n      tag_246\n      jumpi\n      tag_247\n      tag_216\n      jump\t// in\n    tag_247:\n    tag_246:\n      div\n      swap3\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10465:10467  32 */\n      0x20\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10455:10467  result += 32 */\n      dup2\n      add\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10379:10482  if (value >= 10 ** 32) {... */\n    tag_245:\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10508:10516  10 ** 16 */\n      0x2386f26fc10000\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10499:10504  value */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10499:10516  value >= 10 ** 16 */\n      lt\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10495:10598  if (value >= 10 ** 16) {... */\n      tag_248\n      jumpi\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10545:10553  10 ** 16 */\n      0x2386f26fc10000\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10536:10553  value /= 10 ** 16 */\n      dup4\n      dup2\n      tag_249\n      jumpi\n      tag_250\n      tag_216\n      jump\t// in\n    tag_250:\n    tag_249:\n      div\n      swap3\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10581:10583  16 */\n      0x10\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10571:10583  result += 16 */\n      dup2\n      add\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10495:10598  if (value >= 10 ** 16) {... */\n    tag_248:\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10624:10631  10 ** 8 */\n      0x05f5e100\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10615:10620  value */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10615:10631  value >= 10 ** 8 */\n      lt\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10611:10711  if (value >= 10 ** 8) {... */\n      tag_251\n      jumpi\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10660:10667  10 ** 8 */\n      0x05f5e100\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10651:10667  value /= 10 ** 8 */\n      dup4\n      dup2\n      tag_252\n      jumpi\n      tag_253\n      tag_216\n      jump\t// in\n    tag_253:\n    tag_252:\n      div\n      swap3\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10695:10696  8 */\n      0x08\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10685:10696  result += 8 */\n      dup2\n      add\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10611:10711  if (value >= 10 ** 8) {... */\n    tag_251:\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10737:10744  10 ** 4 */\n      0x2710\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10728:10733  value */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10728:10744  value >= 10 ** 4 */\n      lt\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10724:10824  if (value >= 10 ** 4) {... */\n      tag_254\n      jumpi\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10773:10780  10 ** 4 */\n      0x2710\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10764:10780  value /= 10 ** 4 */\n      dup4\n      dup2\n      tag_255\n      jumpi\n      tag_256\n      tag_216\n      jump\t// in\n    tag_256:\n    tag_255:\n      div\n      swap3\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10808:10809  4 */\n      0x04\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10798:10809  result += 4 */\n      dup2\n      add\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10724:10824  if (value >= 10 ** 4) {... */\n    tag_254:\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10850:10857  10 ** 2 */\n      0x64\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10841:10846  value */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10841:10857  value >= 10 ** 2 */\n      lt\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10837:10937  if (value >= 10 ** 2) {... */\n      tag_257\n      jumpi\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10886:10893  10 ** 2 */\n      0x64\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10877:10893  value /= 10 ** 2 */\n      dup4\n      dup2\n      tag_258\n      jumpi\n      tag_259\n      tag_216\n      jump\t// in\n    tag_259:\n    tag_258:\n      div\n      swap3\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10921:10922  2 */\n      0x02\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10911:10922  result += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10837:10937  if (value >= 10 ** 2) {... */\n    tag_257:\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10963:10970  10 ** 1 */\n      0x0a\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10954:10959  value */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10954:10970  value >= 10 ** 1 */\n      lt\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10950:11016  if (value >= 10 ** 1) {... */\n      tag_260\n      jumpi\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":11000:11001  1 */\n      0x01\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10990:11001  result += 1 */\n      dup2\n      add\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10950:11016  if (value >= 10 ** 1) {... */\n    tag_260:\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":11042:11048  result */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":11035:11048  return result */\n      swap2\n      pop\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10139:11055  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":1412:1732  function isContract(address account) internal view returns (bool) {... */\n    tag_222:\n        /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":1472:1476  bool */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":1724:1725  0 */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":1702:1709  account */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":1702:1721  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":1702:1725  account.code.length > 0 */\n      gt\n        /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":1695:1725  return account.code.length > 0 */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":1412:1732  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_262:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_263:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_264:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_265:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_266:\n        /* \"#utility.yul\":561:584   */\n      tag_323\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_265\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_324\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_324:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_267:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_326\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_266\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_23:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_328\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_329\n      tag_263\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":833:952   */\n    tag_328:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_330\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_267\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_268:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_269:\n        /* \"#utility.yul\":1268:1289   */\n      tag_333\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_268\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_26:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_335\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_269\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_270:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_271:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:2044   */\n    tag_272:\n        /* \"#utility.yul\":1879:1880   */\n      0x00\n        /* \"#utility.yul\":1889:2002   */\n    tag_339:\n        /* \"#utility.yul\":1903:1909   */\n      dup4\n        /* \"#utility.yul\":1900:1901   */\n      dup2\n        /* \"#utility.yul\":1897:1910   */\n      lt\n        /* \"#utility.yul\":1889:2002   */\n      iszero\n      tag_341\n      jumpi\n        /* \"#utility.yul\":1988:1989   */\n      dup1\n        /* \"#utility.yul\":1983:1986   */\n      dup3\n        /* \"#utility.yul\":1979:1990   */\n      add\n        /* \"#utility.yul\":1973:1991   */\n      mload\n        /* \"#utility.yul\":1969:1970   */\n      dup2\n        /* \"#utility.yul\":1964:1967   */\n      dup5\n        /* \"#utility.yul\":1960:1971   */\n      add\n        /* \"#utility.yul\":1953:1992   */\n      mstore\n        /* \"#utility.yul\":1925:1927   */\n      0x20\n        /* \"#utility.yul\":1922:1923   */\n      dup2\n        /* \"#utility.yul\":1918:1928   */\n      add\n        /* \"#utility.yul\":1913:1928   */\n      swap1\n      pop\n        /* \"#utility.yul\":1889:2002   */\n      jump(tag_339)\n    tag_341:\n        /* \"#utility.yul\":2036:2037   */\n      0x00\n        /* \"#utility.yul\":2027:2033   */\n      dup5\n        /* \"#utility.yul\":2022:2025   */\n      dup5\n        /* \"#utility.yul\":2018:2034   */\n      add\n        /* \"#utility.yul\":2011:2038   */\n      mstore\n        /* \"#utility.yul\":1860:2044   */\n      pop\n        /* \"#utility.yul\":1798:2044   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2050:2152   */\n    tag_273:\n        /* \"#utility.yul\":2091:2097   */\n      0x00\n        /* \"#utility.yul\":2142:2144   */\n      0x1f\n        /* \"#utility.yul\":2138:2145   */\n      not\n        /* \"#utility.yul\":2133:2135   */\n      0x1f\n        /* \"#utility.yul\":2126:2131   */\n      dup4\n        /* \"#utility.yul\":2122:2136   */\n      add\n        /* \"#utility.yul\":2118:2146   */\n      and\n        /* \"#utility.yul\":2108:2146   */\n      swap1\n      pop\n        /* \"#utility.yul\":2050:2152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2158:2535   */\n    tag_274:\n        /* \"#utility.yul\":2246:2249   */\n      0x00\n        /* \"#utility.yul\":2274:2313   */\n      tag_344\n        /* \"#utility.yul\":2307:2312   */\n      dup3\n        /* \"#utility.yul\":2274:2313   */\n      tag_270\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":2329:2400   */\n      tag_345\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2388:2391   */\n      dup6\n        /* \"#utility.yul\":2329:2400   */\n      tag_271\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":2322:2400   */\n      swap4\n      pop\n        /* \"#utility.yul\":2409:2474   */\n      tag_346\n        /* \"#utility.yul\":2467:2473   */\n      dup2\n        /* \"#utility.yul\":2462:2465   */\n      dup6\n        /* \"#utility.yul\":2455:2459   */\n      0x20\n        /* \"#utility.yul\":2448:2453   */\n      dup7\n        /* \"#utility.yul\":2444:2460   */\n      add\n        /* \"#utility.yul\":2409:2474   */\n      tag_272\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":2499:2528   */\n      tag_347\n        /* \"#utility.yul\":2521:2527   */\n      dup2\n        /* \"#utility.yul\":2499:2528   */\n      tag_273\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":2494:2497   */\n      dup5\n        /* \"#utility.yul\":2490:2529   */\n      add\n        /* \"#utility.yul\":2483:2529   */\n      swap2\n      pop\n        /* \"#utility.yul\":2250:2535   */\n      pop\n        /* \"#utility.yul\":2158:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:2854   */\n    tag_30:\n        /* \"#utility.yul\":2654:2658   */\n      0x00\n        /* \"#utility.yul\":2692:2694   */\n      0x20\n        /* \"#utility.yul\":2681:2690   */\n      dup3\n        /* \"#utility.yul\":2677:2695   */\n      add\n        /* \"#utility.yul\":2669:2695   */\n      swap1\n      pop\n        /* \"#utility.yul\":2741:2750   */\n      dup2\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2731:2751   */\n      sub\n        /* \"#utility.yul\":2727:2728   */\n      0x00\n        /* \"#utility.yul\":2716:2725   */\n      dup4\n        /* \"#utility.yul\":2712:2729   */\n      add\n        /* \"#utility.yul\":2705:2752   */\n      mstore\n        /* \"#utility.yul\":2769:2847   */\n      tag_349\n        /* \"#utility.yul\":2842:2846   */\n      dup2\n        /* \"#utility.yul\":2833:2839   */\n      dup5\n        /* \"#utility.yul\":2769:2847   */\n      tag_274\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":2761:2847   */\n      swap1\n      pop\n        /* \"#utility.yul\":2541:2854   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2860:2937   */\n    tag_275:\n        /* \"#utility.yul\":2897:2904   */\n      0x00\n        /* \"#utility.yul\":2926:2931   */\n      dup2\n        /* \"#utility.yul\":2915:2931   */\n      swap1\n      pop\n        /* \"#utility.yul\":2860:2937   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2943:3065   */\n    tag_276:\n        /* \"#utility.yul\":3016:3040   */\n      tag_352\n        /* \"#utility.yul\":3034:3039   */\n      dup2\n        /* \"#utility.yul\":3016:3040   */\n      tag_275\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":3009:3014   */\n      dup2\n        /* \"#utility.yul\":3006:3041   */\n      eq\n        /* \"#utility.yul\":2996:3059   */\n      tag_353\n      jumpi\n        /* \"#utility.yul\":3055:3056   */\n      0x00\n        /* \"#utility.yul\":3052:3053   */\n      dup1\n        /* \"#utility.yul\":3045:3057   */\n      revert\n        /* \"#utility.yul\":2996:3059   */\n    tag_353:\n        /* \"#utility.yul\":2943:3065   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3071:3210   */\n    tag_277:\n        /* \"#utility.yul\":3117:3122   */\n      0x00\n        /* \"#utility.yul\":3155:3161   */\n      dup2\n        /* \"#utility.yul\":3142:3162   */\n      calldataload\n        /* \"#utility.yul\":3133:3162   */\n      swap1\n      pop\n        /* \"#utility.yul\":3171:3204   */\n      tag_355\n        /* \"#utility.yul\":3198:3203   */\n      dup2\n        /* \"#utility.yul\":3171:3204   */\n      tag_276\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":3071:3210   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3216:3545   */\n    tag_33:\n        /* \"#utility.yul\":3275:3281   */\n      0x00\n        /* \"#utility.yul\":3324:3326   */\n      0x20\n        /* \"#utility.yul\":3312:3321   */\n      dup3\n        /* \"#utility.yul\":3303:3310   */\n      dup5\n        /* \"#utility.yul\":3299:3322   */\n      sub\n        /* \"#utility.yul\":3295:3327   */\n      slt\n        /* \"#utility.yul\":3292:3411   */\n      iszero\n      tag_357\n      jumpi\n        /* \"#utility.yul\":3330:3409   */\n      tag_358\n      tag_263\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":3292:3411   */\n    tag_357:\n        /* \"#utility.yul\":3450:3451   */\n      0x00\n        /* \"#utility.yul\":3475:3528   */\n      tag_359\n        /* \"#utility.yul\":3520:3527   */\n      dup5\n        /* \"#utility.yul\":3511:3517   */\n      dup3\n        /* \"#utility.yul\":3500:3509   */\n      dup6\n        /* \"#utility.yul\":3496:3518   */\n      add\n        /* \"#utility.yul\":3475:3528   */\n      tag_277\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":3465:3528   */\n      swap2\n      pop\n        /* \"#utility.yul\":3421:3538   */\n      pop\n        /* \"#utility.yul\":3216:3545   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3551:3677   */\n    tag_278:\n        /* \"#utility.yul\":3588:3595   */\n      0x00\n        /* \"#utility.yul\":3628:3670   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3621:3626   */\n      dup3\n        /* \"#utility.yul\":3617:3671   */\n      and\n        /* \"#utility.yul\":3606:3671   */\n      swap1\n      pop\n        /* \"#utility.yul\":3551:3677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3683:3779   */\n    tag_279:\n        /* \"#utility.yul\":3720:3727   */\n      0x00\n        /* \"#utility.yul\":3749:3773   */\n      tag_362\n        /* \"#utility.yul\":3767:3772   */\n      dup3\n        /* \"#utility.yul\":3749:3773   */\n      tag_278\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":3738:3773   */\n      swap1\n      pop\n        /* \"#utility.yul\":3683:3779   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3785:3903   */\n    tag_280:\n        /* \"#utility.yul\":3872:3896   */\n      tag_364\n        /* \"#utility.yul\":3890:3895   */\n      dup2\n        /* \"#utility.yul\":3872:3896   */\n      tag_279\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":3867:3870   */\n      dup3\n        /* \"#utility.yul\":3860:3897   */\n      mstore\n        /* \"#utility.yul\":3785:3903   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3909:4131   */\n    tag_36:\n        /* \"#utility.yul\":4002:4006   */\n      0x00\n        /* \"#utility.yul\":4040:4042   */\n      0x20\n        /* \"#utility.yul\":4029:4038   */\n      dup3\n        /* \"#utility.yul\":4025:4043   */\n      add\n        /* \"#utility.yul\":4017:4043   */\n      swap1\n      pop\n        /* \"#utility.yul\":4053:4124   */\n      tag_366\n        /* \"#utility.yul\":4121:4122   */\n      0x00\n        /* \"#utility.yul\":4110:4119   */\n      dup4\n        /* \"#utility.yul\":4106:4123   */\n      add\n        /* \"#utility.yul\":4097:4103   */\n      dup5\n        /* \"#utility.yul\":4053:4124   */\n      tag_280\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":3909:4131   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4137:4259   */\n    tag_281:\n        /* \"#utility.yul\":4210:4234   */\n      tag_368\n        /* \"#utility.yul\":4228:4233   */\n      dup2\n        /* \"#utility.yul\":4210:4234   */\n      tag_279\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":4203:4208   */\n      dup2\n        /* \"#utility.yul\":4200:4235   */\n      eq\n        /* \"#utility.yul\":4190:4253   */\n      tag_369\n      jumpi\n        /* \"#utility.yul\":4249:4250   */\n      0x00\n        /* \"#utility.yul\":4246:4247   */\n      dup1\n        /* \"#utility.yul\":4239:4251   */\n      revert\n        /* \"#utility.yul\":4190:4253   */\n    tag_369:\n        /* \"#utility.yul\":4137:4259   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4265:4404   */\n    tag_282:\n        /* \"#utility.yul\":4311:4316   */\n      0x00\n        /* \"#utility.yul\":4349:4355   */\n      dup2\n        /* \"#utility.yul\":4336:4356   */\n      calldataload\n        /* \"#utility.yul\":4327:4356   */\n      swap1\n      pop\n        /* \"#utility.yul\":4365:4398   */\n      tag_371\n        /* \"#utility.yul\":4392:4397   */\n      dup2\n        /* \"#utility.yul\":4365:4398   */\n      tag_281\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":4265:4404   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4410:4884   */\n    tag_39:\n        /* \"#utility.yul\":4478:4484   */\n      0x00\n        /* \"#utility.yul\":4486:4492   */\n      dup1\n        /* \"#utility.yul\":4535:4537   */\n      0x40\n        /* \"#utility.yul\":4523:4532   */\n      dup4\n        /* \"#utility.yul\":4514:4521   */\n      dup6\n        /* \"#utility.yul\":4510:4533   */\n      sub\n        /* \"#utility.yul\":4506:4538   */\n      slt\n        /* \"#utility.yul\":4503:4622   */\n      iszero\n      tag_373\n      jumpi\n        /* \"#utility.yul\":4541:4620   */\n      tag_374\n      tag_263\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":4503:4622   */\n    tag_373:\n        /* \"#utility.yul\":4661:4662   */\n      0x00\n        /* \"#utility.yul\":4686:4739   */\n      tag_375\n        /* \"#utility.yul\":4731:4738   */\n      dup6\n        /* \"#utility.yul\":4722:4728   */\n      dup3\n        /* \"#utility.yul\":4711:4720   */\n      dup7\n        /* \"#utility.yul\":4707:4729   */\n      add\n        /* \"#utility.yul\":4686:4739   */\n      tag_282\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":4676:4739   */\n      swap3\n      pop\n        /* \"#utility.yul\":4632:4749   */\n      pop\n        /* \"#utility.yul\":4788:4790   */\n      0x20\n        /* \"#utility.yul\":4814:4867   */\n      tag_376\n        /* \"#utility.yul\":4859:4866   */\n      dup6\n        /* \"#utility.yul\":4850:4856   */\n      dup3\n        /* \"#utility.yul\":4839:4848   */\n      dup7\n        /* \"#utility.yul\":4835:4857   */\n      add\n        /* \"#utility.yul\":4814:4867   */\n      tag_277\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":4804:4867   */\n      swap2\n      pop\n        /* \"#utility.yul\":4759:4877   */\n      pop\n        /* \"#utility.yul\":4410:4884   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4890:5509   */\n    tag_43:\n        /* \"#utility.yul\":4967:4973   */\n      0x00\n        /* \"#utility.yul\":4975:4981   */\n      dup1\n        /* \"#utility.yul\":4983:4989   */\n      0x00\n        /* \"#utility.yul\":5032:5034   */\n      0x60\n        /* \"#utility.yul\":5020:5029   */\n      dup5\n        /* \"#utility.yul\":5011:5018   */\n      dup7\n        /* \"#utility.yul\":5007:5030   */\n      sub\n        /* \"#utility.yul\":5003:5035   */\n      slt\n        /* \"#utility.yul\":5000:5119   */\n      iszero\n      tag_378\n      jumpi\n        /* \"#utility.yul\":5038:5117   */\n      tag_379\n      tag_263\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":5000:5119   */\n    tag_378:\n        /* \"#utility.yul\":5158:5159   */\n      0x00\n        /* \"#utility.yul\":5183:5236   */\n      tag_380\n        /* \"#utility.yul\":5228:5235   */\n      dup7\n        /* \"#utility.yul\":5219:5225   */\n      dup3\n        /* \"#utility.yul\":5208:5217   */\n      dup8\n        /* \"#utility.yul\":5204:5226   */\n      add\n        /* \"#utility.yul\":5183:5236   */\n      tag_282\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":5173:5236   */\n      swap4\n      pop\n        /* \"#utility.yul\":5129:5246   */\n      pop\n        /* \"#utility.yul\":5285:5287   */\n      0x20\n        /* \"#utility.yul\":5311:5364   */\n      tag_381\n        /* \"#utility.yul\":5356:5363   */\n      dup7\n        /* \"#utility.yul\":5347:5353   */\n      dup3\n        /* \"#utility.yul\":5336:5345   */\n      dup8\n        /* \"#utility.yul\":5332:5354   */\n      add\n        /* \"#utility.yul\":5311:5364   */\n      tag_282\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":5301:5364   */\n      swap3\n      pop\n        /* \"#utility.yul\":5256:5374   */\n      pop\n        /* \"#utility.yul\":5413:5415   */\n      0x40\n        /* \"#utility.yul\":5439:5492   */\n      tag_382\n        /* \"#utility.yul\":5484:5491   */\n      dup7\n        /* \"#utility.yul\":5475:5481   */\n      dup3\n        /* \"#utility.yul\":5464:5473   */\n      dup8\n        /* \"#utility.yul\":5460:5482   */\n      add\n        /* \"#utility.yul\":5439:5492   */\n      tag_277\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":5429:5492   */\n      swap2\n      pop\n        /* \"#utility.yul\":5384:5502   */\n      pop\n        /* \"#utility.yul\":4890:5509   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5515:5844   */\n    tag_57:\n        /* \"#utility.yul\":5574:5580   */\n      0x00\n        /* \"#utility.yul\":5623:5625   */\n      0x20\n        /* \"#utility.yul\":5611:5620   */\n      dup3\n        /* \"#utility.yul\":5602:5609   */\n      dup5\n        /* \"#utility.yul\":5598:5621   */\n      sub\n        /* \"#utility.yul\":5594:5626   */\n      slt\n        /* \"#utility.yul\":5591:5710   */\n      iszero\n      tag_384\n      jumpi\n        /* \"#utility.yul\":5629:5708   */\n      tag_385\n      tag_263\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":5591:5710   */\n    tag_384:\n        /* \"#utility.yul\":5749:5750   */\n      0x00\n        /* \"#utility.yul\":5774:5827   */\n      tag_386\n        /* \"#utility.yul\":5819:5826   */\n      dup5\n        /* \"#utility.yul\":5810:5816   */\n      dup3\n        /* \"#utility.yul\":5799:5808   */\n      dup6\n        /* \"#utility.yul\":5795:5817   */\n      add\n        /* \"#utility.yul\":5774:5827   */\n      tag_282\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":5764:5827   */\n      swap2\n      pop\n        /* \"#utility.yul\":5720:5837   */\n      pop\n        /* \"#utility.yul\":5515:5844   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5850:5968   */\n    tag_283:\n        /* \"#utility.yul\":5937:5961   */\n      tag_388\n        /* \"#utility.yul\":5955:5960   */\n      dup2\n        /* \"#utility.yul\":5937:5961   */\n      tag_275\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":5932:5935   */\n      dup3\n        /* \"#utility.yul\":5925:5962   */\n      mstore\n        /* \"#utility.yul\":5850:5968   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5974:6196   */\n    tag_60:\n        /* \"#utility.yul\":6067:6071   */\n      0x00\n        /* \"#utility.yul\":6105:6107   */\n      0x20\n        /* \"#utility.yul\":6094:6103   */\n      dup3\n        /* \"#utility.yul\":6090:6108   */\n      add\n        /* \"#utility.yul\":6082:6108   */\n      swap1\n      pop\n        /* \"#utility.yul\":6118:6189   */\n      tag_390\n        /* \"#utility.yul\":6186:6187   */\n      0x00\n        /* \"#utility.yul\":6175:6184   */\n      dup4\n        /* \"#utility.yul\":6171:6188   */\n      add\n        /* \"#utility.yul\":6162:6168   */\n      dup5\n        /* \"#utility.yul\":6118:6189   */\n      tag_283\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":5974:6196   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6202:6318   */\n    tag_284:\n        /* \"#utility.yul\":6272:6293   */\n      tag_392\n        /* \"#utility.yul\":6287:6292   */\n      dup2\n        /* \"#utility.yul\":6272:6293   */\n      tag_268\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":6265:6270   */\n      dup2\n        /* \"#utility.yul\":6262:6294   */\n      eq\n        /* \"#utility.yul\":6252:6312   */\n      tag_393\n      jumpi\n        /* \"#utility.yul\":6308:6309   */\n      0x00\n        /* \"#utility.yul\":6305:6306   */\n      dup1\n        /* \"#utility.yul\":6298:6310   */\n      revert\n        /* \"#utility.yul\":6252:6312   */\n    tag_393:\n        /* \"#utility.yul\":6202:6318   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6324:6457   */\n    tag_285:\n        /* \"#utility.yul\":6367:6372   */\n      0x00\n        /* \"#utility.yul\":6405:6411   */\n      dup2\n        /* \"#utility.yul\":6392:6412   */\n      calldataload\n        /* \"#utility.yul\":6383:6412   */\n      swap1\n      pop\n        /* \"#utility.yul\":6421:6451   */\n      tag_395\n        /* \"#utility.yul\":6445:6450   */\n      dup2\n        /* \"#utility.yul\":6421:6451   */\n      tag_284\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":6324:6457   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6463:6931   */\n    tag_66:\n        /* \"#utility.yul\":6528:6534   */\n      0x00\n        /* \"#utility.yul\":6536:6542   */\n      dup1\n        /* \"#utility.yul\":6585:6587   */\n      0x40\n        /* \"#utility.yul\":6573:6582   */\n      dup4\n        /* \"#utility.yul\":6564:6571   */\n      dup6\n        /* \"#utility.yul\":6560:6583   */\n      sub\n        /* \"#utility.yul\":6556:6588   */\n      slt\n        /* \"#utility.yul\":6553:6672   */\n      iszero\n      tag_397\n      jumpi\n        /* \"#utility.yul\":6591:6670   */\n      tag_398\n      tag_263\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":6553:6672   */\n    tag_397:\n        /* \"#utility.yul\":6711:6712   */\n      0x00\n        /* \"#utility.yul\":6736:6789   */\n      tag_399\n        /* \"#utility.yul\":6781:6788   */\n      dup6\n        /* \"#utility.yul\":6772:6778   */\n      dup3\n        /* \"#utility.yul\":6761:6770   */\n      dup7\n        /* \"#utility.yul\":6757:6779   */\n      add\n        /* \"#utility.yul\":6736:6789   */\n      tag_282\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":6726:6789   */\n      swap3\n      pop\n        /* \"#utility.yul\":6682:6799   */\n      pop\n        /* \"#utility.yul\":6838:6840   */\n      0x20\n        /* \"#utility.yul\":6864:6914   */\n      tag_400\n        /* \"#utility.yul\":6906:6913   */\n      dup6\n        /* \"#utility.yul\":6897:6903   */\n      dup3\n        /* \"#utility.yul\":6886:6895   */\n      dup7\n        /* \"#utility.yul\":6882:6904   */\n      add\n        /* \"#utility.yul\":6864:6914   */\n      tag_285\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":6854:6914   */\n      swap2\n      pop\n        /* \"#utility.yul\":6809:6924   */\n      pop\n        /* \"#utility.yul\":6463:6931   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6937:7054   */\n    tag_286:\n        /* \"#utility.yul\":7046:7047   */\n      0x00\n        /* \"#utility.yul\":7043:7044   */\n      dup1\n        /* \"#utility.yul\":7036:7048   */\n      revert\n        /* \"#utility.yul\":7060:7177   */\n    tag_287:\n        /* \"#utility.yul\":7169:7170   */\n      0x00\n        /* \"#utility.yul\":7166:7167   */\n      dup1\n        /* \"#utility.yul\":7159:7171   */\n      revert\n        /* \"#utility.yul\":7183:7363   */\n    tag_210:\n        /* \"#utility.yul\":7231:7308   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7228:7229   */\n      0x00\n        /* \"#utility.yul\":7221:7309   */\n      mstore\n        /* \"#utility.yul\":7328:7332   */\n      0x41\n        /* \"#utility.yul\":7325:7326   */\n      0x04\n        /* \"#utility.yul\":7318:7333   */\n      mstore\n        /* \"#utility.yul\":7352:7356   */\n      0x24\n        /* \"#utility.yul\":7349:7350   */\n      0x00\n        /* \"#utility.yul\":7342:7357   */\n      revert\n        /* \"#utility.yul\":7369:7650   */\n    tag_288:\n        /* \"#utility.yul\":7452:7479   */\n      tag_405\n        /* \"#utility.yul\":7474:7478   */\n      dup3\n        /* \"#utility.yul\":7452:7479   */\n      tag_273\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":7444:7450   */\n      dup2\n        /* \"#utility.yul\":7440:7480   */\n      add\n        /* \"#utility.yul\":7582:7588   */\n      dup2\n        /* \"#utility.yul\":7570:7580   */\n      dup2\n        /* \"#utility.yul\":7567:7589   */\n      lt\n        /* \"#utility.yul\":7546:7564   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7534:7544   */\n      dup3\n        /* \"#utility.yul\":7531:7565   */\n      gt\n        /* \"#utility.yul\":7528:7590   */\n      or\n        /* \"#utility.yul\":7525:7613   */\n      iszero\n      tag_406\n      jumpi\n        /* \"#utility.yul\":7593:7611   */\n      tag_407\n      tag_210\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":7525:7613   */\n    tag_406:\n        /* \"#utility.yul\":7633:7643   */\n      dup1\n        /* \"#utility.yul\":7629:7631   */\n      0x40\n        /* \"#utility.yul\":7622:7644   */\n      mstore\n        /* \"#utility.yul\":7412:7650   */\n      pop\n        /* \"#utility.yul\":7369:7650   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7656:7785   */\n    tag_289:\n        /* \"#utility.yul\":7690:7696   */\n      0x00\n        /* \"#utility.yul\":7717:7737   */\n      tag_409\n      tag_262\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":7707:7737   */\n      swap1\n      pop\n        /* \"#utility.yul\":7746:7779   */\n      tag_410\n        /* \"#utility.yul\":7774:7778   */\n      dup3\n        /* \"#utility.yul\":7766:7772   */\n      dup3\n        /* \"#utility.yul\":7746:7779   */\n      tag_288\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":7656:7785   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7791:8098   */\n    tag_290:\n        /* \"#utility.yul\":7852:7856   */\n      0x00\n        /* \"#utility.yul\":7942:7960   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7934:7940   */\n      dup3\n        /* \"#utility.yul\":7931:7961   */\n      gt\n        /* \"#utility.yul\":7928:7984   */\n      iszero\n      tag_412\n      jumpi\n        /* \"#utility.yul\":7964:7982   */\n      tag_413\n      tag_210\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":7928:7984   */\n    tag_412:\n        /* \"#utility.yul\":8002:8031   */\n      tag_414\n        /* \"#utility.yul\":8024:8030   */\n      dup3\n        /* \"#utility.yul\":8002:8031   */\n      tag_273\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":7994:8031   */\n      swap1\n      pop\n        /* \"#utility.yul\":8086:8090   */\n      0x20\n        /* \"#utility.yul\":8080:8084   */\n      dup2\n        /* \"#utility.yul\":8076:8091   */\n      add\n        /* \"#utility.yul\":8068:8091   */\n      swap1\n      pop\n        /* \"#utility.yul\":7791:8098   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8104:8250   */\n    tag_291:\n        /* \"#utility.yul\":8201:8207   */\n      dup3\n        /* \"#utility.yul\":8196:8199   */\n      dup2\n        /* \"#utility.yul\":8191:8194   */\n      dup4\n        /* \"#utility.yul\":8178:8208   */\n      calldatacopy\n        /* \"#utility.yul\":8242:8243   */\n      0x00\n        /* \"#utility.yul\":8233:8239   */\n      dup4\n        /* \"#utility.yul\":8228:8231   */\n      dup4\n        /* \"#utility.yul\":8224:8240   */\n      add\n        /* \"#utility.yul\":8217:8244   */\n      mstore\n        /* \"#utility.yul\":8104:8250   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8256:8679   */\n    tag_292:\n        /* \"#utility.yul\":8333:8338   */\n      0x00\n        /* \"#utility.yul\":8358:8423   */\n      tag_417\n        /* \"#utility.yul\":8374:8422   */\n      tag_418\n        /* \"#utility.yul\":8415:8421   */\n      dup5\n        /* \"#utility.yul\":8374:8422   */\n      tag_290\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":8358:8423   */\n      tag_289\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":8349:8423   */\n      swap1\n      pop\n        /* \"#utility.yul\":8446:8452   */\n      dup3\n        /* \"#utility.yul\":8439:8444   */\n      dup2\n        /* \"#utility.yul\":8432:8453   */\n      mstore\n        /* \"#utility.yul\":8484:8488   */\n      0x20\n        /* \"#utility.yul\":8477:8482   */\n      dup2\n        /* \"#utility.yul\":8473:8489   */\n      add\n        /* \"#utility.yul\":8522:8525   */\n      dup5\n        /* \"#utility.yul\":8513:8519   */\n      dup5\n        /* \"#utility.yul\":8508:8511   */\n      dup5\n        /* \"#utility.yul\":8504:8520   */\n      add\n        /* \"#utility.yul\":8501:8526   */\n      gt\n        /* \"#utility.yul\":8498:8610   */\n      iszero\n      tag_419\n      jumpi\n        /* \"#utility.yul\":8529:8608   */\n      tag_420\n      tag_287\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":8498:8610   */\n    tag_419:\n        /* \"#utility.yul\":8619:8673   */\n      tag_421\n        /* \"#utility.yul\":8666:8672   */\n      dup5\n        /* \"#utility.yul\":8661:8664   */\n      dup3\n        /* \"#utility.yul\":8656:8659   */\n      dup6\n        /* \"#utility.yul\":8619:8673   */\n      tag_291\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":8339:8679   */\n      pop\n        /* \"#utility.yul\":8256:8679   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8698:9036   */\n    tag_293:\n        /* \"#utility.yul\":8753:8758   */\n      0x00\n        /* \"#utility.yul\":8802:8805   */\n      dup3\n        /* \"#utility.yul\":8795:8799   */\n      0x1f\n        /* \"#utility.yul\":8787:8793   */\n      dup4\n        /* \"#utility.yul\":8783:8800   */\n      add\n        /* \"#utility.yul\":8779:8806   */\n      slt\n        /* \"#utility.yul\":8769:8891   */\n      tag_423\n      jumpi\n        /* \"#utility.yul\":8810:8889   */\n      tag_424\n      tag_286\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":8769:8891   */\n    tag_423:\n        /* \"#utility.yul\":8927:8933   */\n      dup2\n        /* \"#utility.yul\":8914:8934   */\n      calldataload\n        /* \"#utility.yul\":8952:9030   */\n      tag_425\n        /* \"#utility.yul\":9026:9029   */\n      dup5\n        /* \"#utility.yul\":9018:9024   */\n      dup3\n        /* \"#utility.yul\":9011:9015   */\n      0x20\n        /* \"#utility.yul\":9003:9009   */\n      dup7\n        /* \"#utility.yul\":8999:9016   */\n      add\n        /* \"#utility.yul\":8952:9030   */\n      tag_292\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":8943:9030   */\n      swap2\n      pop\n        /* \"#utility.yul\":8759:9036   */\n      pop\n        /* \"#utility.yul\":8698:9036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9042:9985   */\n    tag_73:\n        /* \"#utility.yul\":9137:9143   */\n      0x00\n        /* \"#utility.yul\":9145:9151   */\n      dup1\n        /* \"#utility.yul\":9153:9159   */\n      0x00\n        /* \"#utility.yul\":9161:9167   */\n      dup1\n        /* \"#utility.yul\":9210:9213   */\n      0x80\n        /* \"#utility.yul\":9198:9207   */\n      dup6\n        /* \"#utility.yul\":9189:9196   */\n      dup8\n        /* \"#utility.yul\":9185:9208   */\n      sub\n        /* \"#utility.yul\":9181:9214   */\n      slt\n        /* \"#utility.yul\":9178:9298   */\n      iszero\n      tag_427\n      jumpi\n        /* \"#utility.yul\":9217:9296   */\n      tag_428\n      tag_263\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":9178:9298   */\n    tag_427:\n        /* \"#utility.yul\":9337:9338   */\n      0x00\n        /* \"#utility.yul\":9362:9415   */\n      tag_429\n        /* \"#utility.yul\":9407:9414   */\n      dup8\n        /* \"#utility.yul\":9398:9404   */\n      dup3\n        /* \"#utility.yul\":9387:9396   */\n      dup9\n        /* \"#utility.yul\":9383:9405   */\n      add\n        /* \"#utility.yul\":9362:9415   */\n      tag_282\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":9352:9415   */\n      swap5\n      pop\n        /* \"#utility.yul\":9308:9425   */\n      pop\n        /* \"#utility.yul\":9464:9466   */\n      0x20\n        /* \"#utility.yul\":9490:9543   */\n      tag_430\n        /* \"#utility.yul\":9535:9542   */\n      dup8\n        /* \"#utility.yul\":9526:9532   */\n      dup3\n        /* \"#utility.yul\":9515:9524   */\n      dup9\n        /* \"#utility.yul\":9511:9533   */\n      add\n        /* \"#utility.yul\":9490:9543   */\n      tag_282\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":9480:9543   */\n      swap4\n      pop\n        /* \"#utility.yul\":9435:9553   */\n      pop\n        /* \"#utility.yul\":9592:9594   */\n      0x40\n        /* \"#utility.yul\":9618:9671   */\n      tag_431\n        /* \"#utility.yul\":9663:9670   */\n      dup8\n        /* \"#utility.yul\":9654:9660   */\n      dup3\n        /* \"#utility.yul\":9643:9652   */\n      dup9\n        /* \"#utility.yul\":9639:9661   */\n      add\n        /* \"#utility.yul\":9618:9671   */\n      tag_277\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":9608:9671   */\n      swap3\n      pop\n        /* \"#utility.yul\":9563:9681   */\n      pop\n        /* \"#utility.yul\":9748:9750   */\n      0x60\n        /* \"#utility.yul\":9737:9746   */\n      dup6\n        /* \"#utility.yul\":9733:9751   */\n      add\n        /* \"#utility.yul\":9720:9752   */\n      calldataload\n        /* \"#utility.yul\":9779:9797   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9771:9777   */\n      dup2\n        /* \"#utility.yul\":9768:9798   */\n      gt\n        /* \"#utility.yul\":9765:9882   */\n      iszero\n      tag_432\n      jumpi\n        /* \"#utility.yul\":9801:9880   */\n      tag_433\n      tag_264\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":9765:9882   */\n    tag_432:\n        /* \"#utility.yul\":9906:9968   */\n      tag_434\n        /* \"#utility.yul\":9960:9967   */\n      dup8\n        /* \"#utility.yul\":9951:9957   */\n      dup3\n        /* \"#utility.yul\":9940:9949   */\n      dup9\n        /* \"#utility.yul\":9936:9958   */\n      add\n        /* \"#utility.yul\":9906:9968   */\n      tag_293\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":9896:9968   */\n      swap2\n      pop\n        /* \"#utility.yul\":9691:9978   */\n      pop\n        /* \"#utility.yul\":9042:9985   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9991:10465   */\n    tag_81:\n        /* \"#utility.yul\":10059:10065   */\n      0x00\n        /* \"#utility.yul\":10067:10073   */\n      dup1\n        /* \"#utility.yul\":10116:10118   */\n      0x40\n        /* \"#utility.yul\":10104:10113   */\n      dup4\n        /* \"#utility.yul\":10095:10102   */\n      dup6\n        /* \"#utility.yul\":10091:10114   */\n      sub\n        /* \"#utility.yul\":10087:10119   */\n      slt\n        /* \"#utility.yul\":10084:10203   */\n      iszero\n      tag_436\n      jumpi\n        /* \"#utility.yul\":10122:10201   */\n      tag_437\n      tag_263\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":10084:10203   */\n    tag_436:\n        /* \"#utility.yul\":10242:10243   */\n      0x00\n        /* \"#utility.yul\":10267:10320   */\n      tag_438\n        /* \"#utility.yul\":10312:10319   */\n      dup6\n        /* \"#utility.yul\":10303:10309   */\n      dup3\n        /* \"#utility.yul\":10292:10301   */\n      dup7\n        /* \"#utility.yul\":10288:10310   */\n      add\n        /* \"#utility.yul\":10267:10320   */\n      tag_282\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":10257:10320   */\n      swap3\n      pop\n        /* \"#utility.yul\":10213:10330   */\n      pop\n        /* \"#utility.yul\":10369:10371   */\n      0x20\n        /* \"#utility.yul\":10395:10448   */\n      tag_439\n        /* \"#utility.yul\":10440:10447   */\n      dup6\n        /* \"#utility.yul\":10431:10437   */\n      dup3\n        /* \"#utility.yul\":10420:10429   */\n      dup7\n        /* \"#utility.yul\":10416:10438   */\n      add\n        /* \"#utility.yul\":10395:10448   */\n      tag_282\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":10385:10448   */\n      swap2\n      pop\n        /* \"#utility.yul\":10340:10458   */\n      pop\n        /* \"#utility.yul\":9991:10465   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10471:10651   */\n    tag_294:\n        /* \"#utility.yul\":10519:10596   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10516:10517   */\n      0x00\n        /* \"#utility.yul\":10509:10597   */\n      mstore\n        /* \"#utility.yul\":10616:10620   */\n      0x22\n        /* \"#utility.yul\":10613:10614   */\n      0x04\n        /* \"#utility.yul\":10606:10621   */\n      mstore\n        /* \"#utility.yul\":10640:10644   */\n      0x24\n        /* \"#utility.yul\":10637:10638   */\n      0x00\n        /* \"#utility.yul\":10630:10645   */\n      revert\n        /* \"#utility.yul\":10657:10977   */\n    tag_91:\n        /* \"#utility.yul\":10701:10707   */\n      0x00\n        /* \"#utility.yul\":10738:10739   */\n      0x02\n        /* \"#utility.yul\":10732:10736   */\n      dup3\n        /* \"#utility.yul\":10728:10740   */\n      div\n        /* \"#utility.yul\":10718:10740   */\n      swap1\n      pop\n        /* \"#utility.yul\":10785:10786   */\n      0x01\n        /* \"#utility.yul\":10779:10783   */\n      dup3\n        /* \"#utility.yul\":10775:10787   */\n      and\n        /* \"#utility.yul\":10806:10824   */\n      dup1\n        /* \"#utility.yul\":10796:10877   */\n      tag_442\n      jumpi\n        /* \"#utility.yul\":10862:10866   */\n      0x7f\n        /* \"#utility.yul\":10854:10860   */\n      dup3\n        /* \"#utility.yul\":10850:10867   */\n      and\n        /* \"#utility.yul\":10840:10867   */\n      swap2\n      pop\n        /* \"#utility.yul\":10796:10877   */\n    tag_442:\n        /* \"#utility.yul\":10924:10926   */\n      0x20\n        /* \"#utility.yul\":10916:10922   */\n      dup3\n        /* \"#utility.yul\":10913:10927   */\n      lt\n        /* \"#utility.yul\":10893:10911   */\n      dup2\n        /* \"#utility.yul\":10890:10928   */\n      sub\n        /* \"#utility.yul\":10887:10971   */\n      tag_443\n      jumpi\n        /* \"#utility.yul\":10943:10961   */\n      tag_444\n      tag_294\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":10887:10971   */\n    tag_443:\n        /* \"#utility.yul\":10708:10977   */\n      pop\n        /* \"#utility.yul\":10657:10977   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10983:11203   */\n    tag_295:\n        /* \"#utility.yul\":11123:11157   */\n      0x4552433732313a20617070726f76616c20746f2063757272656e74206f776e65\n        /* \"#utility.yul\":11119:11120   */\n      0x00\n        /* \"#utility.yul\":11111:11117   */\n      dup3\n        /* \"#utility.yul\":11107:11121   */\n      add\n        /* \"#utility.yul\":11100:11158   */\n      mstore\n        /* \"#utility.yul\":11192:11195   */\n      0x7200000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11187:11189   */\n      0x20\n        /* \"#utility.yul\":11179:11185   */\n      dup3\n        /* \"#utility.yul\":11175:11190   */\n      add\n        /* \"#utility.yul\":11168:11196   */\n      mstore\n        /* \"#utility.yul\":10983:11203   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11209:11575   */\n    tag_296:\n        /* \"#utility.yul\":11351:11354   */\n      0x00\n        /* \"#utility.yul\":11372:11439   */\n      tag_447\n        /* \"#utility.yul\":11436:11438   */\n      0x21\n        /* \"#utility.yul\":11431:11434   */\n      dup4\n        /* \"#utility.yul\":11372:11439   */\n      tag_271\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":11365:11439   */\n      swap2\n      pop\n        /* \"#utility.yul\":11448:11541   */\n      tag_448\n        /* \"#utility.yul\":11537:11540   */\n      dup3\n        /* \"#utility.yul\":11448:11541   */\n      tag_295\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":11566:11568   */\n      0x40\n        /* \"#utility.yul\":11561:11564   */\n      dup3\n        /* \"#utility.yul\":11557:11569   */\n      add\n        /* \"#utility.yul\":11550:11569   */\n      swap1\n      pop\n        /* \"#utility.yul\":11209:11575   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11581:12000   */\n    tag_103:\n        /* \"#utility.yul\":11747:11751   */\n      0x00\n        /* \"#utility.yul\":11785:11787   */\n      0x20\n        /* \"#utility.yul\":11774:11783   */\n      dup3\n        /* \"#utility.yul\":11770:11788   */\n      add\n        /* \"#utility.yul\":11762:11788   */\n      swap1\n      pop\n        /* \"#utility.yul\":11834:11843   */\n      dup2\n        /* \"#utility.yul\":11828:11832   */\n      dup2\n        /* \"#utility.yul\":11824:11844   */\n      sub\n        /* \"#utility.yul\":11820:11821   */\n      0x00\n        /* \"#utility.yul\":11809:11818   */\n      dup4\n        /* \"#utility.yul\":11805:11822   */\n      add\n        /* \"#utility.yul\":11798:11845   */\n      mstore\n        /* \"#utility.yul\":11862:11993   */\n      tag_450\n        /* \"#utility.yul\":11988:11992   */\n      dup2\n        /* \"#utility.yul\":11862:11993   */\n      tag_296\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":11854:11993   */\n      swap1\n      pop\n        /* \"#utility.yul\":11581:12000   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12006:12254   */\n    tag_297:\n        /* \"#utility.yul\":12146:12180   */\n      0x4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f\n        /* \"#utility.yul\":12142:12143   */\n      0x00\n        /* \"#utility.yul\":12134:12140   */\n      dup3\n        /* \"#utility.yul\":12130:12144   */\n      add\n        /* \"#utility.yul\":12123:12181   */\n      mstore\n        /* \"#utility.yul\":12215:12246   */\n      0x6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000\n        /* \"#utility.yul\":12210:12212   */\n      0x20\n        /* \"#utility.yul\":12202:12208   */\n      dup3\n        /* \"#utility.yul\":12198:12213   */\n      add\n        /* \"#utility.yul\":12191:12247   */\n      mstore\n        /* \"#utility.yul\":12006:12254   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12260:12626   */\n    tag_298:\n        /* \"#utility.yul\":12402:12405   */\n      0x00\n        /* \"#utility.yul\":12423:12490   */\n      tag_453\n        /* \"#utility.yul\":12487:12489   */\n      0x3d\n        /* \"#utility.yul\":12482:12485   */\n      dup4\n        /* \"#utility.yul\":12423:12490   */\n      tag_271\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":12416:12490   */\n      swap2\n      pop\n        /* \"#utility.yul\":12499:12592   */\n      tag_454\n        /* \"#utility.yul\":12588:12591   */\n      dup3\n        /* \"#utility.yul\":12499:12592   */\n      tag_297\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":12617:12619   */\n      0x40\n        /* \"#utility.yul\":12612:12615   */\n      dup3\n        /* \"#utility.yul\":12608:12620   */\n      add\n        /* \"#utility.yul\":12601:12620   */\n      swap1\n      pop\n        /* \"#utility.yul\":12260:12626   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12632:13051   */\n    tag_111:\n        /* \"#utility.yul\":12798:12802   */\n      0x00\n        /* \"#utility.yul\":12836:12838   */\n      0x20\n        /* \"#utility.yul\":12825:12834   */\n      dup3\n        /* \"#utility.yul\":12821:12839   */\n      add\n        /* \"#utility.yul\":12813:12839   */\n      swap1\n      pop\n        /* \"#utility.yul\":12885:12894   */\n      dup2\n        /* \"#utility.yul\":12879:12883   */\n      dup2\n        /* \"#utility.yul\":12875:12895   */\n      sub\n        /* \"#utility.yul\":12871:12872   */\n      0x00\n        /* \"#utility.yul\":12860:12869   */\n      dup4\n        /* \"#utility.yul\":12856:12873   */\n      add\n        /* \"#utility.yul\":12849:12896   */\n      mstore\n        /* \"#utility.yul\":12913:13044   */\n      tag_456\n        /* \"#utility.yul\":13039:13043   */\n      dup2\n        /* \"#utility.yul\":12913:13044   */\n      tag_298\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":12905:13044   */\n      swap1\n      pop\n        /* \"#utility.yul\":12632:13051   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13057:13289   */\n    tag_299:\n        /* \"#utility.yul\":13197:13231   */\n      0x4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65\n        /* \"#utility.yul\":13193:13194   */\n      0x00\n        /* \"#utility.yul\":13185:13191   */\n      dup3\n        /* \"#utility.yul\":13181:13195   */\n      add\n        /* \"#utility.yul\":13174:13232   */\n      mstore\n        /* \"#utility.yul\":13266:13281   */\n      0x72206f7220617070726f76656400000000000000000000000000000000000000\n        /* \"#utility.yul\":13261:13263   */\n      0x20\n        /* \"#utility.yul\":13253:13259   */\n      dup3\n        /* \"#utility.yul\":13249:13264   */\n      add\n        /* \"#utility.yul\":13242:13282   */\n      mstore\n        /* \"#utility.yul\":13057:13289   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13295:13661   */\n    tag_300:\n        /* \"#utility.yul\":13437:13440   */\n      0x00\n        /* \"#utility.yul\":13458:13525   */\n      tag_459\n        /* \"#utility.yul\":13522:13524   */\n      0x2d\n        /* \"#utility.yul\":13517:13520   */\n      dup4\n        /* \"#utility.yul\":13458:13525   */\n      tag_271\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":13451:13525   */\n      swap2\n      pop\n        /* \"#utility.yul\":13534:13627   */\n      tag_460\n        /* \"#utility.yul\":13623:13626   */\n      dup3\n        /* \"#utility.yul\":13534:13627   */\n      tag_299\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":13652:13654   */\n      0x40\n        /* \"#utility.yul\":13647:13650   */\n      dup3\n        /* \"#utility.yul\":13643:13655   */\n      add\n        /* \"#utility.yul\":13636:13655   */\n      swap1\n      pop\n        /* \"#utility.yul\":13295:13661   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13667:14086   */\n    tag_120:\n        /* \"#utility.yul\":13833:13837   */\n      0x00\n        /* \"#utility.yul\":13871:13873   */\n      0x20\n        /* \"#utility.yul\":13860:13869   */\n      dup3\n        /* \"#utility.yul\":13856:13874   */\n      add\n        /* \"#utility.yul\":13848:13874   */\n      swap1\n      pop\n        /* \"#utility.yul\":13920:13929   */\n      dup2\n        /* \"#utility.yul\":13914:13918   */\n      dup2\n        /* \"#utility.yul\":13910:13930   */\n      sub\n        /* \"#utility.yul\":13906:13907   */\n      0x00\n        /* \"#utility.yul\":13895:13904   */\n      dup4\n        /* \"#utility.yul\":13891:13908   */\n      add\n        /* \"#utility.yul\":13884:13931   */\n      mstore\n        /* \"#utility.yul\":13948:14079   */\n      tag_462\n        /* \"#utility.yul\":14074:14078   */\n      dup2\n        /* \"#utility.yul\":13948:14079   */\n      tag_300\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":13940:14079   */\n      swap1\n      pop\n        /* \"#utility.yul\":13667:14086   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14092:14316   */\n    tag_301:\n        /* \"#utility.yul\":14232:14266   */\n      0x4552433732313a207472616e736665722066726f6d20696e636f727265637420\n        /* \"#utility.yul\":14228:14229   */\n      0x00\n        /* \"#utility.yul\":14220:14226   */\n      dup3\n        /* \"#utility.yul\":14216:14230   */\n      add\n        /* \"#utility.yul\":14209:14267   */\n      mstore\n        /* \"#utility.yul\":14301:14308   */\n      0x6f776e6572000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14296:14298   */\n      0x20\n        /* \"#utility.yul\":14288:14294   */\n      dup3\n        /* \"#utility.yul\":14284:14299   */\n      add\n        /* \"#utility.yul\":14277:14309   */\n      mstore\n        /* \"#utility.yul\":14092:14316   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14322:14688   */\n    tag_302:\n        /* \"#utility.yul\":14464:14467   */\n      0x00\n        /* \"#utility.yul\":14485:14552   */\n      tag_465\n        /* \"#utility.yul\":14549:14551   */\n      0x25\n        /* \"#utility.yul\":14544:14547   */\n      dup4\n        /* \"#utility.yul\":14485:14552   */\n      tag_271\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":14478:14552   */\n      swap2\n      pop\n        /* \"#utility.yul\":14561:14654   */\n      tag_466\n        /* \"#utility.yul\":14650:14653   */\n      dup3\n        /* \"#utility.yul\":14561:14654   */\n      tag_301\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":14679:14681   */\n      0x40\n        /* \"#utility.yul\":14674:14677   */\n      dup3\n        /* \"#utility.yul\":14670:14682   */\n      add\n        /* \"#utility.yul\":14663:14682   */\n      swap1\n      pop\n        /* \"#utility.yul\":14322:14688   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14694:15113   */\n    tag_126:\n        /* \"#utility.yul\":14860:14864   */\n      0x00\n        /* \"#utility.yul\":14898:14900   */\n      0x20\n        /* \"#utility.yul\":14887:14896   */\n      dup3\n        /* \"#utility.yul\":14883:14901   */\n      add\n        /* \"#utility.yul\":14875:14901   */\n      swap1\n      pop\n        /* \"#utility.yul\":14947:14956   */\n      dup2\n        /* \"#utility.yul\":14941:14945   */\n      dup2\n        /* \"#utility.yul\":14937:14957   */\n      sub\n        /* \"#utility.yul\":14933:14934   */\n      0x00\n        /* \"#utility.yul\":14922:14931   */\n      dup4\n        /* \"#utility.yul\":14918:14935   */\n      add\n        /* \"#utility.yul\":14911:14958   */\n      mstore\n        /* \"#utility.yul\":14975:15106   */\n      tag_468\n        /* \"#utility.yul\":15101:15105   */\n      dup2\n        /* \"#utility.yul\":14975:15106   */\n      tag_302\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":14967:15106   */\n      swap1\n      pop\n        /* \"#utility.yul\":14694:15113   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15119:15293   */\n    tag_303:\n        /* \"#utility.yul\":15259:15285   */\n      0x4552433732313a20696e76616c696420746f6b656e2049440000000000000000\n        /* \"#utility.yul\":15255:15256   */\n      0x00\n        /* \"#utility.yul\":15247:15253   */\n      dup3\n        /* \"#utility.yul\":15243:15257   */\n      add\n        /* \"#utility.yul\":15236:15286   */\n      mstore\n        /* \"#utility.yul\":15119:15293   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15299:15665   */\n    tag_304:\n        /* \"#utility.yul\":15441:15444   */\n      0x00\n        /* \"#utility.yul\":15462:15529   */\n      tag_471\n        /* \"#utility.yul\":15526:15528   */\n      0x18\n        /* \"#utility.yul\":15521:15524   */\n      dup4\n        /* \"#utility.yul\":15462:15529   */\n      tag_271\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":15455:15529   */\n      swap2\n      pop\n        /* \"#utility.yul\":15538:15631   */\n      tag_472\n        /* \"#utility.yul\":15627:15630   */\n      dup3\n        /* \"#utility.yul\":15538:15631   */\n      tag_303\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":15656:15658   */\n      0x20\n        /* \"#utility.yul\":15651:15654   */\n      dup3\n        /* \"#utility.yul\":15647:15659   */\n      add\n        /* \"#utility.yul\":15640:15659   */\n      swap1\n      pop\n        /* \"#utility.yul\":15299:15665   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15671:16090   */\n    tag_141:\n        /* \"#utility.yul\":15837:15841   */\n      0x00\n        /* \"#utility.yul\":15875:15877   */\n      0x20\n        /* \"#utility.yul\":15864:15873   */\n      dup3\n        /* \"#utility.yul\":15860:15878   */\n      add\n        /* \"#utility.yul\":15852:15878   */\n      swap1\n      pop\n        /* \"#utility.yul\":15924:15933   */\n      dup2\n        /* \"#utility.yul\":15918:15922   */\n      dup2\n        /* \"#utility.yul\":15914:15934   */\n      sub\n        /* \"#utility.yul\":15910:15911   */\n      0x00\n        /* \"#utility.yul\":15899:15908   */\n      dup4\n        /* \"#utility.yul\":15895:15912   */\n      add\n        /* \"#utility.yul\":15888:15935   */\n      mstore\n        /* \"#utility.yul\":15952:16083   */\n      tag_474\n        /* \"#utility.yul\":16078:16082   */\n      dup2\n        /* \"#utility.yul\":15952:16083   */\n      tag_304\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":15944:16083   */\n      swap1\n      pop\n        /* \"#utility.yul\":15671:16090   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16096:16324   */\n    tag_305:\n        /* \"#utility.yul\":16236:16270   */\n      0x4552433732313a2061646472657373207a65726f206973206e6f742061207661\n        /* \"#utility.yul\":16232:16233   */\n      0x00\n        /* \"#utility.yul\":16224:16230   */\n      dup3\n        /* \"#utility.yul\":16220:16234   */\n      add\n        /* \"#utility.yul\":16213:16271   */\n      mstore\n        /* \"#utility.yul\":16305:16316   */\n      0x6c6964206f776e65720000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16300:16302   */\n      0x20\n        /* \"#utility.yul\":16292:16298   */\n      dup3\n        /* \"#utility.yul\":16288:16303   */\n      add\n        /* \"#utility.yul\":16281:16317   */\n      mstore\n        /* \"#utility.yul\":16096:16324   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16330:16696   */\n    tag_306:\n        /* \"#utility.yul\":16472:16475   */\n      0x00\n        /* \"#utility.yul\":16493:16560   */\n      tag_477\n        /* \"#utility.yul\":16557:16559   */\n      0x29\n        /* \"#utility.yul\":16552:16555   */\n      dup4\n        /* \"#utility.yul\":16493:16560   */\n      tag_271\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":16486:16560   */\n      swap2\n      pop\n        /* \"#utility.yul\":16569:16662   */\n      tag_478\n        /* \"#utility.yul\":16658:16661   */\n      dup3\n        /* \"#utility.yul\":16569:16662   */\n      tag_305\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":16687:16689   */\n      0x40\n        /* \"#utility.yul\":16682:16685   */\n      dup3\n        /* \"#utility.yul\":16678:16690   */\n      add\n        /* \"#utility.yul\":16671:16690   */\n      swap1\n      pop\n        /* \"#utility.yul\":16330:16696   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16702:17121   */\n    tag_145:\n        /* \"#utility.yul\":16868:16872   */\n      0x00\n        /* \"#utility.yul\":16906:16908   */\n      0x20\n        /* \"#utility.yul\":16895:16904   */\n      dup3\n        /* \"#utility.yul\":16891:16909   */\n      add\n        /* \"#utility.yul\":16883:16909   */\n      swap1\n      pop\n        /* \"#utility.yul\":16955:16964   */\n      dup2\n        /* \"#utility.yul\":16949:16953   */\n      dup2\n        /* \"#utility.yul\":16945:16965   */\n      sub\n        /* \"#utility.yul\":16941:16942   */\n      0x00\n        /* \"#utility.yul\":16930:16939   */\n      dup4\n        /* \"#utility.yul\":16926:16943   */\n      add\n        /* \"#utility.yul\":16919:16966   */\n      mstore\n        /* \"#utility.yul\":16983:17114   */\n      tag_480\n        /* \"#utility.yul\":17109:17113   */\n      dup2\n        /* \"#utility.yul\":16983:17114   */\n      tag_306\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":16975:17114   */\n      swap1\n      pop\n        /* \"#utility.yul\":16702:17121   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17127:17275   */\n    tag_307:\n        /* \"#utility.yul\":17229:17240   */\n      0x00\n        /* \"#utility.yul\":17266:17269   */\n      dup2\n        /* \"#utility.yul\":17251:17269   */\n      swap1\n      pop\n        /* \"#utility.yul\":17127:17275   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17281:17671   */\n    tag_308:\n        /* \"#utility.yul\":17387:17390   */\n      0x00\n        /* \"#utility.yul\":17415:17454   */\n      tag_483\n        /* \"#utility.yul\":17448:17453   */\n      dup3\n        /* \"#utility.yul\":17415:17454   */\n      tag_270\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":17470:17559   */\n      tag_484\n        /* \"#utility.yul\":17552:17558   */\n      dup2\n        /* \"#utility.yul\":17547:17550   */\n      dup6\n        /* \"#utility.yul\":17470:17559   */\n      tag_307\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":17463:17559   */\n      swap4\n      pop\n        /* \"#utility.yul\":17568:17633   */\n      tag_485\n        /* \"#utility.yul\":17626:17632   */\n      dup2\n        /* \"#utility.yul\":17621:17624   */\n      dup6\n        /* \"#utility.yul\":17614:17618   */\n      0x20\n        /* \"#utility.yul\":17607:17612   */\n      dup7\n        /* \"#utility.yul\":17603:17619   */\n      add\n        /* \"#utility.yul\":17568:17633   */\n      tag_272\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":17658:17664   */\n      dup1\n        /* \"#utility.yul\":17653:17656   */\n      dup5\n        /* \"#utility.yul\":17649:17665   */\n      add\n        /* \"#utility.yul\":17642:17665   */\n      swap2\n      pop\n        /* \"#utility.yul\":17391:17671   */\n      pop\n        /* \"#utility.yul\":17281:17671   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17677:18112   */\n    tag_172:\n        /* \"#utility.yul\":17857:17860   */\n      0x00\n        /* \"#utility.yul\":17879:17974   */\n      tag_487\n        /* \"#utility.yul\":17970:17973   */\n      dup3\n        /* \"#utility.yul\":17961:17967   */\n      dup6\n        /* \"#utility.yul\":17879:17974   */\n      tag_308\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":17872:17974   */\n      swap2\n      pop\n        /* \"#utility.yul\":17991:18086   */\n      tag_488\n        /* \"#utility.yul\":18082:18085   */\n      dup3\n        /* \"#utility.yul\":18073:18079   */\n      dup5\n        /* \"#utility.yul\":17991:18086   */\n      tag_308\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":17984:18086   */\n      swap2\n      pop\n        /* \"#utility.yul\":18103:18106   */\n      dup2\n        /* \"#utility.yul\":18096:18106   */\n      swap1\n      pop\n        /* \"#utility.yul\":17677:18112   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18118:18293   */\n    tag_309:\n        /* \"#utility.yul\":18258:18285   */\n      0x4552433732313a20617070726f766520746f2063616c6c657200000000000000\n        /* \"#utility.yul\":18254:18255   */\n      0x00\n        /* \"#utility.yul\":18246:18252   */\n      dup3\n        /* \"#utility.yul\":18242:18256   */\n      add\n        /* \"#utility.yul\":18235:18286   */\n      mstore\n        /* \"#utility.yul\":18118:18293   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18299:18665   */\n    tag_310:\n        /* \"#utility.yul\":18441:18444   */\n      0x00\n        /* \"#utility.yul\":18462:18529   */\n      tag_491\n        /* \"#utility.yul\":18526:18528   */\n      0x19\n        /* \"#utility.yul\":18521:18524   */\n      dup4\n        /* \"#utility.yul\":18462:18529   */\n      tag_271\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":18455:18529   */\n      swap2\n      pop\n        /* \"#utility.yul\":18538:18631   */\n      tag_492\n        /* \"#utility.yul\":18627:18630   */\n      dup3\n        /* \"#utility.yul\":18538:18631   */\n      tag_309\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":18656:18658   */\n      0x20\n        /* \"#utility.yul\":18651:18654   */\n      dup3\n        /* \"#utility.yul\":18647:18659   */\n      add\n        /* \"#utility.yul\":18640:18659   */\n      swap1\n      pop\n        /* \"#utility.yul\":18299:18665   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18671:19090   */\n    tag_195:\n        /* \"#utility.yul\":18837:18841   */\n      0x00\n        /* \"#utility.yul\":18875:18877   */\n      0x20\n        /* \"#utility.yul\":18864:18873   */\n      dup3\n        /* \"#utility.yul\":18860:18878   */\n      add\n        /* \"#utility.yul\":18852:18878   */\n      swap1\n      pop\n        /* \"#utility.yul\":18924:18933   */\n      dup2\n        /* \"#utility.yul\":18918:18922   */\n      dup2\n        /* \"#utility.yul\":18914:18934   */\n      sub\n        /* \"#utility.yul\":18910:18911   */\n      0x00\n        /* \"#utility.yul\":18899:18908   */\n      dup4\n        /* \"#utility.yul\":18895:18912   */\n      add\n        /* \"#utility.yul\":18888:18935   */\n      mstore\n        /* \"#utility.yul\":18952:19083   */\n      tag_494\n        /* \"#utility.yul\":19078:19082   */\n      dup2\n        /* \"#utility.yul\":18952:19083   */\n      tag_310\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":18944:19083   */\n      swap1\n      pop\n        /* \"#utility.yul\":18671:19090   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19096:19333   */\n    tag_311:\n        /* \"#utility.yul\":19236:19270   */\n      0x4552433732313a207472616e7366657220746f206e6f6e204552433732315265\n        /* \"#utility.yul\":19232:19233   */\n      0x00\n        /* \"#utility.yul\":19224:19230   */\n      dup3\n        /* \"#utility.yul\":19220:19234   */\n      add\n        /* \"#utility.yul\":19213:19271   */\n      mstore\n        /* \"#utility.yul\":19305:19325   */\n      0x63656976657220696d706c656d656e7465720000000000000000000000000000\n        /* \"#utility.yul\":19300:19302   */\n      0x20\n        /* \"#utility.yul\":19292:19298   */\n      dup3\n        /* \"#utility.yul\":19288:19303   */\n      add\n        /* \"#utility.yul\":19281:19326   */\n      mstore\n        /* \"#utility.yul\":19096:19333   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19339:19705   */\n    tag_312:\n        /* \"#utility.yul\":19481:19484   */\n      0x00\n        /* \"#utility.yul\":19502:19569   */\n      tag_497\n        /* \"#utility.yul\":19566:19568   */\n      0x32\n        /* \"#utility.yul\":19561:19564   */\n      dup4\n        /* \"#utility.yul\":19502:19569   */\n      tag_271\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":19495:19569   */\n      swap2\n      pop\n        /* \"#utility.yul\":19578:19671   */\n      tag_498\n        /* \"#utility.yul\":19667:19670   */\n      dup3\n        /* \"#utility.yul\":19578:19671   */\n      tag_311\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":19696:19698   */\n      0x40\n        /* \"#utility.yul\":19691:19694   */\n      dup3\n        /* \"#utility.yul\":19687:19699   */\n      add\n        /* \"#utility.yul\":19680:19699   */\n      swap1\n      pop\n        /* \"#utility.yul\":19339:19705   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19711:20130   */\n    tag_203:\n        /* \"#utility.yul\":19877:19881   */\n      0x00\n        /* \"#utility.yul\":19915:19917   */\n      0x20\n        /* \"#utility.yul\":19904:19913   */\n      dup3\n        /* \"#utility.yul\":19900:19918   */\n      add\n        /* \"#utility.yul\":19892:19918   */\n      swap1\n      pop\n        /* \"#utility.yul\":19964:19973   */\n      dup2\n        /* \"#utility.yul\":19958:19962   */\n      dup2\n        /* \"#utility.yul\":19954:19974   */\n      sub\n        /* \"#utility.yul\":19950:19951   */\n      0x00\n        /* \"#utility.yul\":19939:19948   */\n      dup4\n        /* \"#utility.yul\":19935:19952   */\n      add\n        /* \"#utility.yul\":19928:19975   */\n      mstore\n        /* \"#utility.yul\":19992:20123   */\n      tag_500\n        /* \"#utility.yul\":20118:20122   */\n      dup2\n        /* \"#utility.yul\":19992:20123   */\n      tag_312\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":19984:20123   */\n      swap1\n      pop\n        /* \"#utility.yul\":19711:20130   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20136:20316   */\n    tag_216:\n        /* \"#utility.yul\":20184:20261   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20181:20182   */\n      0x00\n        /* \"#utility.yul\":20174:20262   */\n      mstore\n        /* \"#utility.yul\":20281:20285   */\n      0x12\n        /* \"#utility.yul\":20278:20279   */\n      0x04\n        /* \"#utility.yul\":20271:20286   */\n      mstore\n        /* \"#utility.yul\":20305:20309   */\n      0x24\n        /* \"#utility.yul\":20302:20303   */\n      0x00\n        /* \"#utility.yul\":20295:20310   */\n      revert\n        /* \"#utility.yul\":20322:20420   */\n    tag_313:\n        /* \"#utility.yul\":20373:20379   */\n      0x00\n        /* \"#utility.yul\":20407:20412   */\n      dup2\n        /* \"#utility.yul\":20401:20413   */\n      mload\n        /* \"#utility.yul\":20391:20413   */\n      swap1\n      pop\n        /* \"#utility.yul\":20322:20420   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20426:20594   */\n    tag_314:\n        /* \"#utility.yul\":20509:20520   */\n      0x00\n        /* \"#utility.yul\":20543:20549   */\n      dup3\n        /* \"#utility.yul\":20538:20541   */\n      dup3\n        /* \"#utility.yul\":20531:20550   */\n      mstore\n        /* \"#utility.yul\":20583:20587   */\n      0x20\n        /* \"#utility.yul\":20578:20581   */\n      dup3\n        /* \"#utility.yul\":20574:20588   */\n      add\n        /* \"#utility.yul\":20559:20588   */\n      swap1\n      pop\n        /* \"#utility.yul\":20426:20594   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20600:20973   */\n    tag_315:\n        /* \"#utility.yul\":20686:20689   */\n      0x00\n        /* \"#utility.yul\":20714:20752   */\n      tag_505\n        /* \"#utility.yul\":20746:20751   */\n      dup3\n        /* \"#utility.yul\":20714:20752   */\n      tag_313\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":20768:20838   */\n      tag_506\n        /* \"#utility.yul\":20831:20837   */\n      dup2\n        /* \"#utility.yul\":20826:20829   */\n      dup6\n        /* \"#utility.yul\":20768:20838   */\n      tag_314\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":20761:20838   */\n      swap4\n      pop\n        /* \"#utility.yul\":20847:20912   */\n      tag_507\n        /* \"#utility.yul\":20905:20911   */\n      dup2\n        /* \"#utility.yul\":20900:20903   */\n      dup6\n        /* \"#utility.yul\":20893:20897   */\n      0x20\n        /* \"#utility.yul\":20886:20891   */\n      dup7\n        /* \"#utility.yul\":20882:20898   */\n      add\n        /* \"#utility.yul\":20847:20912   */\n      tag_272\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":20937:20966   */\n      tag_508\n        /* \"#utility.yul\":20959:20965   */\n      dup2\n        /* \"#utility.yul\":20937:20966   */\n      tag_273\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":20932:20935   */\n      dup5\n        /* \"#utility.yul\":20928:20967   */\n      add\n        /* \"#utility.yul\":20921:20967   */\n      swap2\n      pop\n        /* \"#utility.yul\":20690:20973   */\n      pop\n        /* \"#utility.yul\":20600:20973   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20979:21619   */\n    tag_226:\n        /* \"#utility.yul\":21174:21178   */\n      0x00\n        /* \"#utility.yul\":21212:21215   */\n      0x80\n        /* \"#utility.yul\":21201:21210   */\n      dup3\n        /* \"#utility.yul\":21197:21216   */\n      add\n        /* \"#utility.yul\":21189:21216   */\n      swap1\n      pop\n        /* \"#utility.yul\":21226:21297   */\n      tag_510\n        /* \"#utility.yul\":21294:21295   */\n      0x00\n        /* \"#utility.yul\":21283:21292   */\n      dup4\n        /* \"#utility.yul\":21279:21296   */\n      add\n        /* \"#utility.yul\":21270:21276   */\n      dup8\n        /* \"#utility.yul\":21226:21297   */\n      tag_280\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":21307:21379   */\n      tag_511\n        /* \"#utility.yul\":21375:21377   */\n      0x20\n        /* \"#utility.yul\":21364:21373   */\n      dup4\n        /* \"#utility.yul\":21360:21378   */\n      add\n        /* \"#utility.yul\":21351:21357   */\n      dup7\n        /* \"#utility.yul\":21307:21379   */\n      tag_280\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":21389:21461   */\n      tag_512\n        /* \"#utility.yul\":21457:21459   */\n      0x40\n        /* \"#utility.yul\":21446:21455   */\n      dup4\n        /* \"#utility.yul\":21442:21460   */\n      add\n        /* \"#utility.yul\":21433:21439   */\n      dup6\n        /* \"#utility.yul\":21389:21461   */\n      tag_283\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":21508:21517   */\n      dup2\n        /* \"#utility.yul\":21502:21506   */\n      dup2\n        /* \"#utility.yul\":21498:21518   */\n      sub\n        /* \"#utility.yul\":21493:21495   */\n      0x60\n        /* \"#utility.yul\":21482:21491   */\n      dup4\n        /* \"#utility.yul\":21478:21496   */\n      add\n        /* \"#utility.yul\":21471:21519   */\n      mstore\n        /* \"#utility.yul\":21536:21612   */\n      tag_513\n        /* \"#utility.yul\":21607:21611   */\n      dup2\n        /* \"#utility.yul\":21598:21604   */\n      dup5\n        /* \"#utility.yul\":21536:21612   */\n      tag_315\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":21528:21612   */\n      swap1\n      pop\n        /* \"#utility.yul\":20979:21619   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21625:21766   */\n    tag_316:\n        /* \"#utility.yul\":21681:21686   */\n      0x00\n        /* \"#utility.yul\":21712:21718   */\n      dup2\n        /* \"#utility.yul\":21706:21719   */\n      mload\n        /* \"#utility.yul\":21697:21719   */\n      swap1\n      pop\n        /* \"#utility.yul\":21728:21760   */\n      tag_515\n        /* \"#utility.yul\":21754:21759   */\n      dup2\n        /* \"#utility.yul\":21728:21760   */\n      tag_266\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":21625:21766   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21772:22121   */\n    tag_229:\n        /* \"#utility.yul\":21841:21847   */\n      0x00\n        /* \"#utility.yul\":21890:21892   */\n      0x20\n        /* \"#utility.yul\":21878:21887   */\n      dup3\n        /* \"#utility.yul\":21869:21876   */\n      dup5\n        /* \"#utility.yul\":21865:21888   */\n      sub\n        /* \"#utility.yul\":21861:21893   */\n      slt\n        /* \"#utility.yul\":21858:21977   */\n      iszero\n      tag_517\n      jumpi\n        /* \"#utility.yul\":21896:21975   */\n      tag_518\n      tag_263\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":21858:21977   */\n    tag_517:\n        /* \"#utility.yul\":22016:22017   */\n      0x00\n        /* \"#utility.yul\":22041:22104   */\n      tag_519\n        /* \"#utility.yul\":22096:22103   */\n      dup5\n        /* \"#utility.yul\":22087:22093   */\n      dup3\n        /* \"#utility.yul\":22076:22085   */\n      dup6\n        /* \"#utility.yul\":22072:22094   */\n      add\n        /* \"#utility.yul\":22041:22104   */\n      tag_316\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":22031:22104   */\n      swap2\n      pop\n        /* \"#utility.yul\":21987:22114   */\n      pop\n        /* \"#utility.yul\":21772:22121   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220fa4d41d2e9e8e3a0392ae37cba06c39f5f090e06c232b82c5f4df0064d4f86fc64736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_70": {
									"entryPoint": null,
									"id": 70,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 441,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 645,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 516,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_address_fromMemory": {
									"entryPoint": 668,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"allocate_memory": {
									"entryPoint": 312,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 164,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 343,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 933,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 822,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1254,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 599,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 567,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1069,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1215,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1089,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1409,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 397,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 954,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 880,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1379,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 258,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 1079,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1347,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 833,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 211,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1129,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 184,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 189,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 179,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 174,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 194,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 970,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1334,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1187,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 983,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1139,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 619,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1182,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9241:11",
										"nodeType": "YulBlock",
										"src": "0:9241:11",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:11",
													"nodeType": "YulBlock",
													"src": "47:35:11",
													"statements": [
														{
															"nativeSrc": "57:19:11",
															"nodeType": "YulAssignment",
															"src": "57:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:11",
																		"nodeType": "YulLiteral",
																		"src": "73:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:11"
																},
																"nativeSrc": "67:9:11",
																"nodeType": "YulFunctionCall",
																"src": "67:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:11",
														"nodeType": "YulTypedName",
														"src": "40:6:11",
														"type": ""
													}
												],
												"src": "7:75:11"
											},
											{
												"body": {
													"nativeSrc": "177:28:11",
													"nodeType": "YulBlock",
													"src": "177:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:11",
																		"nodeType": "YulLiteral",
																		"src": "194:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:11",
																		"nodeType": "YulLiteral",
																		"src": "197:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:11"
																},
																"nativeSrc": "187:12:11",
																"nodeType": "YulFunctionCall",
																"src": "187:12:11"
															},
															"nativeSrc": "187:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:11"
											},
											{
												"body": {
													"nativeSrc": "300:28:11",
													"nodeType": "YulBlock",
													"src": "300:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:11",
																		"nodeType": "YulLiteral",
																		"src": "317:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:11",
																		"nodeType": "YulLiteral",
																		"src": "320:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:11"
																},
																"nativeSrc": "310:12:11",
																"nodeType": "YulFunctionCall",
																"src": "310:12:11"
															},
															"nativeSrc": "310:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:11"
											},
											{
												"body": {
													"nativeSrc": "423:28:11",
													"nodeType": "YulBlock",
													"src": "423:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:11",
																		"nodeType": "YulLiteral",
																		"src": "440:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:11",
																		"nodeType": "YulLiteral",
																		"src": "443:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:11"
																},
																"nativeSrc": "433:12:11",
																"nodeType": "YulFunctionCall",
																"src": "433:12:11"
															},
															"nativeSrc": "433:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:11"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:11"
											},
											{
												"body": {
													"nativeSrc": "546:28:11",
													"nodeType": "YulBlock",
													"src": "546:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:11",
																		"nodeType": "YulLiteral",
																		"src": "563:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:11",
																		"nodeType": "YulLiteral",
																		"src": "566:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:11"
																},
																"nativeSrc": "556:12:11",
																"nodeType": "YulFunctionCall",
																"src": "556:12:11"
															},
															"nativeSrc": "556:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:11"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:11"
											},
											{
												"body": {
													"nativeSrc": "628:54:11",
													"nodeType": "YulBlock",
													"src": "628:54:11",
													"statements": [
														{
															"nativeSrc": "638:38:11",
															"nodeType": "YulAssignment",
															"src": "638:38:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:11",
																				"nodeType": "YulLiteral",
																				"src": "663:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:11"
																		},
																		"nativeSrc": "652:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:11",
																				"nodeType": "YulLiteral",
																				"src": "672:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:11"
																		},
																		"nativeSrc": "668:7:11",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:11"
																},
																"nativeSrc": "648:28:11",
																"nodeType": "YulFunctionCall",
																"src": "648:28:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:11"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:11",
														"nodeType": "YulTypedName",
														"src": "611:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:11",
														"nodeType": "YulTypedName",
														"src": "621:6:11",
														"type": ""
													}
												],
												"src": "580:102:11"
											},
											{
												"body": {
													"nativeSrc": "716:152:11",
													"nodeType": "YulBlock",
													"src": "716:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:11",
																		"nodeType": "YulLiteral",
																		"src": "733:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:11",
																		"nodeType": "YulLiteral",
																		"src": "736:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:11"
																},
																"nativeSrc": "726:88:11",
																"nodeType": "YulFunctionCall",
																"src": "726:88:11"
															},
															"nativeSrc": "726:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:11",
																		"nodeType": "YulLiteral",
																		"src": "830:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:11",
																		"nodeType": "YulLiteral",
																		"src": "833:4:11",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:11"
																},
																"nativeSrc": "823:15:11",
																"nodeType": "YulFunctionCall",
																"src": "823:15:11"
															},
															"nativeSrc": "823:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:11",
																		"nodeType": "YulLiteral",
																		"src": "854:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:11",
																		"nodeType": "YulLiteral",
																		"src": "857:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:11"
																},
																"nativeSrc": "847:15:11",
																"nodeType": "YulFunctionCall",
																"src": "847:15:11"
															},
															"nativeSrc": "847:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:11"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:11"
											},
											{
												"body": {
													"nativeSrc": "917:238:11",
													"nodeType": "YulBlock",
													"src": "917:238:11",
													"statements": [
														{
															"nativeSrc": "927:58:11",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:11",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:11"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:11",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:11"
																		},
																		"nativeSrc": "957:27:11",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:11"
																},
																"nativeSrc": "945:40:11",
																"nodeType": "YulFunctionCall",
																"src": "945:40:11"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:11",
																	"nodeType": "YulTypedName",
																	"src": "931:10:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:11",
																"nodeType": "YulBlock",
																"src": "1096:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:11"
																			},
																			"nativeSrc": "1098:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:11"
																		},
																		"nativeSrc": "1098:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:11",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:11",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:11"
																		},
																		"nativeSrc": "1036:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:11",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:11"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:11"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:11"
																		},
																		"nativeSrc": "1072:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:11"
																},
																"nativeSrc": "1033:62:11",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:11"
															},
															"nativeSrc": "1030:88:11",
															"nodeType": "YulIf",
															"src": "1030:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:11",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:11",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:11"
																},
																"nativeSrc": "1127:22:11",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:11"
															},
															"nativeSrc": "1127:22:11",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:11"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:11",
														"nodeType": "YulTypedName",
														"src": "903:6:11",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:11",
														"nodeType": "YulTypedName",
														"src": "911:4:11",
														"type": ""
													}
												],
												"src": "874:281:11"
											},
											{
												"body": {
													"nativeSrc": "1202:88:11",
													"nodeType": "YulBlock",
													"src": "1202:88:11",
													"statements": [
														{
															"nativeSrc": "1212:30:11",
															"nodeType": "YulAssignment",
															"src": "1212:30:11",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:11"
																},
																"nativeSrc": "1222:20:11",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:11"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:11"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:11",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:11"
																},
																"nativeSrc": "1251:33:11",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:11"
															},
															"nativeSrc": "1251:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:11"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:11",
														"nodeType": "YulTypedName",
														"src": "1186:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:11",
														"nodeType": "YulTypedName",
														"src": "1195:6:11",
														"type": ""
													}
												],
												"src": "1161:129:11"
											},
											{
												"body": {
													"nativeSrc": "1363:241:11",
													"nodeType": "YulBlock",
													"src": "1363:241:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:11",
																"nodeType": "YulBlock",
																"src": "1468:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:11"
																			},
																			"nativeSrc": "1470:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:11"
																		},
																		"nativeSrc": "1470:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:11",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:11"
																},
																"nativeSrc": "1437:30:11",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:11"
															},
															"nativeSrc": "1434:56:11",
															"nodeType": "YulIf",
															"src": "1434:56:11"
														},
														{
															"nativeSrc": "1500:37:11",
															"nodeType": "YulAssignment",
															"src": "1500:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:11"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:11",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:11"
																},
																"nativeSrc": "1508:29:11",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:11"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:11"
																}
															]
														},
														{
															"nativeSrc": "1574:23:11",
															"nodeType": "YulAssignment",
															"src": "1574:23:11",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:11",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:11"
																},
																"nativeSrc": "1582:15:11",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:11"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:11"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:11",
														"nodeType": "YulTypedName",
														"src": "1347:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:11",
														"nodeType": "YulTypedName",
														"src": "1358:4:11",
														"type": ""
													}
												],
												"src": "1296:308:11"
											},
											{
												"body": {
													"nativeSrc": "1672:184:11",
													"nodeType": "YulBlock",
													"src": "1672:184:11",
													"statements": [
														{
															"nativeSrc": "1682:10:11",
															"nodeType": "YulVariableDeclaration",
															"src": "1682:10:11",
															"value": {
																"kind": "number",
																"nativeSrc": "1691:1:11",
																"nodeType": "YulLiteral",
																"src": "1691:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "1686:1:11",
																	"nodeType": "YulTypedName",
																	"src": "1686:1:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1751:63:11",
																"nodeType": "YulBlock",
																"src": "1751:63:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "1776:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "1776:3:11"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "1781:1:11",
																							"nodeType": "YulIdentifier",
																							"src": "1781:1:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "1772:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "1772:3:11"
																					},
																					"nativeSrc": "1772:11:11",
																					"nodeType": "YulFunctionCall",
																					"src": "1772:11:11"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "1795:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "1795:3:11"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "1800:1:11",
																									"nodeType": "YulIdentifier",
																									"src": "1800:1:11"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1791:3:11",
																								"nodeType": "YulIdentifier",
																								"src": "1791:3:11"
																							},
																							"nativeSrc": "1791:11:11",
																							"nodeType": "YulFunctionCall",
																							"src": "1791:11:11"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "1785:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "1785:5:11"
																					},
																					"nativeSrc": "1785:18:11",
																					"nodeType": "YulFunctionCall",
																					"src": "1785:18:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1765:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1765:6:11"
																			},
																			"nativeSrc": "1765:39:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1765:39:11"
																		},
																		"nativeSrc": "1765:39:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1765:39:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "1712:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "1712:1:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1715:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1715:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1709:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "1709:2:11"
																},
																"nativeSrc": "1709:13:11",
																"nodeType": "YulFunctionCall",
																"src": "1709:13:11"
															},
															"nativeSrc": "1701:113:11",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1723:19:11",
																"nodeType": "YulBlock",
																"src": "1723:19:11",
																"statements": [
																	{
																		"nativeSrc": "1725:15:11",
																		"nodeType": "YulAssignment",
																		"src": "1725:15:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "1734:1:11",
																					"nodeType": "YulIdentifier",
																					"src": "1734:1:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1737:2:11",
																					"nodeType": "YulLiteral",
																					"src": "1737:2:11",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1730:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "1730:3:11"
																			},
																			"nativeSrc": "1730:10:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1730:10:11"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "1725:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "1725:1:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "1705:3:11",
																"nodeType": "YulBlock",
																"src": "1705:3:11",
																"statements": []
															},
															"src": "1701:113:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1834:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "1834:3:11"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1839:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1839:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1830:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1830:3:11"
																		},
																		"nativeSrc": "1830:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1830:16:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1848:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1848:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1823:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1823:6:11"
																},
																"nativeSrc": "1823:27:11",
																"nodeType": "YulFunctionCall",
																"src": "1823:27:11"
															},
															"nativeSrc": "1823:27:11",
															"nodeType": "YulExpressionStatement",
															"src": "1823:27:11"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1610:246:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1654:3:11",
														"nodeType": "YulTypedName",
														"src": "1654:3:11",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1659:3:11",
														"nodeType": "YulTypedName",
														"src": "1659:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1664:6:11",
														"nodeType": "YulTypedName",
														"src": "1664:6:11",
														"type": ""
													}
												],
												"src": "1610:246:11"
											},
											{
												"body": {
													"nativeSrc": "1957:339:11",
													"nodeType": "YulBlock",
													"src": "1957:339:11",
													"statements": [
														{
															"nativeSrc": "1967:75:11",
															"nodeType": "YulAssignment",
															"src": "1967:75:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2034:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2034:6:11"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1992:41:11",
																			"nodeType": "YulIdentifier",
																			"src": "1992:41:11"
																		},
																		"nativeSrc": "1992:49:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1992:49:11"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1976:15:11",
																	"nodeType": "YulIdentifier",
																	"src": "1976:15:11"
																},
																"nativeSrc": "1976:66:11",
																"nodeType": "YulFunctionCall",
																"src": "1976:66:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1967:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1967:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2058:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2065:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2065:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2051:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2051:6:11"
																},
																"nativeSrc": "2051:21:11",
																"nodeType": "YulFunctionCall",
																"src": "2051:21:11"
															},
															"nativeSrc": "2051:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "2051:21:11"
														},
														{
															"nativeSrc": "2081:27:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2081:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2096:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2096:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2103:4:11",
																		"nodeType": "YulLiteral",
																		"src": "2103:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2092:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2092:3:11"
																},
																"nativeSrc": "2092:16:11",
																"nodeType": "YulFunctionCall",
																"src": "2092:16:11"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "2085:3:11",
																	"nodeType": "YulTypedName",
																	"src": "2085:3:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2146:83:11",
																"nodeType": "YulBlock",
																"src": "2146:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2148:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "2148:77:11"
																			},
																			"nativeSrc": "2148:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2148:79:11"
																		},
																		"nativeSrc": "2148:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2148:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2127:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "2127:3:11"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2132:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2132:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2123:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2123:3:11"
																		},
																		"nativeSrc": "2123:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2123:16:11"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2141:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2141:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2120:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "2120:2:11"
																},
																"nativeSrc": "2120:25:11",
																"nodeType": "YulFunctionCall",
																"src": "2120:25:11"
															},
															"nativeSrc": "2117:112:11",
															"nodeType": "YulIf",
															"src": "2117:112:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2273:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2273:3:11"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2278:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2278:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2283:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2283:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2238:34:11",
																	"nodeType": "YulIdentifier",
																	"src": "2238:34:11"
																},
																"nativeSrc": "2238:52:11",
																"nodeType": "YulFunctionCall",
																"src": "2238:52:11"
															},
															"nativeSrc": "2238:52:11",
															"nodeType": "YulExpressionStatement",
															"src": "2238:52:11"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "1862:434:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1930:3:11",
														"nodeType": "YulTypedName",
														"src": "1930:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1935:6:11",
														"nodeType": "YulTypedName",
														"src": "1935:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1943:3:11",
														"nodeType": "YulTypedName",
														"src": "1943:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1951:5:11",
														"nodeType": "YulTypedName",
														"src": "1951:5:11",
														"type": ""
													}
												],
												"src": "1862:434:11"
											},
											{
												"body": {
													"nativeSrc": "2389:282:11",
													"nodeType": "YulBlock",
													"src": "2389:282:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2438:83:11",
																"nodeType": "YulBlock",
																"src": "2438:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2440:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "2440:77:11"
																			},
																			"nativeSrc": "2440:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2440:79:11"
																		},
																		"nativeSrc": "2440:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2440:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2417:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "2417:6:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2425:4:11",
																						"nodeType": "YulLiteral",
																						"src": "2425:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2413:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2413:3:11"
																				},
																				"nativeSrc": "2413:17:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2413:17:11"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2432:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "2432:3:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2409:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2409:3:11"
																		},
																		"nativeSrc": "2409:27:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2409:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2402:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2402:6:11"
																},
																"nativeSrc": "2402:35:11",
																"nodeType": "YulFunctionCall",
																"src": "2402:35:11"
															},
															"nativeSrc": "2399:122:11",
															"nodeType": "YulIf",
															"src": "2399:122:11"
														},
														{
															"nativeSrc": "2530:27:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2530:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2550:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2550:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2544:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "2544:5:11"
																},
																"nativeSrc": "2544:13:11",
																"nodeType": "YulFunctionCall",
																"src": "2544:13:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2534:6:11",
																	"nodeType": "YulTypedName",
																	"src": "2534:6:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2566:99:11",
															"nodeType": "YulAssignment",
															"src": "2566:99:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2638:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2638:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2646:4:11",
																				"nodeType": "YulLiteral",
																				"src": "2646:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2634:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2634:3:11"
																		},
																		"nativeSrc": "2634:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2634:17:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2653:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2653:6:11"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2661:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2661:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "2575:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "2575:58:11"
																},
																"nativeSrc": "2575:90:11",
																"nodeType": "YulFunctionCall",
																"src": "2575:90:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2566:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "2566:5:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2316:355:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2367:6:11",
														"nodeType": "YulTypedName",
														"src": "2367:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2375:3:11",
														"nodeType": "YulTypedName",
														"src": "2375:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2383:5:11",
														"nodeType": "YulTypedName",
														"src": "2383:5:11",
														"type": ""
													}
												],
												"src": "2316:355:11"
											},
											{
												"body": {
													"nativeSrc": "2722:81:11",
													"nodeType": "YulBlock",
													"src": "2722:81:11",
													"statements": [
														{
															"nativeSrc": "2732:65:11",
															"nodeType": "YulAssignment",
															"src": "2732:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2747:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2747:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2754:42:11",
																		"nodeType": "YulLiteral",
																		"src": "2754:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2743:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2743:3:11"
																},
																"nativeSrc": "2743:54:11",
																"nodeType": "YulFunctionCall",
																"src": "2743:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2732:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "2732:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2677:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2704:5:11",
														"nodeType": "YulTypedName",
														"src": "2704:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2714:7:11",
														"nodeType": "YulTypedName",
														"src": "2714:7:11",
														"type": ""
													}
												],
												"src": "2677:126:11"
											},
											{
												"body": {
													"nativeSrc": "2854:51:11",
													"nodeType": "YulBlock",
													"src": "2854:51:11",
													"statements": [
														{
															"nativeSrc": "2864:35:11",
															"nodeType": "YulAssignment",
															"src": "2864:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2893:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2893:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2875:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "2875:17:11"
																},
																"nativeSrc": "2875:24:11",
																"nodeType": "YulFunctionCall",
																"src": "2875:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2864:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "2864:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2809:96:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2836:5:11",
														"nodeType": "YulTypedName",
														"src": "2836:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2846:7:11",
														"nodeType": "YulTypedName",
														"src": "2846:7:11",
														"type": ""
													}
												],
												"src": "2809:96:11"
											},
											{
												"body": {
													"nativeSrc": "2954:79:11",
													"nodeType": "YulBlock",
													"src": "2954:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "3011:16:11",
																"nodeType": "YulBlock",
																"src": "3011:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3020:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3020:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3023:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3023:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3013:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3013:6:11"
																			},
																			"nativeSrc": "3013:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3013:12:11"
																		},
																		"nativeSrc": "3013:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3013:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2977:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2977:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3002:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "3002:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2984:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "2984:17:11"
																				},
																				"nativeSrc": "2984:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2984:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2974:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "2974:2:11"
																		},
																		"nativeSrc": "2974:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2974:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2967:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2967:6:11"
																},
																"nativeSrc": "2967:43:11",
																"nodeType": "YulFunctionCall",
																"src": "2967:43:11"
															},
															"nativeSrc": "2964:63:11",
															"nodeType": "YulIf",
															"src": "2964:63:11"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2911:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2947:5:11",
														"nodeType": "YulTypedName",
														"src": "2947:5:11",
														"type": ""
													}
												],
												"src": "2911:122:11"
											},
											{
												"body": {
													"nativeSrc": "3102:80:11",
													"nodeType": "YulBlock",
													"src": "3102:80:11",
													"statements": [
														{
															"nativeSrc": "3112:22:11",
															"nodeType": "YulAssignment",
															"src": "3112:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3127:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3127:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3121:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "3121:5:11"
																},
																"nativeSrc": "3121:13:11",
																"nodeType": "YulFunctionCall",
																"src": "3121:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3112:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "3112:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3170:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "3170:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3143:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "3143:26:11"
																},
																"nativeSrc": "3143:33:11",
																"nodeType": "YulFunctionCall",
																"src": "3143:33:11"
															},
															"nativeSrc": "3143:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "3143:33:11"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "3039:143:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3080:6:11",
														"nodeType": "YulTypedName",
														"src": "3080:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3088:3:11",
														"nodeType": "YulTypedName",
														"src": "3088:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3096:5:11",
														"nodeType": "YulTypedName",
														"src": "3096:5:11",
														"type": ""
													}
												],
												"src": "3039:143:11"
											},
											{
												"body": {
													"nativeSrc": "3319:878:11",
													"nodeType": "YulBlock",
													"src": "3319:878:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "3365:83:11",
																"nodeType": "YulBlock",
																"src": "3365:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3367:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "3367:77:11"
																			},
																			"nativeSrc": "3367:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3367:79:11"
																		},
																		"nativeSrc": "3367:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3367:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3340:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3340:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3349:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3349:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3336:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3336:3:11"
																		},
																		"nativeSrc": "3336:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3336:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3361:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3361:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3332:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3332:3:11"
																},
																"nativeSrc": "3332:32:11",
																"nodeType": "YulFunctionCall",
																"src": "3332:32:11"
															},
															"nativeSrc": "3329:119:11",
															"nodeType": "YulIf",
															"src": "3329:119:11"
														},
														{
															"nativeSrc": "3458:291:11",
															"nodeType": "YulBlock",
															"src": "3458:291:11",
															"statements": [
																{
																	"nativeSrc": "3473:38:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3473:38:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3497:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "3497:9:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3508:1:11",
																						"nodeType": "YulLiteral",
																						"src": "3508:1:11",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3493:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3493:3:11"
																				},
																				"nativeSrc": "3493:17:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3493:17:11"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3487:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "3487:5:11"
																		},
																		"nativeSrc": "3487:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3487:24:11"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3477:6:11",
																			"nodeType": "YulTypedName",
																			"src": "3477:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3558:83:11",
																		"nodeType": "YulBlock",
																		"src": "3558:83:11",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3560:77:11",
																						"nodeType": "YulIdentifier",
																						"src": "3560:77:11"
																					},
																					"nativeSrc": "3560:79:11",
																					"nodeType": "YulFunctionCall",
																					"src": "3560:79:11"
																				},
																				"nativeSrc": "3560:79:11",
																				"nodeType": "YulExpressionStatement",
																				"src": "3560:79:11"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3530:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3530:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3538:18:11",
																				"nodeType": "YulLiteral",
																				"src": "3538:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3527:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "3527:2:11"
																		},
																		"nativeSrc": "3527:30:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3527:30:11"
																	},
																	"nativeSrc": "3524:117:11",
																	"nodeType": "YulIf",
																	"src": "3524:117:11"
																},
																{
																	"nativeSrc": "3655:84:11",
																	"nodeType": "YulAssignment",
																	"src": "3655:84:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3711:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "3711:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3722:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "3722:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3707:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3707:3:11"
																				},
																				"nativeSrc": "3707:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3707:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3731:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3731:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3665:41:11",
																			"nodeType": "YulIdentifier",
																			"src": "3665:41:11"
																		},
																		"nativeSrc": "3665:74:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3665:74:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3655:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "3655:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3759:292:11",
															"nodeType": "YulBlock",
															"src": "3759:292:11",
															"statements": [
																{
																	"nativeSrc": "3774:39:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3774:39:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3798:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "3798:9:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3809:2:11",
																						"nodeType": "YulLiteral",
																						"src": "3809:2:11",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3794:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3794:3:11"
																				},
																				"nativeSrc": "3794:18:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3794:18:11"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3788:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "3788:5:11"
																		},
																		"nativeSrc": "3788:25:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3788:25:11"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3778:6:11",
																			"nodeType": "YulTypedName",
																			"src": "3778:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3860:83:11",
																		"nodeType": "YulBlock",
																		"src": "3860:83:11",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3862:77:11",
																						"nodeType": "YulIdentifier",
																						"src": "3862:77:11"
																					},
																					"nativeSrc": "3862:79:11",
																					"nodeType": "YulFunctionCall",
																					"src": "3862:79:11"
																				},
																				"nativeSrc": "3862:79:11",
																				"nodeType": "YulExpressionStatement",
																				"src": "3862:79:11"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3832:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3832:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3840:18:11",
																				"nodeType": "YulLiteral",
																				"src": "3840:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3829:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "3829:2:11"
																		},
																		"nativeSrc": "3829:30:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3829:30:11"
																	},
																	"nativeSrc": "3826:117:11",
																	"nodeType": "YulIf",
																	"src": "3826:117:11"
																},
																{
																	"nativeSrc": "3957:84:11",
																	"nodeType": "YulAssignment",
																	"src": "3957:84:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4013:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "4013:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4024:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4024:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4009:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4009:3:11"
																				},
																				"nativeSrc": "4009:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4009:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4033:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4033:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3967:41:11",
																			"nodeType": "YulIdentifier",
																			"src": "3967:41:11"
																		},
																		"nativeSrc": "3967:74:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3967:74:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3957:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "3957:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4061:129:11",
															"nodeType": "YulBlock",
															"src": "4061:129:11",
															"statements": [
																{
																	"nativeSrc": "4076:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4076:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4090:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4090:2:11",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4080:6:11",
																			"nodeType": "YulTypedName",
																			"src": "4080:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4106:74:11",
																	"nodeType": "YulAssignment",
																	"src": "4106:74:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4152:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "4152:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4163:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4163:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4148:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4148:3:11"
																				},
																				"nativeSrc": "4148:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4148:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4172:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4172:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "4116:31:11",
																			"nodeType": "YulIdentifier",
																			"src": "4116:31:11"
																		},
																		"nativeSrc": "4116:64:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4116:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4106:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4106:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_address_fromMemory",
												"nativeSrc": "3188:1009:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3273:9:11",
														"nodeType": "YulTypedName",
														"src": "3273:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3284:7:11",
														"nodeType": "YulTypedName",
														"src": "3284:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3296:6:11",
														"nodeType": "YulTypedName",
														"src": "3296:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3304:6:11",
														"nodeType": "YulTypedName",
														"src": "3304:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3312:6:11",
														"nodeType": "YulTypedName",
														"src": "3312:6:11",
														"type": ""
													}
												],
												"src": "3188:1009:11"
											},
											{
												"body": {
													"nativeSrc": "4262:40:11",
													"nodeType": "YulBlock",
													"src": "4262:40:11",
													"statements": [
														{
															"nativeSrc": "4273:22:11",
															"nodeType": "YulAssignment",
															"src": "4273:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4289:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "4289:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4283:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "4283:5:11"
																},
																"nativeSrc": "4283:12:11",
																"nodeType": "YulFunctionCall",
																"src": "4283:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4273:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4273:6:11"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "4203:99:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4245:5:11",
														"nodeType": "YulTypedName",
														"src": "4245:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4255:6:11",
														"nodeType": "YulTypedName",
														"src": "4255:6:11",
														"type": ""
													}
												],
												"src": "4203:99:11"
											},
											{
												"body": {
													"nativeSrc": "4336:152:11",
													"nodeType": "YulBlock",
													"src": "4336:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4353:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4353:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4356:77:11",
																		"nodeType": "YulLiteral",
																		"src": "4356:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4346:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4346:6:11"
																},
																"nativeSrc": "4346:88:11",
																"nodeType": "YulFunctionCall",
																"src": "4346:88:11"
															},
															"nativeSrc": "4346:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "4346:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4450:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4450:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4453:4:11",
																		"nodeType": "YulLiteral",
																		"src": "4453:4:11",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4443:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4443:6:11"
																},
																"nativeSrc": "4443:15:11",
																"nodeType": "YulFunctionCall",
																"src": "4443:15:11"
															},
															"nativeSrc": "4443:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "4443:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4474:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4474:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4477:4:11",
																		"nodeType": "YulLiteral",
																		"src": "4477:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4467:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4467:6:11"
																},
																"nativeSrc": "4467:15:11",
																"nodeType": "YulFunctionCall",
																"src": "4467:15:11"
															},
															"nativeSrc": "4467:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "4467:15:11"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "4308:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "4308:180:11"
											},
											{
												"body": {
													"nativeSrc": "4545:269:11",
													"nodeType": "YulBlock",
													"src": "4545:269:11",
													"statements": [
														{
															"nativeSrc": "4555:22:11",
															"nodeType": "YulAssignment",
															"src": "4555:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4569:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "4569:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4575:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4575:1:11",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4565:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4565:3:11"
																},
																"nativeSrc": "4565:12:11",
																"nodeType": "YulFunctionCall",
																"src": "4565:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4555:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4555:6:11"
																}
															]
														},
														{
															"nativeSrc": "4586:38:11",
															"nodeType": "YulVariableDeclaration",
															"src": "4586:38:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4616:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "4616:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4622:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4622:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4612:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4612:3:11"
																},
																"nativeSrc": "4612:12:11",
																"nodeType": "YulFunctionCall",
																"src": "4612:12:11"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "4590:18:11",
																	"nodeType": "YulTypedName",
																	"src": "4590:18:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4663:51:11",
																"nodeType": "YulBlock",
																"src": "4663:51:11",
																"statements": [
																	{
																		"nativeSrc": "4677:27:11",
																		"nodeType": "YulAssignment",
																		"src": "4677:27:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4691:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "4691:6:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4699:4:11",
																					"nodeType": "YulLiteral",
																					"src": "4699:4:11",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4687:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "4687:3:11"
																			},
																			"nativeSrc": "4687:17:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4687:17:11"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4677:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4677:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4643:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "4643:18:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4636:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4636:6:11"
																},
																"nativeSrc": "4636:26:11",
																"nodeType": "YulFunctionCall",
																"src": "4636:26:11"
															},
															"nativeSrc": "4633:81:11",
															"nodeType": "YulIf",
															"src": "4633:81:11"
														},
														{
															"body": {
																"nativeSrc": "4766:42:11",
																"nodeType": "YulBlock",
																"src": "4766:42:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "4780:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "4780:16:11"
																			},
																			"nativeSrc": "4780:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4780:18:11"
																		},
																		"nativeSrc": "4780:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4780:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4730:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "4730:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4753:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4753:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4761:2:11",
																				"nodeType": "YulLiteral",
																				"src": "4761:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4750:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "4750:2:11"
																		},
																		"nativeSrc": "4750:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4750:14:11"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4727:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "4727:2:11"
																},
																"nativeSrc": "4727:38:11",
																"nodeType": "YulFunctionCall",
																"src": "4727:38:11"
															},
															"nativeSrc": "4724:84:11",
															"nodeType": "YulIf",
															"src": "4724:84:11"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4494:320:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4529:4:11",
														"nodeType": "YulTypedName",
														"src": "4529:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4538:6:11",
														"nodeType": "YulTypedName",
														"src": "4538:6:11",
														"type": ""
													}
												],
												"src": "4494:320:11"
											},
											{
												"body": {
													"nativeSrc": "4874:87:11",
													"nodeType": "YulBlock",
													"src": "4874:87:11",
													"statements": [
														{
															"nativeSrc": "4884:11:11",
															"nodeType": "YulAssignment",
															"src": "4884:11:11",
															"value": {
																"name": "ptr",
																"nativeSrc": "4892:3:11",
																"nodeType": "YulIdentifier",
																"src": "4892:3:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4884:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "4884:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4912:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4912:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "4915:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "4915:3:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4905:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4905:6:11"
																},
																"nativeSrc": "4905:14:11",
																"nodeType": "YulFunctionCall",
																"src": "4905:14:11"
															},
															"nativeSrc": "4905:14:11",
															"nodeType": "YulExpressionStatement",
															"src": "4905:14:11"
														},
														{
															"nativeSrc": "4928:26:11",
															"nodeType": "YulAssignment",
															"src": "4928:26:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4946:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4946:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4949:4:11",
																		"nodeType": "YulLiteral",
																		"src": "4949:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "4936:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "4936:9:11"
																},
																"nativeSrc": "4936:18:11",
																"nodeType": "YulFunctionCall",
																"src": "4936:18:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4928:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "4928:4:11"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "4820:141:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "4861:3:11",
														"nodeType": "YulTypedName",
														"src": "4861:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "4869:4:11",
														"nodeType": "YulTypedName",
														"src": "4869:4:11",
														"type": ""
													}
												],
												"src": "4820:141:11"
											},
											{
												"body": {
													"nativeSrc": "5011:49:11",
													"nodeType": "YulBlock",
													"src": "5011:49:11",
													"statements": [
														{
															"nativeSrc": "5021:33:11",
															"nodeType": "YulAssignment",
															"src": "5021:33:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5039:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "5039:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5046:2:11",
																				"nodeType": "YulLiteral",
																				"src": "5046:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5035:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5035:3:11"
																		},
																		"nativeSrc": "5035:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5035:14:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5051:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5051:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5031:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5031:3:11"
																},
																"nativeSrc": "5031:23:11",
																"nodeType": "YulFunctionCall",
																"src": "5031:23:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5021:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5021:6:11"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "4967:93:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4994:5:11",
														"nodeType": "YulTypedName",
														"src": "4994:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5004:6:11",
														"nodeType": "YulTypedName",
														"src": "5004:6:11",
														"type": ""
													}
												],
												"src": "4967:93:11"
											},
											{
												"body": {
													"nativeSrc": "5119:54:11",
													"nodeType": "YulBlock",
													"src": "5119:54:11",
													"statements": [
														{
															"nativeSrc": "5129:37:11",
															"nodeType": "YulAssignment",
															"src": "5129:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "5154:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "5154:4:11"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5160:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "5160:5:11"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "5150:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5150:3:11"
																},
																"nativeSrc": "5150:16:11",
																"nodeType": "YulFunctionCall",
																"src": "5150:16:11"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5129:8:11",
																	"nodeType": "YulIdentifier",
																	"src": "5129:8:11"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "5066:107:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "5094:4:11",
														"nodeType": "YulTypedName",
														"src": "5094:4:11",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "5100:5:11",
														"nodeType": "YulTypedName",
														"src": "5100:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5110:8:11",
														"nodeType": "YulTypedName",
														"src": "5110:8:11",
														"type": ""
													}
												],
												"src": "5066:107:11"
											},
											{
												"body": {
													"nativeSrc": "5255:317:11",
													"nodeType": "YulBlock",
													"src": "5255:317:11",
													"statements": [
														{
															"nativeSrc": "5265:35:11",
															"nodeType": "YulVariableDeclaration",
															"src": "5265:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "5286:10:11",
																		"nodeType": "YulIdentifier",
																		"src": "5286:10:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5298:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5298:1:11",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5282:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5282:3:11"
																},
																"nativeSrc": "5282:18:11",
																"nodeType": "YulFunctionCall",
																"src": "5282:18:11"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "5269:9:11",
																	"nodeType": "YulTypedName",
																	"src": "5269:9:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5309:109:11",
															"nodeType": "YulVariableDeclaration",
															"src": "5309:109:11",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5340:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "5340:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5351:66:11",
																		"nodeType": "YulLiteral",
																		"src": "5351:66:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5321:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "5321:18:11"
																},
																"nativeSrc": "5321:97:11",
																"nodeType": "YulFunctionCall",
																"src": "5321:97:11"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5313:4:11",
																	"nodeType": "YulTypedName",
																	"src": "5313:4:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5427:51:11",
															"nodeType": "YulAssignment",
															"src": "5427:51:11",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5458:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "5458:9:11"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "5469:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "5469:8:11"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5439:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "5439:18:11"
																},
																"nativeSrc": "5439:39:11",
																"nodeType": "YulFunctionCall",
																"src": "5439:39:11"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "5427:8:11",
																	"nodeType": "YulIdentifier",
																	"src": "5427:8:11"
																}
															]
														},
														{
															"nativeSrc": "5487:30:11",
															"nodeType": "YulAssignment",
															"src": "5487:30:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5500:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "5500:5:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "5511:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "5511:4:11"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5507:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5507:3:11"
																		},
																		"nativeSrc": "5507:9:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5507:9:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5496:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5496:3:11"
																},
																"nativeSrc": "5496:21:11",
																"nodeType": "YulFunctionCall",
																"src": "5496:21:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5487:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "5487:5:11"
																}
															]
														},
														{
															"nativeSrc": "5526:40:11",
															"nodeType": "YulAssignment",
															"src": "5526:40:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5539:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "5539:5:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "5550:8:11",
																				"nodeType": "YulIdentifier",
																				"src": "5550:8:11"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "5560:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "5560:4:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5546:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5546:3:11"
																		},
																		"nativeSrc": "5546:19:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5546:19:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5536:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "5536:2:11"
																},
																"nativeSrc": "5536:30:11",
																"nodeType": "YulFunctionCall",
																"src": "5536:30:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5526:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5526:6:11"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "5179:393:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5216:5:11",
														"nodeType": "YulTypedName",
														"src": "5216:5:11",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "5223:10:11",
														"nodeType": "YulTypedName",
														"src": "5223:10:11",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "5235:8:11",
														"nodeType": "YulTypedName",
														"src": "5235:8:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5248:6:11",
														"nodeType": "YulTypedName",
														"src": "5248:6:11",
														"type": ""
													}
												],
												"src": "5179:393:11"
											},
											{
												"body": {
													"nativeSrc": "5623:32:11",
													"nodeType": "YulBlock",
													"src": "5623:32:11",
													"statements": [
														{
															"nativeSrc": "5633:16:11",
															"nodeType": "YulAssignment",
															"src": "5633:16:11",
															"value": {
																"name": "value",
																"nativeSrc": "5644:5:11",
																"nodeType": "YulIdentifier",
																"src": "5644:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5633:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "5633:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "5578:77:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5605:5:11",
														"nodeType": "YulTypedName",
														"src": "5605:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5615:7:11",
														"nodeType": "YulTypedName",
														"src": "5615:7:11",
														"type": ""
													}
												],
												"src": "5578:77:11"
											},
											{
												"body": {
													"nativeSrc": "5693:28:11",
													"nodeType": "YulBlock",
													"src": "5693:28:11",
													"statements": [
														{
															"nativeSrc": "5703:12:11",
															"nodeType": "YulAssignment",
															"src": "5703:12:11",
															"value": {
																"name": "value",
																"nativeSrc": "5710:5:11",
																"nodeType": "YulIdentifier",
																"src": "5710:5:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5703:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5703:3:11"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5661:60:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5679:5:11",
														"nodeType": "YulTypedName",
														"src": "5679:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5689:3:11",
														"nodeType": "YulTypedName",
														"src": "5689:3:11",
														"type": ""
													}
												],
												"src": "5661:60:11"
											},
											{
												"body": {
													"nativeSrc": "5787:82:11",
													"nodeType": "YulBlock",
													"src": "5787:82:11",
													"statements": [
														{
															"nativeSrc": "5797:66:11",
															"nodeType": "YulAssignment",
															"src": "5797:66:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5855:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "5855:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5837:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "5837:17:11"
																				},
																				"nativeSrc": "5837:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5837:24:11"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5828:8:11",
																			"nodeType": "YulIdentifier",
																			"src": "5828:8:11"
																		},
																		"nativeSrc": "5828:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5828:34:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5810:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "5810:17:11"
																},
																"nativeSrc": "5810:53:11",
																"nodeType": "YulFunctionCall",
																"src": "5810:53:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5797:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "5797:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "5727:142:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5767:5:11",
														"nodeType": "YulTypedName",
														"src": "5767:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5777:9:11",
														"nodeType": "YulTypedName",
														"src": "5777:9:11",
														"type": ""
													}
												],
												"src": "5727:142:11"
											},
											{
												"body": {
													"nativeSrc": "5922:28:11",
													"nodeType": "YulBlock",
													"src": "5922:28:11",
													"statements": [
														{
															"nativeSrc": "5932:12:11",
															"nodeType": "YulAssignment",
															"src": "5932:12:11",
															"value": {
																"name": "value",
																"nativeSrc": "5939:5:11",
																"nodeType": "YulIdentifier",
																"src": "5939:5:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5932:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5932:3:11"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "5875:75:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5908:5:11",
														"nodeType": "YulTypedName",
														"src": "5908:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5918:3:11",
														"nodeType": "YulTypedName",
														"src": "5918:3:11",
														"type": ""
													}
												],
												"src": "5875:75:11"
											},
											{
												"body": {
													"nativeSrc": "6032:193:11",
													"nodeType": "YulBlock",
													"src": "6032:193:11",
													"statements": [
														{
															"nativeSrc": "6042:63:11",
															"nodeType": "YulVariableDeclaration",
															"src": "6042:63:11",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "6097:7:11",
																		"nodeType": "YulIdentifier",
																		"src": "6097:7:11"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "6066:30:11",
																	"nodeType": "YulIdentifier",
																	"src": "6066:30:11"
																},
																"nativeSrc": "6066:39:11",
																"nodeType": "YulFunctionCall",
																"src": "6066:39:11"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "6046:16:11",
																	"nodeType": "YulTypedName",
																	"src": "6046:16:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6121:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "6121:4:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "6161:4:11",
																						"nodeType": "YulIdentifier",
																						"src": "6161:4:11"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "6155:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "6155:5:11"
																				},
																				"nativeSrc": "6155:11:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6155:11:11"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "6168:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "6168:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "6200:16:11",
																						"nodeType": "YulIdentifier",
																						"src": "6200:16:11"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "6176:23:11",
																					"nodeType": "YulIdentifier",
																					"src": "6176:23:11"
																				},
																				"nativeSrc": "6176:41:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6176:41:11"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "6127:27:11",
																			"nodeType": "YulIdentifier",
																			"src": "6127:27:11"
																		},
																		"nativeSrc": "6127:91:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6127:91:11"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "6114:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6114:6:11"
																},
																"nativeSrc": "6114:105:11",
																"nodeType": "YulFunctionCall",
																"src": "6114:105:11"
															},
															"nativeSrc": "6114:105:11",
															"nodeType": "YulExpressionStatement",
															"src": "6114:105:11"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "5956:269:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6009:4:11",
														"nodeType": "YulTypedName",
														"src": "6009:4:11",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6015:6:11",
														"nodeType": "YulTypedName",
														"src": "6015:6:11",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "6023:7:11",
														"nodeType": "YulTypedName",
														"src": "6023:7:11",
														"type": ""
													}
												],
												"src": "5956:269:11"
											},
											{
												"body": {
													"nativeSrc": "6280:24:11",
													"nodeType": "YulBlock",
													"src": "6280:24:11",
													"statements": [
														{
															"nativeSrc": "6290:8:11",
															"nodeType": "YulAssignment",
															"src": "6290:8:11",
															"value": {
																"kind": "number",
																"nativeSrc": "6297:1:11",
																"nodeType": "YulLiteral",
																"src": "6297:1:11",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6290:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6290:3:11"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "6231:73:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6276:3:11",
														"nodeType": "YulTypedName",
														"src": "6276:3:11",
														"type": ""
													}
												],
												"src": "6231:73:11"
											},
											{
												"body": {
													"nativeSrc": "6363:136:11",
													"nodeType": "YulBlock",
													"src": "6363:136:11",
													"statements": [
														{
															"nativeSrc": "6373:46:11",
															"nodeType": "YulVariableDeclaration",
															"src": "6373:46:11",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "6387:30:11",
																	"nodeType": "YulIdentifier",
																	"src": "6387:30:11"
																},
																"nativeSrc": "6387:32:11",
																"nodeType": "YulFunctionCall",
																"src": "6387:32:11"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "6377:6:11",
																	"nodeType": "YulTypedName",
																	"src": "6377:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6472:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "6472:4:11"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "6478:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6478:6:11"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "6486:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6486:6:11"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "6428:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "6428:43:11"
																},
																"nativeSrc": "6428:65:11",
																"nodeType": "YulFunctionCall",
																"src": "6428:65:11"
															},
															"nativeSrc": "6428:65:11",
															"nodeType": "YulExpressionStatement",
															"src": "6428:65:11"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "6310:189:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6349:4:11",
														"nodeType": "YulTypedName",
														"src": "6349:4:11",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6355:6:11",
														"nodeType": "YulTypedName",
														"src": "6355:6:11",
														"type": ""
													}
												],
												"src": "6310:189:11"
											},
											{
												"body": {
													"nativeSrc": "6555:136:11",
													"nodeType": "YulBlock",
													"src": "6555:136:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "6622:63:11",
																"nodeType": "YulBlock",
																"src": "6622:63:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6666:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "6666:5:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6673:1:11",
																					"nodeType": "YulLiteral",
																					"src": "6673:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "6636:29:11",
																				"nodeType": "YulIdentifier",
																				"src": "6636:29:11"
																			},
																			"nativeSrc": "6636:39:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6636:39:11"
																		},
																		"nativeSrc": "6636:39:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6636:39:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "6575:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "6575:5:11"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6582:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "6582:3:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6572:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "6572:2:11"
																},
																"nativeSrc": "6572:14:11",
																"nodeType": "YulFunctionCall",
																"src": "6572:14:11"
															},
															"nativeSrc": "6565:120:11",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6587:26:11",
																"nodeType": "YulBlock",
																"src": "6587:26:11",
																"statements": [
																	{
																		"nativeSrc": "6589:22:11",
																		"nodeType": "YulAssignment",
																		"src": "6589:22:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6602:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "6602:5:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6609:1:11",
																					"nodeType": "YulLiteral",
																					"src": "6609:1:11",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6598:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "6598:3:11"
																			},
																			"nativeSrc": "6598:13:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6598:13:11"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "6589:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "6589:5:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6569:2:11",
																"nodeType": "YulBlock",
																"src": "6569:2:11",
																"statements": []
															},
															"src": "6565:120:11"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "6505:186:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "6543:5:11",
														"nodeType": "YulTypedName",
														"src": "6543:5:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6550:3:11",
														"nodeType": "YulTypedName",
														"src": "6550:3:11",
														"type": ""
													}
												],
												"src": "6505:186:11"
											},
											{
												"body": {
													"nativeSrc": "6776:464:11",
													"nodeType": "YulBlock",
													"src": "6776:464:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "6802:431:11",
																"nodeType": "YulBlock",
																"src": "6802:431:11",
																"statements": [
																	{
																		"nativeSrc": "6816:54:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6816:54:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "6864:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "6864:5:11"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "6832:31:11",
																				"nodeType": "YulIdentifier",
																				"src": "6832:31:11"
																			},
																			"nativeSrc": "6832:38:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6832:38:11"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "6820:8:11",
																				"nodeType": "YulTypedName",
																				"src": "6820:8:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6883:63:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6883:63:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "6906:8:11",
																					"nodeType": "YulIdentifier",
																					"src": "6906:8:11"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "6934:10:11",
																							"nodeType": "YulIdentifier",
																							"src": "6934:10:11"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "6916:17:11",
																						"nodeType": "YulIdentifier",
																						"src": "6916:17:11"
																					},
																					"nativeSrc": "6916:29:11",
																					"nodeType": "YulFunctionCall",
																					"src": "6916:29:11"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6902:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "6902:3:11"
																			},
																			"nativeSrc": "6902:44:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6902:44:11"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "6887:11:11",
																				"nodeType": "YulTypedName",
																				"src": "6887:11:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "7103:27:11",
																			"nodeType": "YulBlock",
																			"src": "7103:27:11",
																			"statements": [
																				{
																					"nativeSrc": "7105:23:11",
																					"nodeType": "YulAssignment",
																					"src": "7105:23:11",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "7120:8:11",
																						"nodeType": "YulIdentifier",
																						"src": "7120:8:11"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "7105:11:11",
																							"nodeType": "YulIdentifier",
																							"src": "7105:11:11"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "7087:10:11",
																					"nodeType": "YulIdentifier",
																					"src": "7087:10:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7099:2:11",
																					"nodeType": "YulLiteral",
																					"src": "7099:2:11",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "7084:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "7084:2:11"
																			},
																			"nativeSrc": "7084:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "7084:18:11"
																		},
																		"nativeSrc": "7081:49:11",
																		"nodeType": "YulIf",
																		"src": "7081:49:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "7172:11:11",
																					"nodeType": "YulIdentifier",
																					"src": "7172:11:11"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "7189:8:11",
																							"nodeType": "YulIdentifier",
																							"src": "7189:8:11"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "7217:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "7217:3:11"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "7199:17:11",
																								"nodeType": "YulIdentifier",
																								"src": "7199:17:11"
																							},
																							"nativeSrc": "7199:22:11",
																							"nodeType": "YulFunctionCall",
																							"src": "7199:22:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7185:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "7185:3:11"
																					},
																					"nativeSrc": "7185:37:11",
																					"nodeType": "YulFunctionCall",
																					"src": "7185:37:11"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "7143:28:11",
																				"nodeType": "YulIdentifier",
																				"src": "7143:28:11"
																			},
																			"nativeSrc": "7143:80:11",
																			"nodeType": "YulFunctionCall",
																			"src": "7143:80:11"
																		},
																		"nativeSrc": "7143:80:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "7143:80:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "6793:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "6793:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6798:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6798:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6790:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "6790:2:11"
																},
																"nativeSrc": "6790:11:11",
																"nodeType": "YulFunctionCall",
																"src": "6790:11:11"
															},
															"nativeSrc": "6787:446:11",
															"nodeType": "YulIf",
															"src": "6787:446:11"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "6697:543:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "6752:5:11",
														"nodeType": "YulTypedName",
														"src": "6752:5:11",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6759:3:11",
														"nodeType": "YulTypedName",
														"src": "6759:3:11",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "6764:10:11",
														"nodeType": "YulTypedName",
														"src": "6764:10:11",
														"type": ""
													}
												],
												"src": "6697:543:11"
											},
											{
												"body": {
													"nativeSrc": "7309:54:11",
													"nodeType": "YulBlock",
													"src": "7309:54:11",
													"statements": [
														{
															"nativeSrc": "7319:37:11",
															"nodeType": "YulAssignment",
															"src": "7319:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "7344:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "7344:4:11"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7350:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "7350:5:11"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7340:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7340:3:11"
																},
																"nativeSrc": "7340:16:11",
																"nodeType": "YulFunctionCall",
																"src": "7340:16:11"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7319:8:11",
																	"nodeType": "YulIdentifier",
																	"src": "7319:8:11"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "7246:117:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "7284:4:11",
														"nodeType": "YulTypedName",
														"src": "7284:4:11",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "7290:5:11",
														"nodeType": "YulTypedName",
														"src": "7290:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "7300:8:11",
														"nodeType": "YulTypedName",
														"src": "7300:8:11",
														"type": ""
													}
												],
												"src": "7246:117:11"
											},
											{
												"body": {
													"nativeSrc": "7420:118:11",
													"nodeType": "YulBlock",
													"src": "7420:118:11",
													"statements": [
														{
															"nativeSrc": "7430:68:11",
															"nodeType": "YulVariableDeclaration",
															"src": "7430:68:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7479:1:11",
																						"nodeType": "YulLiteral",
																						"src": "7479:1:11",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "7482:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "7482:5:11"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "7475:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "7475:3:11"
																				},
																				"nativeSrc": "7475:13:11",
																				"nodeType": "YulFunctionCall",
																				"src": "7475:13:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7494:1:11",
																						"nodeType": "YulLiteral",
																						"src": "7494:1:11",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "7490:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "7490:3:11"
																				},
																				"nativeSrc": "7490:6:11",
																				"nodeType": "YulFunctionCall",
																				"src": "7490:6:11"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "7446:28:11",
																			"nodeType": "YulIdentifier",
																			"src": "7446:28:11"
																		},
																		"nativeSrc": "7446:51:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7446:51:11"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "7442:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7442:3:11"
																},
																"nativeSrc": "7442:56:11",
																"nodeType": "YulFunctionCall",
																"src": "7442:56:11"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "7434:4:11",
																	"nodeType": "YulTypedName",
																	"src": "7434:4:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7507:25:11",
															"nodeType": "YulAssignment",
															"src": "7507:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7521:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "7521:4:11"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "7527:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "7527:4:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7517:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7517:3:11"
																},
																"nativeSrc": "7517:15:11",
																"nodeType": "YulFunctionCall",
																"src": "7517:15:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7507:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7507:6:11"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "7369:169:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7397:4:11",
														"nodeType": "YulTypedName",
														"src": "7397:4:11",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "7403:5:11",
														"nodeType": "YulTypedName",
														"src": "7403:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "7413:6:11",
														"nodeType": "YulTypedName",
														"src": "7413:6:11",
														"type": ""
													}
												],
												"src": "7369:169:11"
											},
											{
												"body": {
													"nativeSrc": "7624:214:11",
													"nodeType": "YulBlock",
													"src": "7624:214:11",
													"statements": [
														{
															"nativeSrc": "7757:37:11",
															"nodeType": "YulAssignment",
															"src": "7757:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7784:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "7784:4:11"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "7790:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "7790:3:11"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "7765:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "7765:18:11"
																},
																"nativeSrc": "7765:29:11",
																"nodeType": "YulFunctionCall",
																"src": "7765:29:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7757:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "7757:4:11"
																}
															]
														},
														{
															"nativeSrc": "7803:29:11",
															"nodeType": "YulAssignment",
															"src": "7803:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7814:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "7814:4:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7824:1:11",
																				"nodeType": "YulLiteral",
																				"src": "7824:1:11",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "7827:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "7827:3:11"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7820:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7820:3:11"
																		},
																		"nativeSrc": "7820:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7820:11:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7811:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "7811:2:11"
																},
																"nativeSrc": "7811:21:11",
																"nodeType": "YulFunctionCall",
																"src": "7811:21:11"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "7803:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "7803:4:11"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "7543:295:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7605:4:11",
														"nodeType": "YulTypedName",
														"src": "7605:4:11",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7611:3:11",
														"nodeType": "YulTypedName",
														"src": "7611:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "7619:4:11",
														"nodeType": "YulTypedName",
														"src": "7619:4:11",
														"type": ""
													}
												],
												"src": "7543:295:11"
											},
											{
												"body": {
													"nativeSrc": "7935:1303:11",
													"nodeType": "YulBlock",
													"src": "7935:1303:11",
													"statements": [
														{
															"nativeSrc": "7946:51:11",
															"nodeType": "YulVariableDeclaration",
															"src": "7946:51:11",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7993:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "7993:3:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "7960:32:11",
																	"nodeType": "YulIdentifier",
																	"src": "7960:32:11"
																},
																"nativeSrc": "7960:37:11",
																"nodeType": "YulFunctionCall",
																"src": "7960:37:11"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "7950:6:11",
																	"nodeType": "YulTypedName",
																	"src": "7950:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8082:22:11",
																"nodeType": "YulBlock",
																"src": "8082:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8084:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "8084:16:11"
																			},
																			"nativeSrc": "8084:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "8084:18:11"
																		},
																		"nativeSrc": "8084:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "8084:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8054:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8054:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8062:18:11",
																		"nodeType": "YulLiteral",
																		"src": "8062:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8051:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "8051:2:11"
																},
																"nativeSrc": "8051:30:11",
																"nodeType": "YulFunctionCall",
																"src": "8051:30:11"
															},
															"nativeSrc": "8048:56:11",
															"nodeType": "YulIf",
															"src": "8048:56:11"
														},
														{
															"nativeSrc": "8114:52:11",
															"nodeType": "YulVariableDeclaration",
															"src": "8114:52:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "8160:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "8160:4:11"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "8154:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "8154:5:11"
																		},
																		"nativeSrc": "8154:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8154:11:11"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "8128:25:11",
																	"nodeType": "YulIdentifier",
																	"src": "8128:25:11"
																},
																"nativeSrc": "8128:38:11",
																"nodeType": "YulFunctionCall",
																"src": "8128:38:11"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "8118:6:11",
																	"nodeType": "YulTypedName",
																	"src": "8118:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "8259:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "8259:4:11"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "8265:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8265:6:11"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "8273:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8273:6:11"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "8213:45:11",
																	"nodeType": "YulIdentifier",
																	"src": "8213:45:11"
																},
																"nativeSrc": "8213:67:11",
																"nodeType": "YulFunctionCall",
																"src": "8213:67:11"
															},
															"nativeSrc": "8213:67:11",
															"nodeType": "YulExpressionStatement",
															"src": "8213:67:11"
														},
														{
															"nativeSrc": "8290:18:11",
															"nodeType": "YulVariableDeclaration",
															"src": "8290:18:11",
															"value": {
																"kind": "number",
																"nativeSrc": "8307:1:11",
																"nodeType": "YulLiteral",
																"src": "8307:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8294:9:11",
																	"nodeType": "YulTypedName",
																	"src": "8294:9:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8318:17:11",
															"nodeType": "YulAssignment",
															"src": "8318:17:11",
															"value": {
																"kind": "number",
																"nativeSrc": "8331:4:11",
																"nodeType": "YulLiteral",
																"src": "8331:4:11",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8318:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "8318:9:11"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8382:611:11",
																		"nodeType": "YulBlock",
																		"src": "8382:611:11",
																		"statements": [
																			{
																				"nativeSrc": "8396:37:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8396:37:11",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "8415:6:11",
																							"nodeType": "YulIdentifier",
																							"src": "8415:6:11"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "8427:4:11",
																									"nodeType": "YulLiteral",
																									"src": "8427:4:11",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "8423:3:11",
																								"nodeType": "YulIdentifier",
																								"src": "8423:3:11"
																							},
																							"nativeSrc": "8423:9:11",
																							"nodeType": "YulFunctionCall",
																							"src": "8423:9:11"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "8411:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "8411:3:11"
																					},
																					"nativeSrc": "8411:22:11",
																					"nodeType": "YulFunctionCall",
																					"src": "8411:22:11"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "8400:7:11",
																						"nodeType": "YulTypedName",
																						"src": "8400:7:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8447:51:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8447:51:11",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8493:4:11",
																							"nodeType": "YulIdentifier",
																							"src": "8493:4:11"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "8461:31:11",
																						"nodeType": "YulIdentifier",
																						"src": "8461:31:11"
																					},
																					"nativeSrc": "8461:37:11",
																					"nodeType": "YulFunctionCall",
																					"src": "8461:37:11"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "8451:6:11",
																						"nodeType": "YulTypedName",
																						"src": "8451:6:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8511:10:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8511:10:11",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8520:1:11",
																					"nodeType": "YulLiteral",
																					"src": "8520:1:11",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "8515:1:11",
																						"nodeType": "YulTypedName",
																						"src": "8515:1:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8579:163:11",
																					"nodeType": "YulBlock",
																					"src": "8579:163:11",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8604:6:11",
																										"nodeType": "YulIdentifier",
																										"src": "8604:6:11"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "8622:3:11",
																														"nodeType": "YulIdentifier",
																														"src": "8622:3:11"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "8627:9:11",
																														"nodeType": "YulIdentifier",
																														"src": "8627:9:11"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "8618:3:11",
																													"nodeType": "YulIdentifier",
																													"src": "8618:3:11"
																												},
																												"nativeSrc": "8618:19:11",
																												"nodeType": "YulFunctionCall",
																												"src": "8618:19:11"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "8612:5:11",
																											"nodeType": "YulIdentifier",
																											"src": "8612:5:11"
																										},
																										"nativeSrc": "8612:26:11",
																										"nodeType": "YulFunctionCall",
																										"src": "8612:26:11"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8597:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "8597:6:11"
																								},
																								"nativeSrc": "8597:42:11",
																								"nodeType": "YulFunctionCall",
																								"src": "8597:42:11"
																							},
																							"nativeSrc": "8597:42:11",
																							"nodeType": "YulExpressionStatement",
																							"src": "8597:42:11"
																						},
																						{
																							"nativeSrc": "8656:24:11",
																							"nodeType": "YulAssignment",
																							"src": "8656:24:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8670:6:11",
																										"nodeType": "YulIdentifier",
																										"src": "8670:6:11"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8678:1:11",
																										"nodeType": "YulLiteral",
																										"src": "8678:1:11",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8666:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "8666:3:11"
																								},
																								"nativeSrc": "8666:14:11",
																								"nodeType": "YulFunctionCall",
																								"src": "8666:14:11"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "8656:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "8656:6:11"
																								}
																							]
																						},
																						{
																							"nativeSrc": "8697:31:11",
																							"nodeType": "YulAssignment",
																							"src": "8697:31:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "8714:9:11",
																										"nodeType": "YulIdentifier",
																										"src": "8714:9:11"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8725:2:11",
																										"nodeType": "YulLiteral",
																										"src": "8725:2:11",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8710:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "8710:3:11"
																								},
																								"nativeSrc": "8710:18:11",
																								"nodeType": "YulFunctionCall",
																								"src": "8710:18:11"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "8697:9:11",
																									"nodeType": "YulIdentifier",
																									"src": "8697:9:11"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "8545:1:11",
																							"nodeType": "YulIdentifier",
																							"src": "8545:1:11"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8548:7:11",
																							"nodeType": "YulIdentifier",
																							"src": "8548:7:11"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8542:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "8542:2:11"
																					},
																					"nativeSrc": "8542:14:11",
																					"nodeType": "YulFunctionCall",
																					"src": "8542:14:11"
																				},
																				"nativeSrc": "8534:208:11",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "8557:21:11",
																					"nodeType": "YulBlock",
																					"src": "8557:21:11",
																					"statements": [
																						{
																							"nativeSrc": "8559:17:11",
																							"nodeType": "YulAssignment",
																							"src": "8559:17:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "8568:1:11",
																										"nodeType": "YulIdentifier",
																										"src": "8568:1:11"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8571:4:11",
																										"nodeType": "YulLiteral",
																										"src": "8571:4:11",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8564:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "8564:3:11"
																								},
																								"nativeSrc": "8564:12:11",
																								"nodeType": "YulFunctionCall",
																								"src": "8564:12:11"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "8559:1:11",
																									"nodeType": "YulIdentifier",
																									"src": "8559:1:11"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "8538:3:11",
																					"nodeType": "YulBlock",
																					"src": "8538:3:11",
																					"statements": []
																				},
																				"src": "8534:208:11"
																			},
																			{
																				"body": {
																					"nativeSrc": "8778:156:11",
																					"nodeType": "YulBlock",
																					"src": "8778:156:11",
																					"statements": [
																						{
																							"nativeSrc": "8796:43:11",
																							"nodeType": "YulVariableDeclaration",
																							"src": "8796:43:11",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8823:3:11",
																												"nodeType": "YulIdentifier",
																												"src": "8823:3:11"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8828:9:11",
																												"nodeType": "YulIdentifier",
																												"src": "8828:9:11"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8819:3:11",
																											"nodeType": "YulIdentifier",
																											"src": "8819:3:11"
																										},
																										"nativeSrc": "8819:19:11",
																										"nodeType": "YulFunctionCall",
																										"src": "8819:19:11"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8813:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "8813:5:11"
																								},
																								"nativeSrc": "8813:26:11",
																								"nodeType": "YulFunctionCall",
																								"src": "8813:26:11"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "8800:9:11",
																									"nodeType": "YulTypedName",
																									"src": "8800:9:11",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8863:6:11",
																										"nodeType": "YulIdentifier",
																										"src": "8863:6:11"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "8890:9:11",
																												"nodeType": "YulIdentifier",
																												"src": "8890:9:11"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "8905:6:11",
																														"nodeType": "YulIdentifier",
																														"src": "8905:6:11"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "8913:4:11",
																														"nodeType": "YulLiteral",
																														"src": "8913:4:11",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "8901:3:11",
																													"nodeType": "YulIdentifier",
																													"src": "8901:3:11"
																												},
																												"nativeSrc": "8901:17:11",
																												"nodeType": "YulFunctionCall",
																												"src": "8901:17:11"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "8871:18:11",
																											"nodeType": "YulIdentifier",
																											"src": "8871:18:11"
																										},
																										"nativeSrc": "8871:48:11",
																										"nodeType": "YulFunctionCall",
																										"src": "8871:48:11"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8856:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "8856:6:11"
																								},
																								"nativeSrc": "8856:64:11",
																								"nodeType": "YulFunctionCall",
																								"src": "8856:64:11"
																							},
																							"nativeSrc": "8856:64:11",
																							"nodeType": "YulExpressionStatement",
																							"src": "8856:64:11"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8761:7:11",
																							"nodeType": "YulIdentifier",
																							"src": "8761:7:11"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "8770:6:11",
																							"nodeType": "YulIdentifier",
																							"src": "8770:6:11"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8758:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "8758:2:11"
																					},
																					"nativeSrc": "8758:19:11",
																					"nodeType": "YulFunctionCall",
																					"src": "8758:19:11"
																				},
																				"nativeSrc": "8755:179:11",
																				"nodeType": "YulIf",
																				"src": "8755:179:11"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8954:4:11",
																							"nodeType": "YulIdentifier",
																							"src": "8954:4:11"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "8968:6:11",
																											"nodeType": "YulIdentifier",
																											"src": "8968:6:11"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "8976:1:11",
																											"nodeType": "YulLiteral",
																											"src": "8976:1:11",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "8964:3:11",
																										"nodeType": "YulIdentifier",
																										"src": "8964:3:11"
																									},
																									"nativeSrc": "8964:14:11",
																									"nodeType": "YulFunctionCall",
																									"src": "8964:14:11"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "8980:1:11",
																									"nodeType": "YulLiteral",
																									"src": "8980:1:11",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8960:3:11",
																								"nodeType": "YulIdentifier",
																								"src": "8960:3:11"
																							},
																							"nativeSrc": "8960:22:11",
																							"nodeType": "YulFunctionCall",
																							"src": "8960:22:11"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8947:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "8947:6:11"
																					},
																					"nativeSrc": "8947:36:11",
																					"nodeType": "YulFunctionCall",
																					"src": "8947:36:11"
																				},
																				"nativeSrc": "8947:36:11",
																				"nodeType": "YulExpressionStatement",
																				"src": "8947:36:11"
																			}
																		]
																	},
																	"nativeSrc": "8375:618:11",
																	"nodeType": "YulCase",
																	"src": "8375:618:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8380:1:11",
																		"nodeType": "YulLiteral",
																		"src": "8380:1:11",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "9010:222:11",
																		"nodeType": "YulBlock",
																		"src": "9010:222:11",
																		"statements": [
																			{
																				"nativeSrc": "9024:14:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9024:14:11",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "9037:1:11",
																					"nodeType": "YulLiteral",
																					"src": "9037:1:11",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "9028:5:11",
																						"nodeType": "YulTypedName",
																						"src": "9028:5:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "9061:67:11",
																					"nodeType": "YulBlock",
																					"src": "9061:67:11",
																					"statements": [
																						{
																							"nativeSrc": "9079:35:11",
																							"nodeType": "YulAssignment",
																							"src": "9079:35:11",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "9098:3:11",
																												"nodeType": "YulIdentifier",
																												"src": "9098:3:11"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "9103:9:11",
																												"nodeType": "YulIdentifier",
																												"src": "9103:9:11"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "9094:3:11",
																											"nodeType": "YulIdentifier",
																											"src": "9094:3:11"
																										},
																										"nativeSrc": "9094:19:11",
																										"nodeType": "YulFunctionCall",
																										"src": "9094:19:11"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "9088:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "9088:5:11"
																								},
																								"nativeSrc": "9088:26:11",
																								"nodeType": "YulFunctionCall",
																								"src": "9088:26:11"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "9079:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "9079:5:11"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "9054:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "9054:6:11"
																				},
																				"nativeSrc": "9051:77:11",
																				"nodeType": "YulIf",
																				"src": "9051:77:11"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9148:4:11",
																							"nodeType": "YulIdentifier",
																							"src": "9148:4:11"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "9207:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "9207:5:11"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "9214:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "9214:6:11"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "9154:52:11",
																								"nodeType": "YulIdentifier",
																								"src": "9154:52:11"
																							},
																							"nativeSrc": "9154:67:11",
																							"nodeType": "YulFunctionCall",
																							"src": "9154:67:11"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9141:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "9141:6:11"
																					},
																					"nativeSrc": "9141:81:11",
																					"nodeType": "YulFunctionCall",
																					"src": "9141:81:11"
																				},
																				"nativeSrc": "9141:81:11",
																				"nodeType": "YulExpressionStatement",
																				"src": "9141:81:11"
																			}
																		]
																	},
																	"nativeSrc": "9002:230:11",
																	"nodeType": "YulCase",
																	"src": "9002:230:11",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8355:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8355:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8363:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8363:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8352:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "8352:2:11"
																},
																"nativeSrc": "8352:14:11",
																"nodeType": "YulFunctionCall",
																"src": "8352:14:11"
															},
															"nativeSrc": "8345:887:11",
															"nodeType": "YulSwitch",
															"src": "8345:887:11"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "7843:1395:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7924:4:11",
														"nodeType": "YulTypedName",
														"src": "7924:4:11",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "7930:3:11",
														"nodeType": "YulTypedName",
														"src": "7930:3:11",
														"type": ""
													}
												],
												"src": "7843:1395:11"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_address_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x271B CODESIZE SUB DUP1 PUSH3 0x271B DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x29C JUMP JUMPDEST DUP3 PUSH1 0x1 SWAP1 DUP2 PUSH3 0x48 SWAP2 SWAP1 PUSH3 0x581 JUMP JUMPDEST POP DUP2 PUSH1 0x2 SWAP1 DUP2 PUSH3 0x5A SWAP2 SWAP1 PUSH3 0x581 JUMP JUMPDEST POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP PUSH3 0x668 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x10D DUP3 PUSH3 0xC2 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x12F JUMPI PUSH3 0x12E PUSH3 0xD3 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x144 PUSH3 0xA4 JUMP JUMPDEST SWAP1 POP PUSH3 0x152 DUP3 DUP3 PUSH3 0x102 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x175 JUMPI PUSH3 0x174 PUSH3 0xD3 JUMP JUMPDEST JUMPDEST PUSH3 0x180 DUP3 PUSH3 0xC2 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x1AD JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x190 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1D0 PUSH3 0x1CA DUP5 PUSH3 0x157 JUMP JUMPDEST PUSH3 0x138 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1EF JUMPI PUSH3 0x1EE PUSH3 0xBD JUMP JUMPDEST JUMPDEST PUSH3 0x1FC DUP5 DUP3 DUP6 PUSH3 0x18D JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x21C JUMPI PUSH3 0x21B PUSH3 0xB8 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x22E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x1B9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x264 DUP3 PUSH3 0x237 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x276 DUP2 PUSH3 0x257 JUMP JUMPDEST DUP2 EQ PUSH3 0x282 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x296 DUP2 PUSH3 0x26B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x2B8 JUMPI PUSH3 0x2B7 PUSH3 0xAE JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x2D9 JUMPI PUSH3 0x2D8 PUSH3 0xB3 JUMP JUMPDEST JUMPDEST PUSH3 0x2E7 DUP7 DUP3 DUP8 ADD PUSH3 0x204 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x30B JUMPI PUSH3 0x30A PUSH3 0xB3 JUMP JUMPDEST JUMPDEST PUSH3 0x319 DUP7 DUP3 DUP8 ADD PUSH3 0x204 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x32C DUP7 DUP3 DUP8 ADD PUSH3 0x285 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x389 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x39F JUMPI PUSH3 0x39E PUSH3 0x341 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x409 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x3CA JUMP JUMPDEST PUSH3 0x415 DUP7 DUP4 PUSH3 0x3CA JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x462 PUSH3 0x45C PUSH3 0x456 DUP5 PUSH3 0x42D JUMP JUMPDEST PUSH3 0x437 JUMP JUMPDEST PUSH3 0x42D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x47E DUP4 PUSH3 0x441 JUMP JUMPDEST PUSH3 0x496 PUSH3 0x48D DUP3 PUSH3 0x469 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x3D7 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x4AD PUSH3 0x49E JUMP JUMPDEST PUSH3 0x4BA DUP2 DUP5 DUP5 PUSH3 0x473 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x4E2 JUMPI PUSH3 0x4D6 PUSH1 0x0 DUP3 PUSH3 0x4A3 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x4C0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x531 JUMPI PUSH3 0x4FB DUP2 PUSH3 0x3A5 JUMP JUMPDEST PUSH3 0x506 DUP5 PUSH3 0x3BA JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x516 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x52E PUSH3 0x525 DUP6 PUSH3 0x3BA JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x4BF JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x556 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x536 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x571 DUP4 DUP4 PUSH3 0x543 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x58C DUP3 PUSH3 0x336 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x5A8 JUMPI PUSH3 0x5A7 PUSH3 0xD3 JUMP JUMPDEST JUMPDEST PUSH3 0x5B4 DUP3 SLOAD PUSH3 0x370 JUMP JUMPDEST PUSH3 0x5C1 DUP3 DUP3 DUP6 PUSH3 0x4E6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x5F9 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x5E4 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x5F0 DUP6 DUP3 PUSH3 0x563 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x660 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x609 DUP7 PUSH3 0x3A5 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x633 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x60C JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x653 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x64F PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x543 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x20A3 DUP1 PUSH3 0x678 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xB2BDFA7B GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xB2BDFA7B EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2EC JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x266 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x30E0789E EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1CC JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x148 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x114 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x1509 JUMP JUMPDEST PUSH2 0x31C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x1551 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x132 PUSH2 0x3FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x15FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x1654 JUMP JUMPDEST PUSH2 0x490 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x16C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x1709 JUMP JUMPDEST PUSH2 0x4D6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0x1749 JUMP JUMPDEST PUSH2 0x5ED JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C5 SWAP2 SWAP1 PUSH2 0x1749 JUMP JUMPDEST PUSH2 0x64D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E1 SWAP2 SWAP1 PUSH2 0x1749 JUMP JUMPDEST PUSH2 0x8D7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x202 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x1654 JUMP JUMPDEST PUSH2 0x8F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20F SWAP2 SWAP1 PUSH2 0x16C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x232 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22D SWAP2 SWAP1 PUSH2 0x179C JUMP JUMPDEST PUSH2 0x97D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x17D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x250 PUSH2 0xA34 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25D SWAP2 SWAP1 PUSH2 0x15FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x280 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27B SWAP2 SWAP1 PUSH2 0x181F JUMP JUMPDEST PUSH2 0xAC6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28A PUSH2 0xADC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x16C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B5 SWAP2 SWAP1 PUSH2 0x1994 JUMP JUMPDEST PUSH2 0xB00 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D1 SWAP2 SWAP1 PUSH2 0x1654 JUMP JUMPDEST PUSH2 0xB62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E3 SWAP2 SWAP1 PUSH2 0x15FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x306 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x301 SWAP2 SWAP1 PUSH2 0x1A17 JUMP JUMPDEST PUSH2 0xBCA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x313 SWAP2 SWAP1 PUSH2 0x1551 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3E7 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x3F7 JUMPI POP PUSH2 0x3F6 DUP3 PUSH2 0xC5E JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x40D SWAP1 PUSH2 0x1A86 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x439 SWAP1 PUSH2 0x1A86 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x486 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x45B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x486 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x469 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49B DUP3 PUSH2 0xCC8 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E1 DUP3 PUSH2 0x8F7 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x551 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x548 SWAP1 PUSH2 0x1B29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x570 PUSH2 0xD13 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x59F JUMPI POP PUSH2 0x59E DUP2 PUSH2 0x599 PUSH2 0xD13 JUMP JUMPDEST PUSH2 0xBCA JUMP JUMPDEST JUMPDEST PUSH2 0x5DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D5 SWAP1 PUSH2 0x1BBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5E8 DUP4 DUP4 PUSH2 0xD1B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x5FE PUSH2 0x5F8 PUSH2 0xD13 JUMP JUMPDEST DUP3 PUSH2 0xDD4 JUMP JUMPDEST PUSH2 0x63D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x634 SWAP1 PUSH2 0x1C4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x648 DUP4 DUP4 DUP4 PUSH2 0x64D JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x66D DUP3 PUSH2 0x8F7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6BA SWAP1 PUSH2 0x1CDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6D0 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xE69 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x6F0 DUP3 PUSH2 0x8F7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x746 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x73D SWAP1 PUSH2 0x1CDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x8D2 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xE6F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x8F2 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xB00 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x903 DUP4 PUSH2 0xE75 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x974 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x96B SWAP1 PUSH2 0x1D4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9ED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E4 SWAP1 PUSH2 0x1DDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0xA43 SWAP1 PUSH2 0x1A86 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA6F SWAP1 PUSH2 0x1A86 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xABC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA91 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xABC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA9F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xAD8 PUSH2 0xAD1 PUSH2 0xD13 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xEB2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xB11 PUSH2 0xB0B PUSH2 0xD13 JUMP JUMPDEST DUP4 PUSH2 0xDD4 JUMP JUMPDEST PUSH2 0xB50 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB47 SWAP1 PUSH2 0x1C4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB5C DUP5 DUP5 DUP5 DUP5 PUSH2 0x101E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xB6D DUP3 PUSH2 0xCC8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB77 PUSH2 0x107A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0xB97 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xBC2 JUMP JUMPDEST DUP1 PUSH2 0xBA1 DUP5 PUSH2 0x1091 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xBB2 SWAP3 SWAP2 SWAP1 PUSH2 0x1E39 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD1 DUP2 PUSH2 0x115F JUMP JUMPDEST PUSH2 0xD10 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD07 SWAP1 PUSH2 0x1D4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD8E DUP4 PUSH2 0x8F7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xDE0 DUP4 PUSH2 0x8F7 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xE22 JUMPI POP PUSH2 0xE21 DUP2 DUP6 PUSH2 0xBCA JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xE60 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE48 DUP5 PUSH2 0x490 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF20 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF17 SWAP1 PUSH2 0x1EA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1011 SWAP2 SWAP1 PUSH2 0x1551 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1029 DUP5 DUP5 DUP5 PUSH2 0x64D JUMP JUMPDEST PUSH2 0x1035 DUP5 DUP5 DUP5 DUP5 PUSH2 0x11A0 JUMP JUMPDEST PUSH2 0x1074 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x106B SWAP1 PUSH2 0x1F3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x10A0 DUP5 PUSH2 0x1327 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10BF JUMPI PUSH2 0x10BE PUSH2 0x1869 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10F1 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1154 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1148 JUMPI PUSH2 0x1147 PUSH2 0x1F5B JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x10FF JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1181 DUP4 PUSH2 0xE75 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11C1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x147A JUMP JUMPDEST ISZERO PUSH2 0x131A JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x11EA PUSH2 0xD13 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x120C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1FDF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1248 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1245 SWAP2 SWAP1 PUSH2 0x2040 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x12CA JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1278 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x127D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x12C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12B9 SWAP1 PUSH2 0x1F3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x131F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1385 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x137B JUMPI PUSH2 0x137A PUSH2 0x1F5B JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x13C2 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x13B8 JUMPI PUSH2 0x13B7 PUSH2 0x1F5B JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x13F1 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x13E7 JUMPI PUSH2 0x13E6 PUSH2 0x1F5B JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x141A JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1410 JUMPI PUSH2 0x140F PUSH2 0x1F5B JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x143F JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1435 JUMPI PUSH2 0x1434 PUSH2 0x1F5B JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1462 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1458 JUMPI PUSH2 0x1457 PUSH2 0x1F5B JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1471 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14E6 DUP2 PUSH2 0x14B1 JUMP JUMPDEST DUP2 EQ PUSH2 0x14F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1503 DUP2 PUSH2 0x14DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x151F JUMPI PUSH2 0x151E PUSH2 0x14A7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x152D DUP5 DUP3 DUP6 ADD PUSH2 0x14F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x154B DUP2 PUSH2 0x1536 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1566 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1542 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15A6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x158B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15CE DUP3 PUSH2 0x156C JUMP JUMPDEST PUSH2 0x15D8 DUP2 DUP6 PUSH2 0x1577 JUMP JUMPDEST SWAP4 POP PUSH2 0x15E8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1588 JUMP JUMPDEST PUSH2 0x15F1 DUP2 PUSH2 0x15B2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1616 DUP2 DUP5 PUSH2 0x15C3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1631 DUP2 PUSH2 0x161E JUMP JUMPDEST DUP2 EQ PUSH2 0x163C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x164E DUP2 PUSH2 0x1628 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x166A JUMPI PUSH2 0x1669 PUSH2 0x14A7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1678 DUP5 DUP3 DUP6 ADD PUSH2 0x163F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16AC DUP3 PUSH2 0x1681 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16BC DUP2 PUSH2 0x16A1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16D7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16B3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16E6 DUP2 PUSH2 0x16A1 JUMP JUMPDEST DUP2 EQ PUSH2 0x16F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1703 DUP2 PUSH2 0x16DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1720 JUMPI PUSH2 0x171F PUSH2 0x14A7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x172E DUP6 DUP3 DUP7 ADD PUSH2 0x16F4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x173F DUP6 DUP3 DUP7 ADD PUSH2 0x163F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1762 JUMPI PUSH2 0x1761 PUSH2 0x14A7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1770 DUP7 DUP3 DUP8 ADD PUSH2 0x16F4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1781 DUP7 DUP3 DUP8 ADD PUSH2 0x16F4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1792 DUP7 DUP3 DUP8 ADD PUSH2 0x163F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17B2 JUMPI PUSH2 0x17B1 PUSH2 0x14A7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17C0 DUP5 DUP3 DUP6 ADD PUSH2 0x16F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17D2 DUP2 PUSH2 0x161E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17ED PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x17C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17FC DUP2 PUSH2 0x1536 JUMP JUMPDEST DUP2 EQ PUSH2 0x1807 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1819 DUP2 PUSH2 0x17F3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1836 JUMPI PUSH2 0x1835 PUSH2 0x14A7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1844 DUP6 DUP3 DUP7 ADD PUSH2 0x16F4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1855 DUP6 DUP3 DUP7 ADD PUSH2 0x180A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x18A1 DUP3 PUSH2 0x15B2 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x18C0 JUMPI PUSH2 0x18BF PUSH2 0x1869 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18D3 PUSH2 0x149D JUMP JUMPDEST SWAP1 POP PUSH2 0x18DF DUP3 DUP3 PUSH2 0x1898 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x18FF JUMPI PUSH2 0x18FE PUSH2 0x1869 JUMP JUMPDEST JUMPDEST PUSH2 0x1908 DUP3 PUSH2 0x15B2 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1937 PUSH2 0x1932 DUP5 PUSH2 0x18E4 JUMP JUMPDEST PUSH2 0x18C9 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1953 JUMPI PUSH2 0x1952 PUSH2 0x1864 JUMP JUMPDEST JUMPDEST PUSH2 0x195E DUP5 DUP3 DUP6 PUSH2 0x1915 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x197B JUMPI PUSH2 0x197A PUSH2 0x185F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x198B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1924 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x19AE JUMPI PUSH2 0x19AD PUSH2 0x14A7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19BC DUP8 DUP3 DUP9 ADD PUSH2 0x16F4 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x19CD DUP8 DUP3 DUP9 ADD PUSH2 0x16F4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x19DE DUP8 DUP3 DUP9 ADD PUSH2 0x163F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19FF JUMPI PUSH2 0x19FE PUSH2 0x14AC JUMP JUMPDEST JUMPDEST PUSH2 0x1A0B DUP8 DUP3 DUP9 ADD PUSH2 0x1966 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A2E JUMPI PUSH2 0x1A2D PUSH2 0x14A7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A3C DUP6 DUP3 DUP7 ADD PUSH2 0x16F4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A4D DUP6 DUP3 DUP7 ADD PUSH2 0x16F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1A9E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1AB1 JUMPI PUSH2 0x1AB0 PUSH2 0x1A57 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B13 PUSH1 0x21 DUP4 PUSH2 0x1577 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B1E DUP3 PUSH2 0x1AB7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B42 DUP2 PUSH2 0x1B06 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BA5 PUSH1 0x3D DUP4 PUSH2 0x1577 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BB0 DUP3 PUSH2 0x1B49 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BD4 DUP2 PUSH2 0x1B98 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C37 PUSH1 0x2D DUP4 PUSH2 0x1577 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C42 DUP3 PUSH2 0x1BDB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C66 DUP2 PUSH2 0x1C2A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CC9 PUSH1 0x25 DUP4 PUSH2 0x1577 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CD4 DUP3 PUSH2 0x1C6D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CF8 DUP2 PUSH2 0x1CBC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D35 PUSH1 0x18 DUP4 PUSH2 0x1577 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D40 DUP3 PUSH2 0x1CFF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D64 DUP2 PUSH2 0x1D28 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DC7 PUSH1 0x29 DUP4 PUSH2 0x1577 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DD2 DUP3 PUSH2 0x1D6B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DF6 DUP2 PUSH2 0x1DBA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E13 DUP3 PUSH2 0x156C JUMP JUMPDEST PUSH2 0x1E1D DUP2 DUP6 PUSH2 0x1DFD JUMP JUMPDEST SWAP4 POP PUSH2 0x1E2D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1588 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E45 DUP3 DUP6 PUSH2 0x1E08 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E51 DUP3 DUP5 PUSH2 0x1E08 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E93 PUSH1 0x19 DUP4 PUSH2 0x1577 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E9E DUP3 PUSH2 0x1E5D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EC2 DUP2 PUSH2 0x1E86 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F25 PUSH1 0x32 DUP4 PUSH2 0x1577 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F30 DUP3 PUSH2 0x1EC9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F54 DUP2 PUSH2 0x1F18 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FB1 DUP3 PUSH2 0x1F8A JUMP JUMPDEST PUSH2 0x1FBB DUP2 DUP6 PUSH2 0x1F95 JUMP JUMPDEST SWAP4 POP PUSH2 0x1FCB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1588 JUMP JUMPDEST PUSH2 0x1FD4 DUP2 PUSH2 0x15B2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1FF4 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x16B3 JUMP JUMPDEST PUSH2 0x2001 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x16B3 JUMP JUMPDEST PUSH2 0x200E PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x17C9 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2020 DUP2 DUP5 PUSH2 0x1FA6 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x203A DUP2 PUSH2 0x14DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2056 JUMPI PUSH2 0x2055 PUSH2 0x14A7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2064 DUP5 DUP3 DUP6 ADD PUSH2 0x202B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STATICCALL 0x4D COINBASE 0xD2 0xE9 0xE8 0xE3 LOG0 CODECOPY 0x2A 0xE3 PUSH29 0xBA06C39F5F090E06C232B82C5F4DF0064D4F86FC64736F6C6343000815 STOP CALLER ",
							"sourceMap": "628:16557:0:-:0;;;1416:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1506:5;1498;:13;;;;;;:::i;:::-;;1531:7;1521;:17;;;;;;:::i;:::-;;1557:6;1548;;:15;;;;;;;;;;;;;;;;;;1416:154;;;628:16557;;7:75:11;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:126::-;2714:7;2754:42;2747:5;2743:54;2732:65;;2677:126;;;:::o;2809:96::-;2846:7;2875:24;2893:5;2875:24;:::i;:::-;2864:35;;2809:96;;;:::o;2911:122::-;2984:24;3002:5;2984:24;:::i;:::-;2977:5;2974:35;2964:63;;3023:1;3020;3013:12;2964:63;2911:122;:::o;3039:143::-;3096:5;3127:6;3121:13;3112:22;;3143:33;3170:5;3143:33;:::i;:::-;3039:143;;;;:::o;3188:1009::-;3296:6;3304;3312;3361:2;3349:9;3340:7;3336:23;3332:32;3329:119;;;3367:79;;:::i;:::-;3329:119;3508:1;3497:9;3493:17;3487:24;3538:18;3530:6;3527:30;3524:117;;;3560:79;;:::i;:::-;3524:117;3665:74;3731:7;3722:6;3711:9;3707:22;3665:74;:::i;:::-;3655:84;;3458:291;3809:2;3798:9;3794:18;3788:25;3840:18;3832:6;3829:30;3826:117;;;3862:79;;:::i;:::-;3826:117;3967:74;4033:7;4024:6;4013:9;4009:22;3967:74;:::i;:::-;3957:84;;3759:292;4090:2;4116:64;4172:7;4163:6;4152:9;4148:22;4116:64;:::i;:::-;4106:74;;4061:129;3188:1009;;;;;:::o;4203:99::-;4255:6;4289:5;4283:12;4273:22;;4203:99;;;:::o;4308:180::-;4356:77;4353:1;4346:88;4453:4;4450:1;4443:15;4477:4;4474:1;4467:15;4494:320;4538:6;4575:1;4569:4;4565:12;4555:22;;4622:1;4616:4;4612:12;4643:18;4633:81;;4699:4;4691:6;4687:17;4677:27;;4633:81;4761:2;4753:6;4750:14;4730:18;4727:38;4724:84;;4780:18;;:::i;:::-;4724:84;4545:269;4494:320;;;:::o;4820:141::-;4869:4;4892:3;4884:11;;4915:3;4912:1;4905:14;4949:4;4946:1;4936:18;4928:26;;4820:141;;;:::o;4967:93::-;5004:6;5051:2;5046;5039:5;5035:14;5031:23;5021:33;;4967:93;;;:::o;5066:107::-;5110:8;5160:5;5154:4;5150:16;5129:37;;5066:107;;;;:::o;5179:393::-;5248:6;5298:1;5286:10;5282:18;5321:97;5351:66;5340:9;5321:97;:::i;:::-;5439:39;5469:8;5458:9;5439:39;:::i;:::-;5427:51;;5511:4;5507:9;5500:5;5496:21;5487:30;;5560:4;5550:8;5546:19;5539:5;5536:30;5526:40;;5255:317;;5179:393;;;;;:::o;5578:77::-;5615:7;5644:5;5633:16;;5578:77;;;:::o;5661:60::-;5689:3;5710:5;5703:12;;5661:60;;;:::o;5727:142::-;5777:9;5810:53;5828:34;5837:24;5855:5;5837:24;:::i;:::-;5828:34;:::i;:::-;5810:53;:::i;:::-;5797:66;;5727:142;;;:::o;5875:75::-;5918:3;5939:5;5932:12;;5875:75;;;:::o;5956:269::-;6066:39;6097:7;6066:39;:::i;:::-;6127:91;6176:41;6200:16;6176:41;:::i;:::-;6168:6;6161:4;6155:11;6127:91;:::i;:::-;6121:4;6114:105;6032:193;5956:269;;;:::o;6231:73::-;6276:3;6231:73;:::o;6310:189::-;6387:32;;:::i;:::-;6428:65;6486:6;6478;6472:4;6428:65;:::i;:::-;6363:136;6310:189;;:::o;6505:186::-;6565:120;6582:3;6575:5;6572:14;6565:120;;;6636:39;6673:1;6666:5;6636:39;:::i;:::-;6609:1;6602:5;6598:13;6589:22;;6565:120;;;6505:186;;:::o;6697:543::-;6798:2;6793:3;6790:11;6787:446;;;6832:38;6864:5;6832:38;:::i;:::-;6916:29;6934:10;6916:29;:::i;:::-;6906:8;6902:44;7099:2;7087:10;7084:18;7081:49;;;7120:8;7105:23;;7081:49;7143:80;7199:22;7217:3;7199:22;:::i;:::-;7189:8;7185:37;7172:11;7143:80;:::i;:::-;6802:431;;6787:446;6697:543;;;:::o;7246:117::-;7300:8;7350:5;7344:4;7340:16;7319:37;;7246:117;;;;:::o;7369:169::-;7413:6;7446:51;7494:1;7490:6;7482:5;7479:1;7475:13;7446:51;:::i;:::-;7442:56;7527:4;7521;7517:15;7507:25;;7420:118;7369:169;;;;:::o;7543:295::-;7619:4;7765:29;7790:3;7784:4;7765:29;:::i;:::-;7757:37;;7827:3;7824:1;7820:11;7814:4;7811:21;7803:29;;7543:295;;;;:::o;7843:1395::-;7960:37;7993:3;7960:37;:::i;:::-;8062:18;8054:6;8051:30;8048:56;;;8084:18;;:::i;:::-;8048:56;8128:38;8160:4;8154:11;8128:38;:::i;:::-;8213:67;8273:6;8265;8259:4;8213:67;:::i;:::-;8307:1;8331:4;8318:17;;8363:2;8355:6;8352:14;8380:1;8375:618;;;;9037:1;9054:6;9051:77;;;9103:9;9098:3;9094:19;9088:26;9079:35;;9051:77;9154:67;9214:6;9207:5;9154:67;:::i;:::-;9148:4;9141:81;9010:222;8345:887;;8375:618;8427:4;8423:9;8415:6;8411:22;8461:37;8493:4;8461:37;:::i;:::-;8520:1;8534:208;8548:7;8545:1;8542:14;8534:208;;;8627:9;8622:3;8618:19;8612:26;8604:6;8597:42;8678:1;8670:6;8666:14;8656:24;;8725:2;8714:9;8710:18;8697:31;;8571:4;8568:1;8564:12;8559:17;;8534:208;;;8770:6;8761:7;8758:19;8755:179;;;8828:9;8823:3;8819:19;8813:26;8871:48;8913:4;8905:6;8901:17;8890:9;8871:48;:::i;:::-;8863:6;8856:64;8778:156;8755:179;8980:1;8976;8968:6;8964:14;8960:22;8954:4;8947:36;8382:611;;;8345:887;;7935:1303;;;7843:1395;;:::o;628:16557:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_920": {
									"entryPoint": 3695,
									"id": 920,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_786": {
									"entryPoint": 3355,
									"id": 786,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_baseURI_233": {
									"entryPoint": 4218,
									"id": 233,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_907": {
									"entryPoint": 3689,
									"id": 907,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_894": {
									"entryPoint": 4512,
									"id": 894,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_465": {
									"entryPoint": 4447,
									"id": 465,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isApprovedOrOwner_499": {
									"entryPoint": 3540,
									"id": 499,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_1439": {
									"entryPoint": 3347,
									"id": 1439,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_447": {
									"entryPoint": 3701,
									"id": 447,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_owner_25": {
									"entryPoint": 2780,
									"id": 25,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireMinted_832": {
									"entryPoint": 3272,
									"id": 832,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_safeTransfer_434": {
									"entryPoint": 4126,
									"id": 434,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_setApprovalForAll_818": {
									"entryPoint": 3762,
									"id": 818,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_762": {
									"entryPoint": 1613,
									"id": 762,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@approve_276": {
									"entryPoint": 1238,
									"id": 276,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_137": {
									"entryPoint": 2429,
									"id": 137,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_294": {
									"entryPoint": 1168,
									"id": 294,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_329": {
									"entryPoint": 3018,
									"id": 329,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_1115": {
									"entryPoint": 5242,
									"id": 1115,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@log10_2417": {
									"entryPoint": 4903,
									"id": 2417,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_175": {
									"entryPoint": 1022,
									"id": 175,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_165": {
									"entryPoint": 2295,
									"id": 165,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_375": {
									"entryPoint": 2263,
									"id": 375,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_405": {
									"entryPoint": 2816,
									"id": 405,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_311": {
									"entryPoint": 2758,
									"id": 311,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_113": {
									"entryPoint": 796,
									"id": 113,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_1701": {
									"entryPoint": 3166,
									"id": 1701,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_185": {
									"entryPoint": 2612,
									"id": 185,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1508": {
									"entryPoint": 4241,
									"id": 1508,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_224": {
									"entryPoint": 2914,
									"id": 224,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_356": {
									"entryPoint": 1517,
									"id": 356,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 6436,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 5876,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 6154,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 5364,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 8235,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 6502,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5695,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6044,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6679,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5961,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 6548,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 6175,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5897,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5385,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 8256,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5716,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5811,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5442,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8102,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5571,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7688,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7210,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7960,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7356,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7814,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7610,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7464,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6918,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7064,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6089,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7737,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5826,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 8159,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5457,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5628,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7245,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7995,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7391,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7849,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7645,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7499,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6953,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7099,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6104,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 6345,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 5277,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 6372,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 8074,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5484,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8085,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5495,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7677,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5793,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5430,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 5297,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5761,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5662,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 6421,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5512,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6790,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 6296,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 8027,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 6743,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6249,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 6239,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 6244,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 5292,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5287,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5554,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af": {
									"entryPoint": 7131,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e": {
									"entryPoint": 7881,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48": {
									"entryPoint": 7277,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05": {
									"entryPoint": 7773,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159": {
									"entryPoint": 7531,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f": {
									"entryPoint": 7423,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942": {
									"entryPoint": 6839,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83": {
									"entryPoint": 6985,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5853,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6131,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 5341,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5672,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:22124:11",
										"nodeType": "YulBlock",
										"src": "0:22124:11",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:11",
													"nodeType": "YulBlock",
													"src": "47:35:11",
													"statements": [
														{
															"nativeSrc": "57:19:11",
															"nodeType": "YulAssignment",
															"src": "57:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:11",
																		"nodeType": "YulLiteral",
																		"src": "73:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:11"
																},
																"nativeSrc": "67:9:11",
																"nodeType": "YulFunctionCall",
																"src": "67:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:11",
														"nodeType": "YulTypedName",
														"src": "40:6:11",
														"type": ""
													}
												],
												"src": "7:75:11"
											},
											{
												"body": {
													"nativeSrc": "177:28:11",
													"nodeType": "YulBlock",
													"src": "177:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:11",
																		"nodeType": "YulLiteral",
																		"src": "194:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:11",
																		"nodeType": "YulLiteral",
																		"src": "197:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:11"
																},
																"nativeSrc": "187:12:11",
																"nodeType": "YulFunctionCall",
																"src": "187:12:11"
															},
															"nativeSrc": "187:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:11"
											},
											{
												"body": {
													"nativeSrc": "300:28:11",
													"nodeType": "YulBlock",
													"src": "300:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:11",
																		"nodeType": "YulLiteral",
																		"src": "317:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:11",
																		"nodeType": "YulLiteral",
																		"src": "320:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:11"
																},
																"nativeSrc": "310:12:11",
																"nodeType": "YulFunctionCall",
																"src": "310:12:11"
															},
															"nativeSrc": "310:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:11"
											},
											{
												"body": {
													"nativeSrc": "378:105:11",
													"nodeType": "YulBlock",
													"src": "378:105:11",
													"statements": [
														{
															"nativeSrc": "388:89:11",
															"nodeType": "YulAssignment",
															"src": "388:89:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:11",
																		"nodeType": "YulLiteral",
																		"src": "410:66:11",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:11"
																},
																"nativeSrc": "399:78:11",
																"nodeType": "YulFunctionCall",
																"src": "399:78:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:11",
														"nodeType": "YulTypedName",
														"src": "360:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:11",
														"nodeType": "YulTypedName",
														"src": "370:7:11",
														"type": ""
													}
												],
												"src": "334:149:11"
											},
											{
												"body": {
													"nativeSrc": "531:78:11",
													"nodeType": "YulBlock",
													"src": "531:78:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:11",
																"nodeType": "YulBlock",
																"src": "587:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:11",
																					"nodeType": "YulLiteral",
																					"src": "596:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:11",
																					"nodeType": "YulLiteral",
																					"src": "599:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:11"
																			},
																			"nativeSrc": "589:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:11"
																		},
																		"nativeSrc": "589:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:11",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:11"
																				},
																				"nativeSrc": "561:23:11",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:11"
																		},
																		"nativeSrc": "551:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:11"
																},
																"nativeSrc": "544:42:11",
																"nodeType": "YulFunctionCall",
																"src": "544:42:11"
															},
															"nativeSrc": "541:62:11",
															"nodeType": "YulIf",
															"src": "541:62:11"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:11",
														"nodeType": "YulTypedName",
														"src": "524:5:11",
														"type": ""
													}
												],
												"src": "489:120:11"
											},
											{
												"body": {
													"nativeSrc": "666:86:11",
													"nodeType": "YulBlock",
													"src": "666:86:11",
													"statements": [
														{
															"nativeSrc": "676:29:11",
															"nodeType": "YulAssignment",
															"src": "676:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:11"
																},
																"nativeSrc": "685:20:11",
																"nodeType": "YulFunctionCall",
																"src": "685:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:11",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:11"
																},
																"nativeSrc": "714:32:11",
																"nodeType": "YulFunctionCall",
																"src": "714:32:11"
															},
															"nativeSrc": "714:32:11",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:11"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:11",
														"nodeType": "YulTypedName",
														"src": "644:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:11",
														"nodeType": "YulTypedName",
														"src": "652:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:11",
														"nodeType": "YulTypedName",
														"src": "660:5:11",
														"type": ""
													}
												],
												"src": "615:137:11"
											},
											{
												"body": {
													"nativeSrc": "823:262:11",
													"nodeType": "YulBlock",
													"src": "823:262:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:11",
																"nodeType": "YulBlock",
																"src": "869:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:11"
																			},
																			"nativeSrc": "871:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:11"
																		},
																		"nativeSrc": "871:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:11"
																		},
																		"nativeSrc": "840:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:11",
																		"nodeType": "YulLiteral",
																		"src": "865:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:11"
																},
																"nativeSrc": "836:32:11",
																"nodeType": "YulFunctionCall",
																"src": "836:32:11"
															},
															"nativeSrc": "833:119:11",
															"nodeType": "YulIf",
															"src": "833:119:11"
														},
														{
															"nativeSrc": "962:116:11",
															"nodeType": "YulBlock",
															"src": "962:116:11",
															"statements": [
																{
																	"nativeSrc": "977:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:11",
																		"nodeType": "YulLiteral",
																		"src": "991:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:11",
																			"nodeType": "YulTypedName",
																			"src": "981:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:11",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:11"
																				},
																				"nativeSrc": "1036:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:11",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:11"
																		},
																		"nativeSrc": "1016:52:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:11",
														"nodeType": "YulTypedName",
														"src": "793:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:11",
														"nodeType": "YulTypedName",
														"src": "804:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:11",
														"nodeType": "YulTypedName",
														"src": "816:6:11",
														"type": ""
													}
												],
												"src": "758:327:11"
											},
											{
												"body": {
													"nativeSrc": "1133:48:11",
													"nodeType": "YulBlock",
													"src": "1133:48:11",
													"statements": [
														{
															"nativeSrc": "1143:32:11",
															"nodeType": "YulAssignment",
															"src": "1143:32:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:11"
																		},
																		"nativeSrc": "1161:13:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:11"
																},
																"nativeSrc": "1154:21:11",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:11",
														"nodeType": "YulTypedName",
														"src": "1115:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:11",
														"nodeType": "YulTypedName",
														"src": "1125:7:11",
														"type": ""
													}
												],
												"src": "1091:90:11"
											},
											{
												"body": {
													"nativeSrc": "1246:50:11",
													"nodeType": "YulBlock",
													"src": "1246:50:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:11",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:11"
																		},
																		"nativeSrc": "1268:21:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:11"
																},
																"nativeSrc": "1256:34:11",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:11"
															},
															"nativeSrc": "1256:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:11"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:11",
														"nodeType": "YulTypedName",
														"src": "1234:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:11",
														"nodeType": "YulTypedName",
														"src": "1241:3:11",
														"type": ""
													}
												],
												"src": "1187:109:11"
											},
											{
												"body": {
													"nativeSrc": "1394:118:11",
													"nodeType": "YulBlock",
													"src": "1394:118:11",
													"statements": [
														{
															"nativeSrc": "1404:26:11",
															"nodeType": "YulAssignment",
															"src": "1404:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:11"
																},
																"nativeSrc": "1412:18:11",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:11",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:11"
																		},
																		"nativeSrc": "1487:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:11",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:11"
																},
																"nativeSrc": "1440:65:11",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:11"
															},
															"nativeSrc": "1440:65:11",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:11",
														"nodeType": "YulTypedName",
														"src": "1366:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:11",
														"nodeType": "YulTypedName",
														"src": "1378:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:11",
														"nodeType": "YulTypedName",
														"src": "1389:4:11",
														"type": ""
													}
												],
												"src": "1302:210:11"
											},
											{
												"body": {
													"nativeSrc": "1577:40:11",
													"nodeType": "YulBlock",
													"src": "1577:40:11",
													"statements": [
														{
															"nativeSrc": "1588:22:11",
															"nodeType": "YulAssignment",
															"src": "1588:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1604:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:11"
																},
																"nativeSrc": "1598:12:11",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:11"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1518:99:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1560:5:11",
														"nodeType": "YulTypedName",
														"src": "1560:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1570:6:11",
														"nodeType": "YulTypedName",
														"src": "1570:6:11",
														"type": ""
													}
												],
												"src": "1518:99:11"
											},
											{
												"body": {
													"nativeSrc": "1719:73:11",
													"nodeType": "YulBlock",
													"src": "1719:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:11"
																},
																"nativeSrc": "1729:19:11",
																"nodeType": "YulFunctionCall",
																"src": "1729:19:11"
															},
															"nativeSrc": "1729:19:11",
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:11"
														},
														{
															"nativeSrc": "1757:29:11",
															"nodeType": "YulAssignment",
															"src": "1757:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:4:11",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:11"
																},
																"nativeSrc": "1772:14:11",
																"nodeType": "YulFunctionCall",
																"src": "1772:14:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1757:11:11",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1623:169:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:11",
														"nodeType": "YulTypedName",
														"src": "1691:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1696:6:11",
														"nodeType": "YulTypedName",
														"src": "1696:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1707:11:11",
														"nodeType": "YulTypedName",
														"src": "1707:11:11",
														"type": ""
													}
												],
												"src": "1623:169:11"
											},
											{
												"body": {
													"nativeSrc": "1860:184:11",
													"nodeType": "YulBlock",
													"src": "1860:184:11",
													"statements": [
														{
															"nativeSrc": "1870:10:11",
															"nodeType": "YulVariableDeclaration",
															"src": "1870:10:11",
															"value": {
																"kind": "number",
																"nativeSrc": "1879:1:11",
																"nodeType": "YulLiteral",
																"src": "1879:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "1874:1:11",
																	"nodeType": "YulTypedName",
																	"src": "1874:1:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1939:63:11",
																"nodeType": "YulBlock",
																"src": "1939:63:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "1964:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "1964:3:11"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "1969:1:11",
																							"nodeType": "YulIdentifier",
																							"src": "1969:1:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "1960:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "1960:3:11"
																					},
																					"nativeSrc": "1960:11:11",
																					"nodeType": "YulFunctionCall",
																					"src": "1960:11:11"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "1983:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "1983:3:11"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "1988:1:11",
																									"nodeType": "YulIdentifier",
																									"src": "1988:1:11"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1979:3:11",
																								"nodeType": "YulIdentifier",
																								"src": "1979:3:11"
																							},
																							"nativeSrc": "1979:11:11",
																							"nodeType": "YulFunctionCall",
																							"src": "1979:11:11"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "1973:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "1973:5:11"
																					},
																					"nativeSrc": "1973:18:11",
																					"nodeType": "YulFunctionCall",
																					"src": "1973:18:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1953:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1953:6:11"
																			},
																			"nativeSrc": "1953:39:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1953:39:11"
																		},
																		"nativeSrc": "1953:39:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1953:39:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "1900:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "1900:1:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1903:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1903:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1897:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "1897:2:11"
																},
																"nativeSrc": "1897:13:11",
																"nodeType": "YulFunctionCall",
																"src": "1897:13:11"
															},
															"nativeSrc": "1889:113:11",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1911:19:11",
																"nodeType": "YulBlock",
																"src": "1911:19:11",
																"statements": [
																	{
																		"nativeSrc": "1913:15:11",
																		"nodeType": "YulAssignment",
																		"src": "1913:15:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "1922:1:11",
																					"nodeType": "YulIdentifier",
																					"src": "1922:1:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1925:2:11",
																					"nodeType": "YulLiteral",
																					"src": "1925:2:11",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1918:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "1918:3:11"
																			},
																			"nativeSrc": "1918:10:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1918:10:11"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "1913:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "1913:1:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "1893:3:11",
																"nodeType": "YulBlock",
																"src": "1893:3:11",
																"statements": []
															},
															"src": "1889:113:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2022:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "2022:3:11"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2027:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2027:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2018:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:11"
																		},
																		"nativeSrc": "2018:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2018:16:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2036:1:11",
																		"nodeType": "YulLiteral",
																		"src": "2036:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2011:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2011:6:11"
																},
																"nativeSrc": "2011:27:11",
																"nodeType": "YulFunctionCall",
																"src": "2011:27:11"
															},
															"nativeSrc": "2011:27:11",
															"nodeType": "YulExpressionStatement",
															"src": "2011:27:11"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1798:246:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1842:3:11",
														"nodeType": "YulTypedName",
														"src": "1842:3:11",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1847:3:11",
														"nodeType": "YulTypedName",
														"src": "1847:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1852:6:11",
														"nodeType": "YulTypedName",
														"src": "1852:6:11",
														"type": ""
													}
												],
												"src": "1798:246:11"
											},
											{
												"body": {
													"nativeSrc": "2098:54:11",
													"nodeType": "YulBlock",
													"src": "2098:54:11",
													"statements": [
														{
															"nativeSrc": "2108:38:11",
															"nodeType": "YulAssignment",
															"src": "2108:38:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2126:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2126:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2133:2:11",
																				"nodeType": "YulLiteral",
																				"src": "2133:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2122:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2122:3:11"
																		},
																		"nativeSrc": "2122:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2122:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2142:2:11",
																				"nodeType": "YulLiteral",
																				"src": "2142:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2138:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2138:3:11"
																		},
																		"nativeSrc": "2138:7:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2138:7:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2118:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2118:3:11"
																},
																"nativeSrc": "2118:28:11",
																"nodeType": "YulFunctionCall",
																"src": "2118:28:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2108:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2108:6:11"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "2050:102:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2081:5:11",
														"nodeType": "YulTypedName",
														"src": "2081:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2091:6:11",
														"nodeType": "YulTypedName",
														"src": "2091:6:11",
														"type": ""
													}
												],
												"src": "2050:102:11"
											},
											{
												"body": {
													"nativeSrc": "2250:285:11",
													"nodeType": "YulBlock",
													"src": "2250:285:11",
													"statements": [
														{
															"nativeSrc": "2260:53:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2260:53:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2307:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2307:5:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2274:32:11",
																	"nodeType": "YulIdentifier",
																	"src": "2274:32:11"
																},
																"nativeSrc": "2274:39:11",
																"nodeType": "YulFunctionCall",
																"src": "2274:39:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2264:6:11",
																	"nodeType": "YulTypedName",
																	"src": "2264:6:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2322:78:11",
															"nodeType": "YulAssignment",
															"src": "2322:78:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2388:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2388:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2393:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2329:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "2329:58:11"
																},
																"nativeSrc": "2329:71:11",
																"nodeType": "YulFunctionCall",
																"src": "2329:71:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2322:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2322:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2448:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2448:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2455:4:11",
																				"nodeType": "YulLiteral",
																				"src": "2455:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2444:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2444:3:11"
																		},
																		"nativeSrc": "2444:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2444:16:11"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2462:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2462:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2467:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2467:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2409:34:11",
																	"nodeType": "YulIdentifier",
																	"src": "2409:34:11"
																},
																"nativeSrc": "2409:65:11",
																"nodeType": "YulFunctionCall",
																"src": "2409:65:11"
															},
															"nativeSrc": "2409:65:11",
															"nodeType": "YulExpressionStatement",
															"src": "2409:65:11"
														},
														{
															"nativeSrc": "2483:46:11",
															"nodeType": "YulAssignment",
															"src": "2483:46:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2494:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2494:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2521:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2521:6:11"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2499:21:11",
																			"nodeType": "YulIdentifier",
																			"src": "2499:21:11"
																		},
																		"nativeSrc": "2499:29:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2499:29:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2490:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2490:3:11"
																},
																"nativeSrc": "2490:39:11",
																"nodeType": "YulFunctionCall",
																"src": "2490:39:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2483:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2483:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2158:377:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2231:5:11",
														"nodeType": "YulTypedName",
														"src": "2231:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2238:3:11",
														"nodeType": "YulTypedName",
														"src": "2238:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2246:3:11",
														"nodeType": "YulTypedName",
														"src": "2246:3:11",
														"type": ""
													}
												],
												"src": "2158:377:11"
											},
											{
												"body": {
													"nativeSrc": "2659:195:11",
													"nodeType": "YulBlock",
													"src": "2659:195:11",
													"statements": [
														{
															"nativeSrc": "2669:26:11",
															"nodeType": "YulAssignment",
															"src": "2669:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2681:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2692:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2692:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2677:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2677:3:11"
																},
																"nativeSrc": "2677:18:11",
																"nodeType": "YulFunctionCall",
																"src": "2677:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2669:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "2669:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2716:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2716:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2727:1:11",
																				"nodeType": "YulLiteral",
																				"src": "2727:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2712:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2712:3:11"
																		},
																		"nativeSrc": "2712:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2712:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2735:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "2735:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2741:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2741:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2731:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:11"
																		},
																		"nativeSrc": "2731:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2731:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2705:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2705:6:11"
																},
																"nativeSrc": "2705:47:11",
																"nodeType": "YulFunctionCall",
																"src": "2705:47:11"
															},
															"nativeSrc": "2705:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "2705:47:11"
														},
														{
															"nativeSrc": "2761:86:11",
															"nodeType": "YulAssignment",
															"src": "2761:86:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2833:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2833:6:11"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2842:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "2842:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2769:63:11",
																	"nodeType": "YulIdentifier",
																	"src": "2769:63:11"
																},
																"nativeSrc": "2769:78:11",
																"nodeType": "YulFunctionCall",
																"src": "2769:78:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2761:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "2761:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2541:313:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2631:9:11",
														"nodeType": "YulTypedName",
														"src": "2631:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2643:6:11",
														"nodeType": "YulTypedName",
														"src": "2643:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2654:4:11",
														"nodeType": "YulTypedName",
														"src": "2654:4:11",
														"type": ""
													}
												],
												"src": "2541:313:11"
											},
											{
												"body": {
													"nativeSrc": "2905:32:11",
													"nodeType": "YulBlock",
													"src": "2905:32:11",
													"statements": [
														{
															"nativeSrc": "2915:16:11",
															"nodeType": "YulAssignment",
															"src": "2915:16:11",
															"value": {
																"name": "value",
																"nativeSrc": "2926:5:11",
																"nodeType": "YulIdentifier",
																"src": "2926:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2915:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "2915:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2860:77:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2887:5:11",
														"nodeType": "YulTypedName",
														"src": "2887:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2897:7:11",
														"nodeType": "YulTypedName",
														"src": "2897:7:11",
														"type": ""
													}
												],
												"src": "2860:77:11"
											},
											{
												"body": {
													"nativeSrc": "2986:79:11",
													"nodeType": "YulBlock",
													"src": "2986:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "3043:16:11",
																"nodeType": "YulBlock",
																"src": "3043:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3052:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3052:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3055:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3055:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3045:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3045:6:11"
																			},
																			"nativeSrc": "3045:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3045:12:11"
																		},
																		"nativeSrc": "3045:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3045:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3009:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "3009:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3034:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "3034:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3016:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "3016:17:11"
																				},
																				"nativeSrc": "3016:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3016:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3006:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "3006:2:11"
																		},
																		"nativeSrc": "3006:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3006:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2999:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2999:6:11"
																},
																"nativeSrc": "2999:43:11",
																"nodeType": "YulFunctionCall",
																"src": "2999:43:11"
															},
															"nativeSrc": "2996:63:11",
															"nodeType": "YulIf",
															"src": "2996:63:11"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2943:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2979:5:11",
														"nodeType": "YulTypedName",
														"src": "2979:5:11",
														"type": ""
													}
												],
												"src": "2943:122:11"
											},
											{
												"body": {
													"nativeSrc": "3123:87:11",
													"nodeType": "YulBlock",
													"src": "3123:87:11",
													"statements": [
														{
															"nativeSrc": "3133:29:11",
															"nodeType": "YulAssignment",
															"src": "3133:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3155:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3155:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3142:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "3142:12:11"
																},
																"nativeSrc": "3142:20:11",
																"nodeType": "YulFunctionCall",
																"src": "3142:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3133:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "3133:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3198:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "3198:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3171:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "3171:26:11"
																},
																"nativeSrc": "3171:33:11",
																"nodeType": "YulFunctionCall",
																"src": "3171:33:11"
															},
															"nativeSrc": "3171:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "3171:33:11"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3071:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3101:6:11",
														"nodeType": "YulTypedName",
														"src": "3101:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3109:3:11",
														"nodeType": "YulTypedName",
														"src": "3109:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3117:5:11",
														"nodeType": "YulTypedName",
														"src": "3117:5:11",
														"type": ""
													}
												],
												"src": "3071:139:11"
											},
											{
												"body": {
													"nativeSrc": "3282:263:11",
													"nodeType": "YulBlock",
													"src": "3282:263:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "3328:83:11",
																"nodeType": "YulBlock",
																"src": "3328:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3330:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "3330:77:11"
																			},
																			"nativeSrc": "3330:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3330:79:11"
																		},
																		"nativeSrc": "3330:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3330:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3303:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3303:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3299:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3299:3:11"
																		},
																		"nativeSrc": "3299:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3299:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3324:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3324:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3295:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3295:3:11"
																},
																"nativeSrc": "3295:32:11",
																"nodeType": "YulFunctionCall",
																"src": "3295:32:11"
															},
															"nativeSrc": "3292:119:11",
															"nodeType": "YulIf",
															"src": "3292:119:11"
														},
														{
															"nativeSrc": "3421:117:11",
															"nodeType": "YulBlock",
															"src": "3421:117:11",
															"statements": [
																{
																	"nativeSrc": "3436:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3436:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3450:1:11",
																		"nodeType": "YulLiteral",
																		"src": "3450:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3440:6:11",
																			"nodeType": "YulTypedName",
																			"src": "3440:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3465:63:11",
																	"nodeType": "YulAssignment",
																	"src": "3465:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3500:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "3500:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3511:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "3511:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3496:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3496:3:11"
																				},
																				"nativeSrc": "3496:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3496:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3520:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3520:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3475:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "3475:20:11"
																		},
																		"nativeSrc": "3475:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3475:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3465:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "3465:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3216:329:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3252:9:11",
														"nodeType": "YulTypedName",
														"src": "3252:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3263:7:11",
														"nodeType": "YulTypedName",
														"src": "3263:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3275:6:11",
														"nodeType": "YulTypedName",
														"src": "3275:6:11",
														"type": ""
													}
												],
												"src": "3216:329:11"
											},
											{
												"body": {
													"nativeSrc": "3596:81:11",
													"nodeType": "YulBlock",
													"src": "3596:81:11",
													"statements": [
														{
															"nativeSrc": "3606:65:11",
															"nodeType": "YulAssignment",
															"src": "3606:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3621:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "3621:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3628:42:11",
																		"nodeType": "YulLiteral",
																		"src": "3628:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3617:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3617:3:11"
																},
																"nativeSrc": "3617:54:11",
																"nodeType": "YulFunctionCall",
																"src": "3617:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3606:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "3606:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3551:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3578:5:11",
														"nodeType": "YulTypedName",
														"src": "3578:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3588:7:11",
														"nodeType": "YulTypedName",
														"src": "3588:7:11",
														"type": ""
													}
												],
												"src": "3551:126:11"
											},
											{
												"body": {
													"nativeSrc": "3728:51:11",
													"nodeType": "YulBlock",
													"src": "3728:51:11",
													"statements": [
														{
															"nativeSrc": "3738:35:11",
															"nodeType": "YulAssignment",
															"src": "3738:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3767:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "3767:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3749:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "3749:17:11"
																},
																"nativeSrc": "3749:24:11",
																"nodeType": "YulFunctionCall",
																"src": "3749:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3738:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "3738:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3683:96:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3710:5:11",
														"nodeType": "YulTypedName",
														"src": "3710:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3720:7:11",
														"nodeType": "YulTypedName",
														"src": "3720:7:11",
														"type": ""
													}
												],
												"src": "3683:96:11"
											},
											{
												"body": {
													"nativeSrc": "3850:53:11",
													"nodeType": "YulBlock",
													"src": "3850:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3867:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "3867:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3890:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "3890:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3872:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "3872:17:11"
																		},
																		"nativeSrc": "3872:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3872:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3860:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3860:6:11"
																},
																"nativeSrc": "3860:37:11",
																"nodeType": "YulFunctionCall",
																"src": "3860:37:11"
															},
															"nativeSrc": "3860:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "3860:37:11"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3785:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3838:5:11",
														"nodeType": "YulTypedName",
														"src": "3838:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3845:3:11",
														"nodeType": "YulTypedName",
														"src": "3845:3:11",
														"type": ""
													}
												],
												"src": "3785:118:11"
											},
											{
												"body": {
													"nativeSrc": "4007:124:11",
													"nodeType": "YulBlock",
													"src": "4007:124:11",
													"statements": [
														{
															"nativeSrc": "4017:26:11",
															"nodeType": "YulAssignment",
															"src": "4017:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4029:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4029:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4040:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4040:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4025:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4025:3:11"
																},
																"nativeSrc": "4025:18:11",
																"nodeType": "YulFunctionCall",
																"src": "4025:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4017:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "4017:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4097:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4097:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4110:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4110:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4121:1:11",
																				"nodeType": "YulLiteral",
																				"src": "4121:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4106:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4106:3:11"
																		},
																		"nativeSrc": "4106:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4106:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4053:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "4053:43:11"
																},
																"nativeSrc": "4053:71:11",
																"nodeType": "YulFunctionCall",
																"src": "4053:71:11"
															},
															"nativeSrc": "4053:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "4053:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3909:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3979:9:11",
														"nodeType": "YulTypedName",
														"src": "3979:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3991:6:11",
														"nodeType": "YulTypedName",
														"src": "3991:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4002:4:11",
														"nodeType": "YulTypedName",
														"src": "4002:4:11",
														"type": ""
													}
												],
												"src": "3909:222:11"
											},
											{
												"body": {
													"nativeSrc": "4180:79:11",
													"nodeType": "YulBlock",
													"src": "4180:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "4237:16:11",
																"nodeType": "YulBlock",
																"src": "4237:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4246:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4246:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4249:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4249:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4239:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4239:6:11"
																			},
																			"nativeSrc": "4239:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4239:12:11"
																		},
																		"nativeSrc": "4239:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4239:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4203:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "4203:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4228:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "4228:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "4210:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "4210:17:11"
																				},
																				"nativeSrc": "4210:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4210:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4200:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "4200:2:11"
																		},
																		"nativeSrc": "4200:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4200:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4193:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4193:6:11"
																},
																"nativeSrc": "4193:43:11",
																"nodeType": "YulFunctionCall",
																"src": "4193:43:11"
															},
															"nativeSrc": "4190:63:11",
															"nodeType": "YulIf",
															"src": "4190:63:11"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "4137:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4173:5:11",
														"nodeType": "YulTypedName",
														"src": "4173:5:11",
														"type": ""
													}
												],
												"src": "4137:122:11"
											},
											{
												"body": {
													"nativeSrc": "4317:87:11",
													"nodeType": "YulBlock",
													"src": "4317:87:11",
													"statements": [
														{
															"nativeSrc": "4327:29:11",
															"nodeType": "YulAssignment",
															"src": "4327:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4349:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4349:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4336:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "4336:12:11"
																},
																"nativeSrc": "4336:20:11",
																"nodeType": "YulFunctionCall",
																"src": "4336:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4327:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "4327:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4392:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "4392:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "4365:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "4365:26:11"
																},
																"nativeSrc": "4365:33:11",
																"nodeType": "YulFunctionCall",
																"src": "4365:33:11"
															},
															"nativeSrc": "4365:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "4365:33:11"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "4265:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4295:6:11",
														"nodeType": "YulTypedName",
														"src": "4295:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4303:3:11",
														"nodeType": "YulTypedName",
														"src": "4303:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4311:5:11",
														"nodeType": "YulTypedName",
														"src": "4311:5:11",
														"type": ""
													}
												],
												"src": "4265:139:11"
											},
											{
												"body": {
													"nativeSrc": "4493:391:11",
													"nodeType": "YulBlock",
													"src": "4493:391:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "4539:83:11",
																"nodeType": "YulBlock",
																"src": "4539:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4541:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "4541:77:11"
																			},
																			"nativeSrc": "4541:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4541:79:11"
																		},
																		"nativeSrc": "4541:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4541:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4514:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4514:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4523:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4523:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4510:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4510:3:11"
																		},
																		"nativeSrc": "4510:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4510:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4535:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4535:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4506:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4506:3:11"
																},
																"nativeSrc": "4506:32:11",
																"nodeType": "YulFunctionCall",
																"src": "4506:32:11"
															},
															"nativeSrc": "4503:119:11",
															"nodeType": "YulIf",
															"src": "4503:119:11"
														},
														{
															"nativeSrc": "4632:117:11",
															"nodeType": "YulBlock",
															"src": "4632:117:11",
															"statements": [
																{
																	"nativeSrc": "4647:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4647:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4661:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4661:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4651:6:11",
																			"nodeType": "YulTypedName",
																			"src": "4651:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4676:63:11",
																	"nodeType": "YulAssignment",
																	"src": "4676:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4711:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "4711:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4722:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4722:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4707:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4707:3:11"
																				},
																				"nativeSrc": "4707:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4707:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4731:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4731:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4686:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "4686:20:11"
																		},
																		"nativeSrc": "4686:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4686:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4676:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4676:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4759:118:11",
															"nodeType": "YulBlock",
															"src": "4759:118:11",
															"statements": [
																{
																	"nativeSrc": "4774:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4774:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4788:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4788:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4778:6:11",
																			"nodeType": "YulTypedName",
																			"src": "4778:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4804:63:11",
																	"nodeType": "YulAssignment",
																	"src": "4804:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4839:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "4839:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4850:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4850:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4835:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4835:3:11"
																				},
																				"nativeSrc": "4835:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4835:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4859:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4859:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4814:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "4814:20:11"
																		},
																		"nativeSrc": "4814:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4814:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4804:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4804:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "4410:474:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4455:9:11",
														"nodeType": "YulTypedName",
														"src": "4455:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4466:7:11",
														"nodeType": "YulTypedName",
														"src": "4466:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4478:6:11",
														"nodeType": "YulTypedName",
														"src": "4478:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4486:6:11",
														"nodeType": "YulTypedName",
														"src": "4486:6:11",
														"type": ""
													}
												],
												"src": "4410:474:11"
											},
											{
												"body": {
													"nativeSrc": "4990:519:11",
													"nodeType": "YulBlock",
													"src": "4990:519:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "5036:83:11",
																"nodeType": "YulBlock",
																"src": "5036:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5038:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "5038:77:11"
																			},
																			"nativeSrc": "5038:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5038:79:11"
																		},
																		"nativeSrc": "5038:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5038:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5011:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5011:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5020:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5020:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5007:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5007:3:11"
																		},
																		"nativeSrc": "5007:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5007:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5032:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5032:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5003:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5003:3:11"
																},
																"nativeSrc": "5003:32:11",
																"nodeType": "YulFunctionCall",
																"src": "5003:32:11"
															},
															"nativeSrc": "5000:119:11",
															"nodeType": "YulIf",
															"src": "5000:119:11"
														},
														{
															"nativeSrc": "5129:117:11",
															"nodeType": "YulBlock",
															"src": "5129:117:11",
															"statements": [
																{
																	"nativeSrc": "5144:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5144:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5158:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5158:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5148:6:11",
																			"nodeType": "YulTypedName",
																			"src": "5148:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5173:63:11",
																	"nodeType": "YulAssignment",
																	"src": "5173:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5208:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "5208:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5219:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "5219:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5204:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5204:3:11"
																				},
																				"nativeSrc": "5204:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5204:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5228:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5228:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5183:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "5183:20:11"
																		},
																		"nativeSrc": "5183:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5183:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5173:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "5173:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5256:118:11",
															"nodeType": "YulBlock",
															"src": "5256:118:11",
															"statements": [
																{
																	"nativeSrc": "5271:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5271:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5285:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5285:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5275:6:11",
																			"nodeType": "YulTypedName",
																			"src": "5275:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5301:63:11",
																	"nodeType": "YulAssignment",
																	"src": "5301:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5336:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "5336:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5347:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "5347:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5332:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5332:3:11"
																				},
																				"nativeSrc": "5332:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5332:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5356:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5356:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5311:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "5311:20:11"
																		},
																		"nativeSrc": "5311:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5311:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5301:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "5301:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5384:118:11",
															"nodeType": "YulBlock",
															"src": "5384:118:11",
															"statements": [
																{
																	"nativeSrc": "5399:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5399:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5413:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5413:2:11",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5403:6:11",
																			"nodeType": "YulTypedName",
																			"src": "5403:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5429:63:11",
																	"nodeType": "YulAssignment",
																	"src": "5429:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5464:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "5464:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5475:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "5475:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5460:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5460:3:11"
																				},
																				"nativeSrc": "5460:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5460:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5484:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5484:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5439:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "5439:20:11"
																		},
																		"nativeSrc": "5439:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5439:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5429:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "5429:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4890:619:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4944:9:11",
														"nodeType": "YulTypedName",
														"src": "4944:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4955:7:11",
														"nodeType": "YulTypedName",
														"src": "4955:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4967:6:11",
														"nodeType": "YulTypedName",
														"src": "4967:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4975:6:11",
														"nodeType": "YulTypedName",
														"src": "4975:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4983:6:11",
														"nodeType": "YulTypedName",
														"src": "4983:6:11",
														"type": ""
													}
												],
												"src": "4890:619:11"
											},
											{
												"body": {
													"nativeSrc": "5581:263:11",
													"nodeType": "YulBlock",
													"src": "5581:263:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "5627:83:11",
																"nodeType": "YulBlock",
																"src": "5627:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5629:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "5629:77:11"
																			},
																			"nativeSrc": "5629:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5629:79:11"
																		},
																		"nativeSrc": "5629:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5629:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5602:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5602:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5611:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5611:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5598:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5598:3:11"
																		},
																		"nativeSrc": "5598:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5598:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5623:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5623:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5594:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5594:3:11"
																},
																"nativeSrc": "5594:32:11",
																"nodeType": "YulFunctionCall",
																"src": "5594:32:11"
															},
															"nativeSrc": "5591:119:11",
															"nodeType": "YulIf",
															"src": "5591:119:11"
														},
														{
															"nativeSrc": "5720:117:11",
															"nodeType": "YulBlock",
															"src": "5720:117:11",
															"statements": [
																{
																	"nativeSrc": "5735:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5735:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5749:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5749:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5739:6:11",
																			"nodeType": "YulTypedName",
																			"src": "5739:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5764:63:11",
																	"nodeType": "YulAssignment",
																	"src": "5764:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5799:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "5799:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5810:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "5810:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5795:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5795:3:11"
																				},
																				"nativeSrc": "5795:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5795:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5819:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5819:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5774:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "5774:20:11"
																		},
																		"nativeSrc": "5774:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5774:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5764:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "5764:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5515:329:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5551:9:11",
														"nodeType": "YulTypedName",
														"src": "5551:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5562:7:11",
														"nodeType": "YulTypedName",
														"src": "5562:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5574:6:11",
														"nodeType": "YulTypedName",
														"src": "5574:6:11",
														"type": ""
													}
												],
												"src": "5515:329:11"
											},
											{
												"body": {
													"nativeSrc": "5915:53:11",
													"nodeType": "YulBlock",
													"src": "5915:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5932:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "5932:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5955:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "5955:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "5937:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "5937:17:11"
																		},
																		"nativeSrc": "5937:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5937:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5925:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5925:6:11"
																},
																"nativeSrc": "5925:37:11",
																"nodeType": "YulFunctionCall",
																"src": "5925:37:11"
															},
															"nativeSrc": "5925:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "5925:37:11"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "5850:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5903:5:11",
														"nodeType": "YulTypedName",
														"src": "5903:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5910:3:11",
														"nodeType": "YulTypedName",
														"src": "5910:3:11",
														"type": ""
													}
												],
												"src": "5850:118:11"
											},
											{
												"body": {
													"nativeSrc": "6072:124:11",
													"nodeType": "YulBlock",
													"src": "6072:124:11",
													"statements": [
														{
															"nativeSrc": "6082:26:11",
															"nodeType": "YulAssignment",
															"src": "6082:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6094:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "6094:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6105:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6105:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6090:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6090:3:11"
																},
																"nativeSrc": "6090:18:11",
																"nodeType": "YulFunctionCall",
																"src": "6090:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6082:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "6082:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6162:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6162:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6175:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6175:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6186:1:11",
																				"nodeType": "YulLiteral",
																				"src": "6186:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6171:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6171:3:11"
																		},
																		"nativeSrc": "6171:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6171:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6118:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "6118:43:11"
																},
																"nativeSrc": "6118:71:11",
																"nodeType": "YulFunctionCall",
																"src": "6118:71:11"
															},
															"nativeSrc": "6118:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "6118:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "5974:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6044:9:11",
														"nodeType": "YulTypedName",
														"src": "6044:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6056:6:11",
														"nodeType": "YulTypedName",
														"src": "6056:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6067:4:11",
														"nodeType": "YulTypedName",
														"src": "6067:4:11",
														"type": ""
													}
												],
												"src": "5974:222:11"
											},
											{
												"body": {
													"nativeSrc": "6242:76:11",
													"nodeType": "YulBlock",
													"src": "6242:76:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "6296:16:11",
																"nodeType": "YulBlock",
																"src": "6296:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6305:1:11",
																					"nodeType": "YulLiteral",
																					"src": "6305:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6308:1:11",
																					"nodeType": "YulLiteral",
																					"src": "6308:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6298:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "6298:6:11"
																			},
																			"nativeSrc": "6298:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6298:12:11"
																		},
																		"nativeSrc": "6298:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6298:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6265:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "6265:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6287:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "6287:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "6272:14:11",
																					"nodeType": "YulIdentifier",
																					"src": "6272:14:11"
																				},
																				"nativeSrc": "6272:21:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6272:21:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6262:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "6262:2:11"
																		},
																		"nativeSrc": "6262:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6262:32:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6255:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6255:6:11"
																},
																"nativeSrc": "6255:40:11",
																"nodeType": "YulFunctionCall",
																"src": "6255:40:11"
															},
															"nativeSrc": "6252:60:11",
															"nodeType": "YulIf",
															"src": "6252:60:11"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "6202:116:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6235:5:11",
														"nodeType": "YulTypedName",
														"src": "6235:5:11",
														"type": ""
													}
												],
												"src": "6202:116:11"
											},
											{
												"body": {
													"nativeSrc": "6373:84:11",
													"nodeType": "YulBlock",
													"src": "6373:84:11",
													"statements": [
														{
															"nativeSrc": "6383:29:11",
															"nodeType": "YulAssignment",
															"src": "6383:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6405:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6405:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6392:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "6392:12:11"
																},
																"nativeSrc": "6392:20:11",
																"nodeType": "YulFunctionCall",
																"src": "6392:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6383:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "6383:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6445:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "6445:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "6421:23:11",
																	"nodeType": "YulIdentifier",
																	"src": "6421:23:11"
																},
																"nativeSrc": "6421:30:11",
																"nodeType": "YulFunctionCall",
																"src": "6421:30:11"
															},
															"nativeSrc": "6421:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "6421:30:11"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "6324:133:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6351:6:11",
														"nodeType": "YulTypedName",
														"src": "6351:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6359:3:11",
														"nodeType": "YulTypedName",
														"src": "6359:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6367:5:11",
														"nodeType": "YulTypedName",
														"src": "6367:5:11",
														"type": ""
													}
												],
												"src": "6324:133:11"
											},
											{
												"body": {
													"nativeSrc": "6543:388:11",
													"nodeType": "YulBlock",
													"src": "6543:388:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "6589:83:11",
																"nodeType": "YulBlock",
																"src": "6589:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6591:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "6591:77:11"
																			},
																			"nativeSrc": "6591:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6591:79:11"
																		},
																		"nativeSrc": "6591:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6591:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6564:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "6564:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6573:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6573:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6560:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6560:3:11"
																		},
																		"nativeSrc": "6560:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6560:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6585:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6585:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6556:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6556:3:11"
																},
																"nativeSrc": "6556:32:11",
																"nodeType": "YulFunctionCall",
																"src": "6556:32:11"
															},
															"nativeSrc": "6553:119:11",
															"nodeType": "YulIf",
															"src": "6553:119:11"
														},
														{
															"nativeSrc": "6682:117:11",
															"nodeType": "YulBlock",
															"src": "6682:117:11",
															"statements": [
																{
																	"nativeSrc": "6697:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6697:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6711:1:11",
																		"nodeType": "YulLiteral",
																		"src": "6711:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6701:6:11",
																			"nodeType": "YulTypedName",
																			"src": "6701:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6726:63:11",
																	"nodeType": "YulAssignment",
																	"src": "6726:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6761:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "6761:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6772:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "6772:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6757:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "6757:3:11"
																				},
																				"nativeSrc": "6757:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6757:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6781:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "6781:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6736:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "6736:20:11"
																		},
																		"nativeSrc": "6736:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6736:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6726:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "6726:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6809:115:11",
															"nodeType": "YulBlock",
															"src": "6809:115:11",
															"statements": [
																{
																	"nativeSrc": "6824:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6824:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6838:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6838:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6828:6:11",
																			"nodeType": "YulTypedName",
																			"src": "6828:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6854:60:11",
																	"nodeType": "YulAssignment",
																	"src": "6854:60:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6886:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "6886:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6897:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "6897:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6882:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "6882:3:11"
																				},
																				"nativeSrc": "6882:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6882:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6906:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "6906:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "6864:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "6864:17:11"
																		},
																		"nativeSrc": "6864:50:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6864:50:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6854:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "6854:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "6463:468:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6505:9:11",
														"nodeType": "YulTypedName",
														"src": "6505:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6516:7:11",
														"nodeType": "YulTypedName",
														"src": "6516:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6528:6:11",
														"nodeType": "YulTypedName",
														"src": "6528:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6536:6:11",
														"nodeType": "YulTypedName",
														"src": "6536:6:11",
														"type": ""
													}
												],
												"src": "6463:468:11"
											},
											{
												"body": {
													"nativeSrc": "7026:28:11",
													"nodeType": "YulBlock",
													"src": "7026:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7043:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7043:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7046:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7046:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7036:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7036:6:11"
																},
																"nativeSrc": "7036:12:11",
																"nodeType": "YulFunctionCall",
																"src": "7036:12:11"
															},
															"nativeSrc": "7036:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "7036:12:11"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "6937:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "6937:117:11"
											},
											{
												"body": {
													"nativeSrc": "7149:28:11",
													"nodeType": "YulBlock",
													"src": "7149:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7166:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7166:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7169:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7169:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7159:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7159:6:11"
																},
																"nativeSrc": "7159:12:11",
																"nodeType": "YulFunctionCall",
																"src": "7159:12:11"
															},
															"nativeSrc": "7159:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "7159:12:11"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "7060:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "7060:117:11"
											},
											{
												"body": {
													"nativeSrc": "7211:152:11",
													"nodeType": "YulBlock",
													"src": "7211:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7228:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7228:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7231:77:11",
																		"nodeType": "YulLiteral",
																		"src": "7231:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7221:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7221:6:11"
																},
																"nativeSrc": "7221:88:11",
																"nodeType": "YulFunctionCall",
																"src": "7221:88:11"
															},
															"nativeSrc": "7221:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "7221:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7325:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7325:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7328:4:11",
																		"nodeType": "YulLiteral",
																		"src": "7328:4:11",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7318:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7318:6:11"
																},
																"nativeSrc": "7318:15:11",
																"nodeType": "YulFunctionCall",
																"src": "7318:15:11"
															},
															"nativeSrc": "7318:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "7318:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7349:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7349:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7352:4:11",
																		"nodeType": "YulLiteral",
																		"src": "7352:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7342:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7342:6:11"
																},
																"nativeSrc": "7342:15:11",
																"nodeType": "YulFunctionCall",
																"src": "7342:15:11"
															},
															"nativeSrc": "7342:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "7342:15:11"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "7183:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "7183:180:11"
											},
											{
												"body": {
													"nativeSrc": "7412:238:11",
													"nodeType": "YulBlock",
													"src": "7412:238:11",
													"statements": [
														{
															"nativeSrc": "7422:58:11",
															"nodeType": "YulVariableDeclaration",
															"src": "7422:58:11",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "7444:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7444:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "7474:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "7474:4:11"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "7452:21:11",
																			"nodeType": "YulIdentifier",
																			"src": "7452:21:11"
																		},
																		"nativeSrc": "7452:27:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7452:27:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7440:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7440:3:11"
																},
																"nativeSrc": "7440:40:11",
																"nodeType": "YulFunctionCall",
																"src": "7440:40:11"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "7426:10:11",
																	"nodeType": "YulTypedName",
																	"src": "7426:10:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7591:22:11",
																"nodeType": "YulBlock",
																"src": "7591:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7593:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "7593:16:11"
																			},
																			"nativeSrc": "7593:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "7593:18:11"
																		},
																		"nativeSrc": "7593:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "7593:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "7534:10:11",
																				"nodeType": "YulIdentifier",
																				"src": "7534:10:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7546:18:11",
																				"nodeType": "YulLiteral",
																				"src": "7546:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7531:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "7531:2:11"
																		},
																		"nativeSrc": "7531:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7531:34:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "7570:10:11",
																				"nodeType": "YulIdentifier",
																				"src": "7570:10:11"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "7582:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "7582:6:11"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7567:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "7567:2:11"
																		},
																		"nativeSrc": "7567:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7567:22:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7528:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "7528:2:11"
																},
																"nativeSrc": "7528:62:11",
																"nodeType": "YulFunctionCall",
																"src": "7528:62:11"
															},
															"nativeSrc": "7525:88:11",
															"nodeType": "YulIf",
															"src": "7525:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7629:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7629:2:11",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "7633:10:11",
																		"nodeType": "YulIdentifier",
																		"src": "7633:10:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7622:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7622:6:11"
																},
																"nativeSrc": "7622:22:11",
																"nodeType": "YulFunctionCall",
																"src": "7622:22:11"
															},
															"nativeSrc": "7622:22:11",
															"nodeType": "YulExpressionStatement",
															"src": "7622:22:11"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "7369:281:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7398:6:11",
														"nodeType": "YulTypedName",
														"src": "7398:6:11",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "7406:4:11",
														"nodeType": "YulTypedName",
														"src": "7406:4:11",
														"type": ""
													}
												],
												"src": "7369:281:11"
											},
											{
												"body": {
													"nativeSrc": "7697:88:11",
													"nodeType": "YulBlock",
													"src": "7697:88:11",
													"statements": [
														{
															"nativeSrc": "7707:30:11",
															"nodeType": "YulAssignment",
															"src": "7707:30:11",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "7717:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "7717:18:11"
																},
																"nativeSrc": "7717:20:11",
																"nodeType": "YulFunctionCall",
																"src": "7717:20:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "7707:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7707:6:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "7766:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7766:6:11"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "7774:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "7774:4:11"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "7746:19:11",
																	"nodeType": "YulIdentifier",
																	"src": "7746:19:11"
																},
																"nativeSrc": "7746:33:11",
																"nodeType": "YulFunctionCall",
																"src": "7746:33:11"
															},
															"nativeSrc": "7746:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "7746:33:11"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "7656:129:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "7681:4:11",
														"nodeType": "YulTypedName",
														"src": "7681:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "7690:6:11",
														"nodeType": "YulTypedName",
														"src": "7690:6:11",
														"type": ""
													}
												],
												"src": "7656:129:11"
											},
											{
												"body": {
													"nativeSrc": "7857:241:11",
													"nodeType": "YulBlock",
													"src": "7857:241:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "7962:22:11",
																"nodeType": "YulBlock",
																"src": "7962:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7964:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "7964:16:11"
																			},
																			"nativeSrc": "7964:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "7964:18:11"
																		},
																		"nativeSrc": "7964:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "7964:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7934:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7934:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7942:18:11",
																		"nodeType": "YulLiteral",
																		"src": "7942:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7931:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "7931:2:11"
																},
																"nativeSrc": "7931:30:11",
																"nodeType": "YulFunctionCall",
																"src": "7931:30:11"
															},
															"nativeSrc": "7928:56:11",
															"nodeType": "YulIf",
															"src": "7928:56:11"
														},
														{
															"nativeSrc": "7994:37:11",
															"nodeType": "YulAssignment",
															"src": "7994:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "8024:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8024:6:11"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "8002:21:11",
																	"nodeType": "YulIdentifier",
																	"src": "8002:21:11"
																},
																"nativeSrc": "8002:29:11",
																"nodeType": "YulFunctionCall",
																"src": "8002:29:11"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7994:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "7994:4:11"
																}
															]
														},
														{
															"nativeSrc": "8068:23:11",
															"nodeType": "YulAssignment",
															"src": "8068:23:11",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "8080:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "8080:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8086:4:11",
																		"nodeType": "YulLiteral",
																		"src": "8086:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8076:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8076:3:11"
																},
																"nativeSrc": "8076:15:11",
																"nodeType": "YulFunctionCall",
																"src": "8076:15:11"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "8068:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "8068:4:11"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "7791:307:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "7841:6:11",
														"nodeType": "YulTypedName",
														"src": "7841:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "7852:4:11",
														"nodeType": "YulTypedName",
														"src": "7852:4:11",
														"type": ""
													}
												],
												"src": "7791:307:11"
											},
											{
												"body": {
													"nativeSrc": "8168:82:11",
													"nodeType": "YulBlock",
													"src": "8168:82:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "8191:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "8191:3:11"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "8196:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "8196:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8201:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8201:6:11"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "8178:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "8178:12:11"
																},
																"nativeSrc": "8178:30:11",
																"nodeType": "YulFunctionCall",
																"src": "8178:30:11"
															},
															"nativeSrc": "8178:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "8178:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "8228:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "8228:3:11"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8233:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "8233:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8224:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8224:3:11"
																		},
																		"nativeSrc": "8224:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8224:16:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8242:1:11",
																		"nodeType": "YulLiteral",
																		"src": "8242:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8217:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8217:6:11"
																},
																"nativeSrc": "8217:27:11",
																"nodeType": "YulFunctionCall",
																"src": "8217:27:11"
															},
															"nativeSrc": "8217:27:11",
															"nodeType": "YulExpressionStatement",
															"src": "8217:27:11"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "8104:146:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8150:3:11",
														"nodeType": "YulTypedName",
														"src": "8150:3:11",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "8155:3:11",
														"nodeType": "YulTypedName",
														"src": "8155:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8160:6:11",
														"nodeType": "YulTypedName",
														"src": "8160:6:11",
														"type": ""
													}
												],
												"src": "8104:146:11"
											},
											{
												"body": {
													"nativeSrc": "8339:340:11",
													"nodeType": "YulBlock",
													"src": "8339:340:11",
													"statements": [
														{
															"nativeSrc": "8349:74:11",
															"nodeType": "YulAssignment",
															"src": "8349:74:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8415:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "8415:6:11"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "8374:40:11",
																			"nodeType": "YulIdentifier",
																			"src": "8374:40:11"
																		},
																		"nativeSrc": "8374:48:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8374:48:11"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "8358:15:11",
																	"nodeType": "YulIdentifier",
																	"src": "8358:15:11"
																},
																"nativeSrc": "8358:65:11",
																"nodeType": "YulFunctionCall",
																"src": "8358:65:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8349:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "8349:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8439:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "8439:5:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8446:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8446:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8432:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8432:6:11"
																},
																"nativeSrc": "8432:21:11",
																"nodeType": "YulFunctionCall",
																"src": "8432:21:11"
															},
															"nativeSrc": "8432:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "8432:21:11"
														},
														{
															"nativeSrc": "8462:27:11",
															"nodeType": "YulVariableDeclaration",
															"src": "8462:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8477:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "8477:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8484:4:11",
																		"nodeType": "YulLiteral",
																		"src": "8484:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8473:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8473:3:11"
																},
																"nativeSrc": "8473:16:11",
																"nodeType": "YulFunctionCall",
																"src": "8473:16:11"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "8466:3:11",
																	"nodeType": "YulTypedName",
																	"src": "8466:3:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8527:83:11",
																"nodeType": "YulBlock",
																"src": "8527:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "8529:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "8529:77:11"
																			},
																			"nativeSrc": "8529:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "8529:79:11"
																		},
																		"nativeSrc": "8529:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "8529:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "8508:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "8508:3:11"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8513:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "8513:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8504:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8504:3:11"
																		},
																		"nativeSrc": "8504:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8504:16:11"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8522:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "8522:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8501:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "8501:2:11"
																},
																"nativeSrc": "8501:25:11",
																"nodeType": "YulFunctionCall",
																"src": "8501:25:11"
															},
															"nativeSrc": "8498:112:11",
															"nodeType": "YulIf",
															"src": "8498:112:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8656:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "8656:3:11"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "8661:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "8661:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8666:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8666:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "8619:36:11",
																	"nodeType": "YulIdentifier",
																	"src": "8619:36:11"
																},
																"nativeSrc": "8619:54:11",
																"nodeType": "YulFunctionCall",
																"src": "8619:54:11"
															},
															"nativeSrc": "8619:54:11",
															"nodeType": "YulExpressionStatement",
															"src": "8619:54:11"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "8256:423:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8312:3:11",
														"nodeType": "YulTypedName",
														"src": "8312:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8317:6:11",
														"nodeType": "YulTypedName",
														"src": "8317:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8325:3:11",
														"nodeType": "YulTypedName",
														"src": "8325:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8333:5:11",
														"nodeType": "YulTypedName",
														"src": "8333:5:11",
														"type": ""
													}
												],
												"src": "8256:423:11"
											},
											{
												"body": {
													"nativeSrc": "8759:277:11",
													"nodeType": "YulBlock",
													"src": "8759:277:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "8808:83:11",
																"nodeType": "YulBlock",
																"src": "8808:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "8810:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "8810:77:11"
																			},
																			"nativeSrc": "8810:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "8810:79:11"
																		},
																		"nativeSrc": "8810:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "8810:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "8787:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "8787:6:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8795:4:11",
																						"nodeType": "YulLiteral",
																						"src": "8795:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8783:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "8783:3:11"
																				},
																				"nativeSrc": "8783:17:11",
																				"nodeType": "YulFunctionCall",
																				"src": "8783:17:11"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "8802:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "8802:3:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "8779:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8779:3:11"
																		},
																		"nativeSrc": "8779:27:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8779:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8772:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8772:6:11"
																},
																"nativeSrc": "8772:35:11",
																"nodeType": "YulFunctionCall",
																"src": "8772:35:11"
															},
															"nativeSrc": "8769:122:11",
															"nodeType": "YulIf",
															"src": "8769:122:11"
														},
														{
															"nativeSrc": "8900:34:11",
															"nodeType": "YulVariableDeclaration",
															"src": "8900:34:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8927:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8927:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8914:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "8914:12:11"
																},
																"nativeSrc": "8914:20:11",
																"nodeType": "YulFunctionCall",
																"src": "8914:20:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8904:6:11",
																	"nodeType": "YulTypedName",
																	"src": "8904:6:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8943:87:11",
															"nodeType": "YulAssignment",
															"src": "8943:87:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9003:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "9003:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9011:4:11",
																				"nodeType": "YulLiteral",
																				"src": "9011:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8999:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8999:3:11"
																		},
																		"nativeSrc": "8999:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8999:17:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9018:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "9018:6:11"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "9026:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "9026:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "8952:46:11",
																	"nodeType": "YulIdentifier",
																	"src": "8952:46:11"
																},
																"nativeSrc": "8952:78:11",
																"nodeType": "YulFunctionCall",
																"src": "8952:78:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8943:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "8943:5:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "8698:338:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8737:6:11",
														"nodeType": "YulTypedName",
														"src": "8737:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8745:3:11",
														"nodeType": "YulTypedName",
														"src": "8745:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8753:5:11",
														"nodeType": "YulTypedName",
														"src": "8753:5:11",
														"type": ""
													}
												],
												"src": "8698:338:11"
											},
											{
												"body": {
													"nativeSrc": "9168:817:11",
													"nodeType": "YulBlock",
													"src": "9168:817:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "9215:83:11",
																"nodeType": "YulBlock",
																"src": "9215:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9217:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "9217:77:11"
																			},
																			"nativeSrc": "9217:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "9217:79:11"
																		},
																		"nativeSrc": "9217:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "9217:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9189:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "9189:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9198:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9198:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9185:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9185:3:11"
																		},
																		"nativeSrc": "9185:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9185:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9210:3:11",
																		"nodeType": "YulLiteral",
																		"src": "9210:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9181:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9181:3:11"
																},
																"nativeSrc": "9181:33:11",
																"nodeType": "YulFunctionCall",
																"src": "9181:33:11"
															},
															"nativeSrc": "9178:120:11",
															"nodeType": "YulIf",
															"src": "9178:120:11"
														},
														{
															"nativeSrc": "9308:117:11",
															"nodeType": "YulBlock",
															"src": "9308:117:11",
															"statements": [
																{
																	"nativeSrc": "9323:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9323:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9337:1:11",
																		"nodeType": "YulLiteral",
																		"src": "9337:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9327:6:11",
																			"nodeType": "YulTypedName",
																			"src": "9327:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9352:63:11",
																	"nodeType": "YulAssignment",
																	"src": "9352:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9387:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "9387:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9398:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "9398:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9383:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "9383:3:11"
																				},
																				"nativeSrc": "9383:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "9383:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9407:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "9407:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9362:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "9362:20:11"
																		},
																		"nativeSrc": "9362:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9362:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9352:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "9352:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9435:118:11",
															"nodeType": "YulBlock",
															"src": "9435:118:11",
															"statements": [
																{
																	"nativeSrc": "9450:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9450:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9464:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9464:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9454:6:11",
																			"nodeType": "YulTypedName",
																			"src": "9454:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9480:63:11",
																	"nodeType": "YulAssignment",
																	"src": "9480:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9515:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "9515:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9526:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "9526:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9511:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "9511:3:11"
																				},
																				"nativeSrc": "9511:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "9511:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9535:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "9535:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9490:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "9490:20:11"
																		},
																		"nativeSrc": "9490:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9490:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9480:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "9480:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9563:118:11",
															"nodeType": "YulBlock",
															"src": "9563:118:11",
															"statements": [
																{
																	"nativeSrc": "9578:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9578:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9592:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9592:2:11",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9582:6:11",
																			"nodeType": "YulTypedName",
																			"src": "9582:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9608:63:11",
																	"nodeType": "YulAssignment",
																	"src": "9608:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9643:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "9643:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9654:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "9654:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9639:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "9639:3:11"
																				},
																				"nativeSrc": "9639:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "9639:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9663:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "9663:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "9618:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "9618:20:11"
																		},
																		"nativeSrc": "9618:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9618:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "9608:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "9608:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9691:287:11",
															"nodeType": "YulBlock",
															"src": "9691:287:11",
															"statements": [
																{
																	"nativeSrc": "9706:46:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9706:46:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9737:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "9737:9:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9748:2:11",
																						"nodeType": "YulLiteral",
																						"src": "9748:2:11",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9733:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "9733:3:11"
																				},
																				"nativeSrc": "9733:18:11",
																				"nodeType": "YulFunctionCall",
																				"src": "9733:18:11"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "9720:12:11",
																			"nodeType": "YulIdentifier",
																			"src": "9720:12:11"
																		},
																		"nativeSrc": "9720:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9720:32:11"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9710:6:11",
																			"nodeType": "YulTypedName",
																			"src": "9710:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "9799:83:11",
																		"nodeType": "YulBlock",
																		"src": "9799:83:11",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "9801:77:11",
																						"nodeType": "YulIdentifier",
																						"src": "9801:77:11"
																					},
																					"nativeSrc": "9801:79:11",
																					"nodeType": "YulFunctionCall",
																					"src": "9801:79:11"
																				},
																				"nativeSrc": "9801:79:11",
																				"nodeType": "YulExpressionStatement",
																				"src": "9801:79:11"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9771:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "9771:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9779:18:11",
																				"nodeType": "YulLiteral",
																				"src": "9779:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "9768:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "9768:2:11"
																		},
																		"nativeSrc": "9768:30:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9768:30:11"
																	},
																	"nativeSrc": "9765:117:11",
																	"nodeType": "YulIf",
																	"src": "9765:117:11"
																},
																{
																	"nativeSrc": "9896:72:11",
																	"nodeType": "YulAssignment",
																	"src": "9896:72:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9940:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "9940:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9951:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "9951:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9936:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "9936:3:11"
																				},
																				"nativeSrc": "9936:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "9936:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9960:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "9960:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "9906:29:11",
																			"nodeType": "YulIdentifier",
																			"src": "9906:29:11"
																		},
																		"nativeSrc": "9906:62:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9906:62:11"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "9896:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "9896:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "9042:943:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9114:9:11",
														"nodeType": "YulTypedName",
														"src": "9114:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9125:7:11",
														"nodeType": "YulTypedName",
														"src": "9125:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9137:6:11",
														"nodeType": "YulTypedName",
														"src": "9137:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9145:6:11",
														"nodeType": "YulTypedName",
														"src": "9145:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9153:6:11",
														"nodeType": "YulTypedName",
														"src": "9153:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9161:6:11",
														"nodeType": "YulTypedName",
														"src": "9161:6:11",
														"type": ""
													}
												],
												"src": "9042:943:11"
											},
											{
												"body": {
													"nativeSrc": "10074:391:11",
													"nodeType": "YulBlock",
													"src": "10074:391:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "10120:83:11",
																"nodeType": "YulBlock",
																"src": "10120:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10122:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "10122:77:11"
																			},
																			"nativeSrc": "10122:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "10122:79:11"
																		},
																		"nativeSrc": "10122:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "10122:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10095:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "10095:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10104:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "10104:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10091:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10091:3:11"
																		},
																		"nativeSrc": "10091:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10091:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10116:2:11",
																		"nodeType": "YulLiteral",
																		"src": "10116:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10087:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10087:3:11"
																},
																"nativeSrc": "10087:32:11",
																"nodeType": "YulFunctionCall",
																"src": "10087:32:11"
															},
															"nativeSrc": "10084:119:11",
															"nodeType": "YulIf",
															"src": "10084:119:11"
														},
														{
															"nativeSrc": "10213:117:11",
															"nodeType": "YulBlock",
															"src": "10213:117:11",
															"statements": [
																{
																	"nativeSrc": "10228:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10228:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10242:1:11",
																		"nodeType": "YulLiteral",
																		"src": "10242:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10232:6:11",
																			"nodeType": "YulTypedName",
																			"src": "10232:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10257:63:11",
																	"nodeType": "YulAssignment",
																	"src": "10257:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10292:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "10292:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10303:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "10303:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10288:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "10288:3:11"
																				},
																				"nativeSrc": "10288:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "10288:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10312:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "10312:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10267:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "10267:20:11"
																		},
																		"nativeSrc": "10267:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10267:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10257:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "10257:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10340:118:11",
															"nodeType": "YulBlock",
															"src": "10340:118:11",
															"statements": [
																{
																	"nativeSrc": "10355:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10355:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10369:2:11",
																		"nodeType": "YulLiteral",
																		"src": "10369:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10359:6:11",
																			"nodeType": "YulTypedName",
																			"src": "10359:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10385:63:11",
																	"nodeType": "YulAssignment",
																	"src": "10385:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10420:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "10420:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10431:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "10431:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10416:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "10416:3:11"
																				},
																				"nativeSrc": "10416:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "10416:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10440:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "10440:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10395:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "10395:20:11"
																		},
																		"nativeSrc": "10395:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10395:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10385:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "10385:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "9991:474:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10036:9:11",
														"nodeType": "YulTypedName",
														"src": "10036:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10047:7:11",
														"nodeType": "YulTypedName",
														"src": "10047:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10059:6:11",
														"nodeType": "YulTypedName",
														"src": "10059:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10067:6:11",
														"nodeType": "YulTypedName",
														"src": "10067:6:11",
														"type": ""
													}
												],
												"src": "9991:474:11"
											},
											{
												"body": {
													"nativeSrc": "10499:152:11",
													"nodeType": "YulBlock",
													"src": "10499:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10516:1:11",
																		"nodeType": "YulLiteral",
																		"src": "10516:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10519:77:11",
																		"nodeType": "YulLiteral",
																		"src": "10519:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10509:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10509:6:11"
																},
																"nativeSrc": "10509:88:11",
																"nodeType": "YulFunctionCall",
																"src": "10509:88:11"
															},
															"nativeSrc": "10509:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "10509:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10613:1:11",
																		"nodeType": "YulLiteral",
																		"src": "10613:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10616:4:11",
																		"nodeType": "YulLiteral",
																		"src": "10616:4:11",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10606:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10606:6:11"
																},
																"nativeSrc": "10606:15:11",
																"nodeType": "YulFunctionCall",
																"src": "10606:15:11"
															},
															"nativeSrc": "10606:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "10606:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10637:1:11",
																		"nodeType": "YulLiteral",
																		"src": "10637:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10640:4:11",
																		"nodeType": "YulLiteral",
																		"src": "10640:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10630:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10630:6:11"
																},
																"nativeSrc": "10630:15:11",
																"nodeType": "YulFunctionCall",
																"src": "10630:15:11"
															},
															"nativeSrc": "10630:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "10630:15:11"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "10471:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "10471:180:11"
											},
											{
												"body": {
													"nativeSrc": "10708:269:11",
													"nodeType": "YulBlock",
													"src": "10708:269:11",
													"statements": [
														{
															"nativeSrc": "10718:22:11",
															"nodeType": "YulAssignment",
															"src": "10718:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "10732:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "10732:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10738:1:11",
																		"nodeType": "YulLiteral",
																		"src": "10738:1:11",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "10728:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10728:3:11"
																},
																"nativeSrc": "10728:12:11",
																"nodeType": "YulFunctionCall",
																"src": "10728:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "10718:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10718:6:11"
																}
															]
														},
														{
															"nativeSrc": "10749:38:11",
															"nodeType": "YulVariableDeclaration",
															"src": "10749:38:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "10779:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "10779:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10785:1:11",
																		"nodeType": "YulLiteral",
																		"src": "10785:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "10775:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10775:3:11"
																},
																"nativeSrc": "10775:12:11",
																"nodeType": "YulFunctionCall",
																"src": "10775:12:11"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "10753:18:11",
																	"nodeType": "YulTypedName",
																	"src": "10753:18:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10826:51:11",
																"nodeType": "YulBlock",
																"src": "10826:51:11",
																"statements": [
																	{
																		"nativeSrc": "10840:27:11",
																		"nodeType": "YulAssignment",
																		"src": "10840:27:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "10854:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "10854:6:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10862:4:11",
																					"nodeType": "YulLiteral",
																					"src": "10862:4:11",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "10850:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "10850:3:11"
																			},
																			"nativeSrc": "10850:17:11",
																			"nodeType": "YulFunctionCall",
																			"src": "10850:17:11"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "10840:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "10840:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "10806:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "10806:18:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10799:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10799:6:11"
																},
																"nativeSrc": "10799:26:11",
																"nodeType": "YulFunctionCall",
																"src": "10799:26:11"
															},
															"nativeSrc": "10796:81:11",
															"nodeType": "YulIf",
															"src": "10796:81:11"
														},
														{
															"body": {
																"nativeSrc": "10929:42:11",
																"nodeType": "YulBlock",
																"src": "10929:42:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "10943:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "10943:16:11"
																			},
																			"nativeSrc": "10943:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "10943:18:11"
																		},
																		"nativeSrc": "10943:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "10943:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "10893:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "10893:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10916:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "10916:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10924:2:11",
																				"nodeType": "YulLiteral",
																				"src": "10924:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "10913:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "10913:2:11"
																		},
																		"nativeSrc": "10913:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10913:14:11"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "10890:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "10890:2:11"
																},
																"nativeSrc": "10890:38:11",
																"nodeType": "YulFunctionCall",
																"src": "10890:38:11"
															},
															"nativeSrc": "10887:84:11",
															"nodeType": "YulIf",
															"src": "10887:84:11"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "10657:320:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "10692:4:11",
														"nodeType": "YulTypedName",
														"src": "10692:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "10701:6:11",
														"nodeType": "YulTypedName",
														"src": "10701:6:11",
														"type": ""
													}
												],
												"src": "10657:320:11"
											},
											{
												"body": {
													"nativeSrc": "11089:114:11",
													"nodeType": "YulBlock",
													"src": "11089:114:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11111:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "11111:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11119:1:11",
																				"nodeType": "YulLiteral",
																				"src": "11119:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11107:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11107:3:11"
																		},
																		"nativeSrc": "11107:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11107:14:11"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e65",
																		"kind": "string",
																		"nativeSrc": "11123:34:11",
																		"nodeType": "YulLiteral",
																		"src": "11123:34:11",
																		"type": "",
																		"value": "ERC721: approval to current owne"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11100:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11100:6:11"
																},
																"nativeSrc": "11100:58:11",
																"nodeType": "YulFunctionCall",
																"src": "11100:58:11"
															},
															"nativeSrc": "11100:58:11",
															"nodeType": "YulExpressionStatement",
															"src": "11100:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11179:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "11179:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11187:2:11",
																				"nodeType": "YulLiteral",
																				"src": "11187:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11175:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11175:3:11"
																		},
																		"nativeSrc": "11175:15:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11175:15:11"
																	},
																	{
																		"hexValue": "72",
																		"kind": "string",
																		"nativeSrc": "11192:3:11",
																		"nodeType": "YulLiteral",
																		"src": "11192:3:11",
																		"type": "",
																		"value": "r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11168:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11168:6:11"
																},
																"nativeSrc": "11168:28:11",
																"nodeType": "YulFunctionCall",
																"src": "11168:28:11"
															},
															"nativeSrc": "11168:28:11",
															"nodeType": "YulExpressionStatement",
															"src": "11168:28:11"
														}
													]
												},
												"name": "store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
												"nativeSrc": "10983:220:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11081:6:11",
														"nodeType": "YulTypedName",
														"src": "11081:6:11",
														"type": ""
													}
												],
												"src": "10983:220:11"
											},
											{
												"body": {
													"nativeSrc": "11355:220:11",
													"nodeType": "YulBlock",
													"src": "11355:220:11",
													"statements": [
														{
															"nativeSrc": "11365:74:11",
															"nodeType": "YulAssignment",
															"src": "11365:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11431:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "11431:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11436:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11436:2:11",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11372:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "11372:58:11"
																},
																"nativeSrc": "11372:67:11",
																"nodeType": "YulFunctionCall",
																"src": "11372:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11365:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11365:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11537:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "11537:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
																	"nativeSrc": "11448:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "11448:88:11"
																},
																"nativeSrc": "11448:93:11",
																"nodeType": "YulFunctionCall",
																"src": "11448:93:11"
															},
															"nativeSrc": "11448:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "11448:93:11"
														},
														{
															"nativeSrc": "11550:19:11",
															"nodeType": "YulAssignment",
															"src": "11550:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11561:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "11561:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11566:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11566:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11557:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11557:3:11"
																},
																"nativeSrc": "11557:12:11",
																"nodeType": "YulFunctionCall",
																"src": "11557:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11550:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11550:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11209:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11343:3:11",
														"nodeType": "YulTypedName",
														"src": "11343:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11351:3:11",
														"nodeType": "YulTypedName",
														"src": "11351:3:11",
														"type": ""
													}
												],
												"src": "11209:366:11"
											},
											{
												"body": {
													"nativeSrc": "11752:248:11",
													"nodeType": "YulBlock",
													"src": "11752:248:11",
													"statements": [
														{
															"nativeSrc": "11762:26:11",
															"nodeType": "YulAssignment",
															"src": "11762:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11774:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "11774:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11785:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11785:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11770:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11770:3:11"
																},
																"nativeSrc": "11770:18:11",
																"nodeType": "YulFunctionCall",
																"src": "11770:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11762:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "11762:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11809:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11809:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11820:1:11",
																				"nodeType": "YulLiteral",
																				"src": "11820:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11805:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11805:3:11"
																		},
																		"nativeSrc": "11805:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11805:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11828:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "11828:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11834:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11834:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11824:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11824:3:11"
																		},
																		"nativeSrc": "11824:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11824:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11798:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11798:6:11"
																},
																"nativeSrc": "11798:47:11",
																"nodeType": "YulFunctionCall",
																"src": "11798:47:11"
															},
															"nativeSrc": "11798:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "11798:47:11"
														},
														{
															"nativeSrc": "11854:139:11",
															"nodeType": "YulAssignment",
															"src": "11854:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11988:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "11988:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11862:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "11862:124:11"
																},
																"nativeSrc": "11862:131:11",
																"nodeType": "YulFunctionCall",
																"src": "11862:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11854:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "11854:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11581:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11732:9:11",
														"nodeType": "YulTypedName",
														"src": "11732:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11747:4:11",
														"nodeType": "YulTypedName",
														"src": "11747:4:11",
														"type": ""
													}
												],
												"src": "11581:419:11"
											},
											{
												"body": {
													"nativeSrc": "12112:142:11",
													"nodeType": "YulBlock",
													"src": "12112:142:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12134:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "12134:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12142:1:11",
																				"nodeType": "YulLiteral",
																				"src": "12142:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12130:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12130:3:11"
																		},
																		"nativeSrc": "12130:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12130:14:11"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f",
																		"kind": "string",
																		"nativeSrc": "12146:34:11",
																		"nodeType": "YulLiteral",
																		"src": "12146:34:11",
																		"type": "",
																		"value": "ERC721: approve caller is not to"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12123:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12123:6:11"
																},
																"nativeSrc": "12123:58:11",
																"nodeType": "YulFunctionCall",
																"src": "12123:58:11"
															},
															"nativeSrc": "12123:58:11",
															"nodeType": "YulExpressionStatement",
															"src": "12123:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12202:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "12202:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12210:2:11",
																				"nodeType": "YulLiteral",
																				"src": "12210:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12198:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12198:3:11"
																		},
																		"nativeSrc": "12198:15:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12198:15:11"
																	},
																	{
																		"hexValue": "6b656e206f776e6572206f7220617070726f76656420666f7220616c6c",
																		"kind": "string",
																		"nativeSrc": "12215:31:11",
																		"nodeType": "YulLiteral",
																		"src": "12215:31:11",
																		"type": "",
																		"value": "ken owner or approved for all"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12191:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12191:6:11"
																},
																"nativeSrc": "12191:56:11",
																"nodeType": "YulFunctionCall",
																"src": "12191:56:11"
															},
															"nativeSrc": "12191:56:11",
															"nodeType": "YulExpressionStatement",
															"src": "12191:56:11"
														}
													]
												},
												"name": "store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83",
												"nativeSrc": "12006:248:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12104:6:11",
														"nodeType": "YulTypedName",
														"src": "12104:6:11",
														"type": ""
													}
												],
												"src": "12006:248:11"
											},
											{
												"body": {
													"nativeSrc": "12406:220:11",
													"nodeType": "YulBlock",
													"src": "12406:220:11",
													"statements": [
														{
															"nativeSrc": "12416:74:11",
															"nodeType": "YulAssignment",
															"src": "12416:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12482:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "12482:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12487:2:11",
																		"nodeType": "YulLiteral",
																		"src": "12487:2:11",
																		"type": "",
																		"value": "61"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12423:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "12423:58:11"
																},
																"nativeSrc": "12423:67:11",
																"nodeType": "YulFunctionCall",
																"src": "12423:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12416:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12416:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12588:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "12588:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83",
																	"nativeSrc": "12499:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "12499:88:11"
																},
																"nativeSrc": "12499:93:11",
																"nodeType": "YulFunctionCall",
																"src": "12499:93:11"
															},
															"nativeSrc": "12499:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "12499:93:11"
														},
														{
															"nativeSrc": "12601:19:11",
															"nodeType": "YulAssignment",
															"src": "12601:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12612:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "12612:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12617:2:11",
																		"nodeType": "YulLiteral",
																		"src": "12617:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12608:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12608:3:11"
																},
																"nativeSrc": "12608:12:11",
																"nodeType": "YulFunctionCall",
																"src": "12608:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12601:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12601:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12260:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12394:3:11",
														"nodeType": "YulTypedName",
														"src": "12394:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12402:3:11",
														"nodeType": "YulTypedName",
														"src": "12402:3:11",
														"type": ""
													}
												],
												"src": "12260:366:11"
											},
											{
												"body": {
													"nativeSrc": "12803:248:11",
													"nodeType": "YulBlock",
													"src": "12803:248:11",
													"statements": [
														{
															"nativeSrc": "12813:26:11",
															"nodeType": "YulAssignment",
															"src": "12813:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12825:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "12825:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12836:2:11",
																		"nodeType": "YulLiteral",
																		"src": "12836:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12821:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12821:3:11"
																},
																"nativeSrc": "12821:18:11",
																"nodeType": "YulFunctionCall",
																"src": "12821:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12813:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "12813:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12860:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "12860:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12871:1:11",
																				"nodeType": "YulLiteral",
																				"src": "12871:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12856:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12856:3:11"
																		},
																		"nativeSrc": "12856:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12856:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12879:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "12879:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12885:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "12885:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12875:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12875:3:11"
																		},
																		"nativeSrc": "12875:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12875:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12849:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12849:6:11"
																},
																"nativeSrc": "12849:47:11",
																"nodeType": "YulFunctionCall",
																"src": "12849:47:11"
															},
															"nativeSrc": "12849:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "12849:47:11"
														},
														{
															"nativeSrc": "12905:139:11",
															"nodeType": "YulAssignment",
															"src": "12905:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13039:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "13039:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12913:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "12913:124:11"
																},
																"nativeSrc": "12913:131:11",
																"nodeType": "YulFunctionCall",
																"src": "12913:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12905:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "12905:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12632:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12783:9:11",
														"nodeType": "YulTypedName",
														"src": "12783:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12798:4:11",
														"nodeType": "YulTypedName",
														"src": "12798:4:11",
														"type": ""
													}
												],
												"src": "12632:419:11"
											},
											{
												"body": {
													"nativeSrc": "13163:126:11",
													"nodeType": "YulBlock",
													"src": "13163:126:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13185:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "13185:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13193:1:11",
																				"nodeType": "YulLiteral",
																				"src": "13193:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13181:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13181:3:11"
																		},
																		"nativeSrc": "13181:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13181:14:11"
																	},
																	{
																		"hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65",
																		"kind": "string",
																		"nativeSrc": "13197:34:11",
																		"nodeType": "YulLiteral",
																		"src": "13197:34:11",
																		"type": "",
																		"value": "ERC721: caller is not token owne"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13174:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13174:6:11"
																},
																"nativeSrc": "13174:58:11",
																"nodeType": "YulFunctionCall",
																"src": "13174:58:11"
															},
															"nativeSrc": "13174:58:11",
															"nodeType": "YulExpressionStatement",
															"src": "13174:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13253:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "13253:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13261:2:11",
																				"nodeType": "YulLiteral",
																				"src": "13261:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13249:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13249:3:11"
																		},
																		"nativeSrc": "13249:15:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13249:15:11"
																	},
																	{
																		"hexValue": "72206f7220617070726f766564",
																		"kind": "string",
																		"nativeSrc": "13266:15:11",
																		"nodeType": "YulLiteral",
																		"src": "13266:15:11",
																		"type": "",
																		"value": "r or approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13242:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13242:6:11"
																},
																"nativeSrc": "13242:40:11",
																"nodeType": "YulFunctionCall",
																"src": "13242:40:11"
															},
															"nativeSrc": "13242:40:11",
															"nodeType": "YulExpressionStatement",
															"src": "13242:40:11"
														}
													]
												},
												"name": "store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
												"nativeSrc": "13057:232:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13155:6:11",
														"nodeType": "YulTypedName",
														"src": "13155:6:11",
														"type": ""
													}
												],
												"src": "13057:232:11"
											},
											{
												"body": {
													"nativeSrc": "13441:220:11",
													"nodeType": "YulBlock",
													"src": "13441:220:11",
													"statements": [
														{
															"nativeSrc": "13451:74:11",
															"nodeType": "YulAssignment",
															"src": "13451:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13517:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "13517:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13522:2:11",
																		"nodeType": "YulLiteral",
																		"src": "13522:2:11",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13458:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "13458:58:11"
																},
																"nativeSrc": "13458:67:11",
																"nodeType": "YulFunctionCall",
																"src": "13458:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13451:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "13451:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13623:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "13623:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																	"nativeSrc": "13534:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "13534:88:11"
																},
																"nativeSrc": "13534:93:11",
																"nodeType": "YulFunctionCall",
																"src": "13534:93:11"
															},
															"nativeSrc": "13534:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "13534:93:11"
														},
														{
															"nativeSrc": "13636:19:11",
															"nodeType": "YulAssignment",
															"src": "13636:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13647:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "13647:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13652:2:11",
																		"nodeType": "YulLiteral",
																		"src": "13652:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13643:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "13643:3:11"
																},
																"nativeSrc": "13643:12:11",
																"nodeType": "YulFunctionCall",
																"src": "13643:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13636:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "13636:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13295:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13429:3:11",
														"nodeType": "YulTypedName",
														"src": "13429:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13437:3:11",
														"nodeType": "YulTypedName",
														"src": "13437:3:11",
														"type": ""
													}
												],
												"src": "13295:366:11"
											},
											{
												"body": {
													"nativeSrc": "13838:248:11",
													"nodeType": "YulBlock",
													"src": "13838:248:11",
													"statements": [
														{
															"nativeSrc": "13848:26:11",
															"nodeType": "YulAssignment",
															"src": "13848:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13860:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "13860:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13871:2:11",
																		"nodeType": "YulLiteral",
																		"src": "13871:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13856:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "13856:3:11"
																},
																"nativeSrc": "13856:18:11",
																"nodeType": "YulFunctionCall",
																"src": "13856:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13848:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "13848:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13895:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "13895:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13906:1:11",
																				"nodeType": "YulLiteral",
																				"src": "13906:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13891:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13891:3:11"
																		},
																		"nativeSrc": "13891:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13891:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13914:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "13914:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13920:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "13920:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13910:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13910:3:11"
																		},
																		"nativeSrc": "13910:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13910:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13884:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13884:6:11"
																},
																"nativeSrc": "13884:47:11",
																"nodeType": "YulFunctionCall",
																"src": "13884:47:11"
															},
															"nativeSrc": "13884:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "13884:47:11"
														},
														{
															"nativeSrc": "13940:139:11",
															"nodeType": "YulAssignment",
															"src": "13940:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14074:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "14074:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13948:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "13948:124:11"
																},
																"nativeSrc": "13948:131:11",
																"nodeType": "YulFunctionCall",
																"src": "13948:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13940:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "13940:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13667:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13818:9:11",
														"nodeType": "YulTypedName",
														"src": "13818:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13833:4:11",
														"nodeType": "YulTypedName",
														"src": "13833:4:11",
														"type": ""
													}
												],
												"src": "13667:419:11"
											},
											{
												"body": {
													"nativeSrc": "14198:118:11",
													"nodeType": "YulBlock",
													"src": "14198:118:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14220:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "14220:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14228:1:11",
																				"nodeType": "YulLiteral",
																				"src": "14228:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14216:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "14216:3:11"
																		},
																		"nativeSrc": "14216:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "14216:14:11"
																	},
																	{
																		"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f727265637420",
																		"kind": "string",
																		"nativeSrc": "14232:34:11",
																		"nodeType": "YulLiteral",
																		"src": "14232:34:11",
																		"type": "",
																		"value": "ERC721: transfer from incorrect "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14209:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "14209:6:11"
																},
																"nativeSrc": "14209:58:11",
																"nodeType": "YulFunctionCall",
																"src": "14209:58:11"
															},
															"nativeSrc": "14209:58:11",
															"nodeType": "YulExpressionStatement",
															"src": "14209:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14288:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "14288:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14296:2:11",
																				"nodeType": "YulLiteral",
																				"src": "14296:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14284:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "14284:3:11"
																		},
																		"nativeSrc": "14284:15:11",
																		"nodeType": "YulFunctionCall",
																		"src": "14284:15:11"
																	},
																	{
																		"hexValue": "6f776e6572",
																		"kind": "string",
																		"nativeSrc": "14301:7:11",
																		"nodeType": "YulLiteral",
																		"src": "14301:7:11",
																		"type": "",
																		"value": "owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14277:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "14277:6:11"
																},
																"nativeSrc": "14277:32:11",
																"nodeType": "YulFunctionCall",
																"src": "14277:32:11"
															},
															"nativeSrc": "14277:32:11",
															"nodeType": "YulExpressionStatement",
															"src": "14277:32:11"
														}
													]
												},
												"name": "store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
												"nativeSrc": "14092:224:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14190:6:11",
														"nodeType": "YulTypedName",
														"src": "14190:6:11",
														"type": ""
													}
												],
												"src": "14092:224:11"
											},
											{
												"body": {
													"nativeSrc": "14468:220:11",
													"nodeType": "YulBlock",
													"src": "14468:220:11",
													"statements": [
														{
															"nativeSrc": "14478:74:11",
															"nodeType": "YulAssignment",
															"src": "14478:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14544:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "14544:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14549:2:11",
																		"nodeType": "YulLiteral",
																		"src": "14549:2:11",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14485:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "14485:58:11"
																},
																"nativeSrc": "14485:67:11",
																"nodeType": "YulFunctionCall",
																"src": "14485:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14478:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14478:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14650:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "14650:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																	"nativeSrc": "14561:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "14561:88:11"
																},
																"nativeSrc": "14561:93:11",
																"nodeType": "YulFunctionCall",
																"src": "14561:93:11"
															},
															"nativeSrc": "14561:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "14561:93:11"
														},
														{
															"nativeSrc": "14663:19:11",
															"nodeType": "YulAssignment",
															"src": "14663:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14674:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "14674:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14679:2:11",
																		"nodeType": "YulLiteral",
																		"src": "14679:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14670:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14670:3:11"
																},
																"nativeSrc": "14670:12:11",
																"nodeType": "YulFunctionCall",
																"src": "14670:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14663:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14663:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14322:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14456:3:11",
														"nodeType": "YulTypedName",
														"src": "14456:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14464:3:11",
														"nodeType": "YulTypedName",
														"src": "14464:3:11",
														"type": ""
													}
												],
												"src": "14322:366:11"
											},
											{
												"body": {
													"nativeSrc": "14865:248:11",
													"nodeType": "YulBlock",
													"src": "14865:248:11",
													"statements": [
														{
															"nativeSrc": "14875:26:11",
															"nodeType": "YulAssignment",
															"src": "14875:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14887:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "14887:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14898:2:11",
																		"nodeType": "YulLiteral",
																		"src": "14898:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14883:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14883:3:11"
																},
																"nativeSrc": "14883:18:11",
																"nodeType": "YulFunctionCall",
																"src": "14883:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14875:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "14875:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14922:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "14922:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14933:1:11",
																				"nodeType": "YulLiteral",
																				"src": "14933:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14918:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "14918:3:11"
																		},
																		"nativeSrc": "14918:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "14918:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14941:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "14941:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14947:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "14947:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14937:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "14937:3:11"
																		},
																		"nativeSrc": "14937:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "14937:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14911:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "14911:6:11"
																},
																"nativeSrc": "14911:47:11",
																"nodeType": "YulFunctionCall",
																"src": "14911:47:11"
															},
															"nativeSrc": "14911:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "14911:47:11"
														},
														{
															"nativeSrc": "14967:139:11",
															"nodeType": "YulAssignment",
															"src": "14967:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15101:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "15101:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14975:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "14975:124:11"
																},
																"nativeSrc": "14975:131:11",
																"nodeType": "YulFunctionCall",
																"src": "14975:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14967:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "14967:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14694:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14845:9:11",
														"nodeType": "YulTypedName",
														"src": "14845:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14860:4:11",
														"nodeType": "YulTypedName",
														"src": "14860:4:11",
														"type": ""
													}
												],
												"src": "14694:419:11"
											},
											{
												"body": {
													"nativeSrc": "15225:68:11",
													"nodeType": "YulBlock",
													"src": "15225:68:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15247:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "15247:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15255:1:11",
																				"nodeType": "YulLiteral",
																				"src": "15255:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15243:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "15243:3:11"
																		},
																		"nativeSrc": "15243:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "15243:14:11"
																	},
																	{
																		"hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
																		"kind": "string",
																		"nativeSrc": "15259:26:11",
																		"nodeType": "YulLiteral",
																		"src": "15259:26:11",
																		"type": "",
																		"value": "ERC721: invalid token ID"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15236:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "15236:6:11"
																},
																"nativeSrc": "15236:50:11",
																"nodeType": "YulFunctionCall",
																"src": "15236:50:11"
															},
															"nativeSrc": "15236:50:11",
															"nodeType": "YulExpressionStatement",
															"src": "15236:50:11"
														}
													]
												},
												"name": "store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
												"nativeSrc": "15119:174:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15217:6:11",
														"nodeType": "YulTypedName",
														"src": "15217:6:11",
														"type": ""
													}
												],
												"src": "15119:174:11"
											},
											{
												"body": {
													"nativeSrc": "15445:220:11",
													"nodeType": "YulBlock",
													"src": "15445:220:11",
													"statements": [
														{
															"nativeSrc": "15455:74:11",
															"nodeType": "YulAssignment",
															"src": "15455:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15521:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "15521:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15526:2:11",
																		"nodeType": "YulLiteral",
																		"src": "15526:2:11",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15462:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "15462:58:11"
																},
																"nativeSrc": "15462:67:11",
																"nodeType": "YulFunctionCall",
																"src": "15462:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15455:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "15455:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15627:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "15627:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																	"nativeSrc": "15538:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "15538:88:11"
																},
																"nativeSrc": "15538:93:11",
																"nodeType": "YulFunctionCall",
																"src": "15538:93:11"
															},
															"nativeSrc": "15538:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "15538:93:11"
														},
														{
															"nativeSrc": "15640:19:11",
															"nodeType": "YulAssignment",
															"src": "15640:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15651:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "15651:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15656:2:11",
																		"nodeType": "YulLiteral",
																		"src": "15656:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15647:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "15647:3:11"
																},
																"nativeSrc": "15647:12:11",
																"nodeType": "YulFunctionCall",
																"src": "15647:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15640:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "15640:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15299:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15433:3:11",
														"nodeType": "YulTypedName",
														"src": "15433:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15441:3:11",
														"nodeType": "YulTypedName",
														"src": "15441:3:11",
														"type": ""
													}
												],
												"src": "15299:366:11"
											},
											{
												"body": {
													"nativeSrc": "15842:248:11",
													"nodeType": "YulBlock",
													"src": "15842:248:11",
													"statements": [
														{
															"nativeSrc": "15852:26:11",
															"nodeType": "YulAssignment",
															"src": "15852:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15864:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "15864:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15875:2:11",
																		"nodeType": "YulLiteral",
																		"src": "15875:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15860:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "15860:3:11"
																},
																"nativeSrc": "15860:18:11",
																"nodeType": "YulFunctionCall",
																"src": "15860:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15852:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "15852:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15899:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "15899:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15910:1:11",
																				"nodeType": "YulLiteral",
																				"src": "15910:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15895:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "15895:3:11"
																		},
																		"nativeSrc": "15895:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "15895:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15918:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "15918:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15924:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "15924:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15914:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "15914:3:11"
																		},
																		"nativeSrc": "15914:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "15914:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15888:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "15888:6:11"
																},
																"nativeSrc": "15888:47:11",
																"nodeType": "YulFunctionCall",
																"src": "15888:47:11"
															},
															"nativeSrc": "15888:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "15888:47:11"
														},
														{
															"nativeSrc": "15944:139:11",
															"nodeType": "YulAssignment",
															"src": "15944:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16078:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "16078:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15952:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "15952:124:11"
																},
																"nativeSrc": "15952:131:11",
																"nodeType": "YulFunctionCall",
																"src": "15952:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15944:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "15944:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15671:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15822:9:11",
														"nodeType": "YulTypedName",
														"src": "15822:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15837:4:11",
														"nodeType": "YulTypedName",
														"src": "15837:4:11",
														"type": ""
													}
												],
												"src": "15671:419:11"
											},
											{
												"body": {
													"nativeSrc": "16202:122:11",
													"nodeType": "YulBlock",
													"src": "16202:122:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16224:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "16224:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16232:1:11",
																				"nodeType": "YulLiteral",
																				"src": "16232:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16220:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "16220:3:11"
																		},
																		"nativeSrc": "16220:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "16220:14:11"
																	},
																	{
																		"hexValue": "4552433732313a2061646472657373207a65726f206973206e6f742061207661",
																		"kind": "string",
																		"nativeSrc": "16236:34:11",
																		"nodeType": "YulLiteral",
																		"src": "16236:34:11",
																		"type": "",
																		"value": "ERC721: address zero is not a va"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16213:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "16213:6:11"
																},
																"nativeSrc": "16213:58:11",
																"nodeType": "YulFunctionCall",
																"src": "16213:58:11"
															},
															"nativeSrc": "16213:58:11",
															"nodeType": "YulExpressionStatement",
															"src": "16213:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16292:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "16292:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16300:2:11",
																				"nodeType": "YulLiteral",
																				"src": "16300:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16288:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "16288:3:11"
																		},
																		"nativeSrc": "16288:15:11",
																		"nodeType": "YulFunctionCall",
																		"src": "16288:15:11"
																	},
																	{
																		"hexValue": "6c6964206f776e6572",
																		"kind": "string",
																		"nativeSrc": "16305:11:11",
																		"nodeType": "YulLiteral",
																		"src": "16305:11:11",
																		"type": "",
																		"value": "lid owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16281:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "16281:6:11"
																},
																"nativeSrc": "16281:36:11",
																"nodeType": "YulFunctionCall",
																"src": "16281:36:11"
															},
															"nativeSrc": "16281:36:11",
															"nodeType": "YulExpressionStatement",
															"src": "16281:36:11"
														}
													]
												},
												"name": "store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159",
												"nativeSrc": "16096:228:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16194:6:11",
														"nodeType": "YulTypedName",
														"src": "16194:6:11",
														"type": ""
													}
												],
												"src": "16096:228:11"
											},
											{
												"body": {
													"nativeSrc": "16476:220:11",
													"nodeType": "YulBlock",
													"src": "16476:220:11",
													"statements": [
														{
															"nativeSrc": "16486:74:11",
															"nodeType": "YulAssignment",
															"src": "16486:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16552:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "16552:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16557:2:11",
																		"nodeType": "YulLiteral",
																		"src": "16557:2:11",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16493:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "16493:58:11"
																},
																"nativeSrc": "16493:67:11",
																"nodeType": "YulFunctionCall",
																"src": "16493:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16486:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "16486:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16658:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "16658:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159",
																	"nativeSrc": "16569:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "16569:88:11"
																},
																"nativeSrc": "16569:93:11",
																"nodeType": "YulFunctionCall",
																"src": "16569:93:11"
															},
															"nativeSrc": "16569:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "16569:93:11"
														},
														{
															"nativeSrc": "16671:19:11",
															"nodeType": "YulAssignment",
															"src": "16671:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16682:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "16682:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16687:2:11",
																		"nodeType": "YulLiteral",
																		"src": "16687:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16678:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "16678:3:11"
																},
																"nativeSrc": "16678:12:11",
																"nodeType": "YulFunctionCall",
																"src": "16678:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16671:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "16671:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16330:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16464:3:11",
														"nodeType": "YulTypedName",
														"src": "16464:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16472:3:11",
														"nodeType": "YulTypedName",
														"src": "16472:3:11",
														"type": ""
													}
												],
												"src": "16330:366:11"
											},
											{
												"body": {
													"nativeSrc": "16873:248:11",
													"nodeType": "YulBlock",
													"src": "16873:248:11",
													"statements": [
														{
															"nativeSrc": "16883:26:11",
															"nodeType": "YulAssignment",
															"src": "16883:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16895:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "16895:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16906:2:11",
																		"nodeType": "YulLiteral",
																		"src": "16906:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16891:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "16891:3:11"
																},
																"nativeSrc": "16891:18:11",
																"nodeType": "YulFunctionCall",
																"src": "16891:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16883:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "16883:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16930:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "16930:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16941:1:11",
																				"nodeType": "YulLiteral",
																				"src": "16941:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16926:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "16926:3:11"
																		},
																		"nativeSrc": "16926:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "16926:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16949:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "16949:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16955:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "16955:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16945:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "16945:3:11"
																		},
																		"nativeSrc": "16945:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "16945:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16919:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "16919:6:11"
																},
																"nativeSrc": "16919:47:11",
																"nodeType": "YulFunctionCall",
																"src": "16919:47:11"
															},
															"nativeSrc": "16919:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "16919:47:11"
														},
														{
															"nativeSrc": "16975:139:11",
															"nodeType": "YulAssignment",
															"src": "16975:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17109:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "17109:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16983:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "16983:124:11"
																},
																"nativeSrc": "16983:131:11",
																"nodeType": "YulFunctionCall",
																"src": "16983:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16975:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "16975:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16702:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16853:9:11",
														"nodeType": "YulTypedName",
														"src": "16853:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16868:4:11",
														"nodeType": "YulTypedName",
														"src": "16868:4:11",
														"type": ""
													}
												],
												"src": "16702:419:11"
											},
											{
												"body": {
													"nativeSrc": "17241:34:11",
													"nodeType": "YulBlock",
													"src": "17241:34:11",
													"statements": [
														{
															"nativeSrc": "17251:18:11",
															"nodeType": "YulAssignment",
															"src": "17251:18:11",
															"value": {
																"name": "pos",
																"nativeSrc": "17266:3:11",
																"nodeType": "YulIdentifier",
																"src": "17266:3:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "17251:11:11",
																	"nodeType": "YulIdentifier",
																	"src": "17251:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "17127:148:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17213:3:11",
														"nodeType": "YulTypedName",
														"src": "17213:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "17218:6:11",
														"nodeType": "YulTypedName",
														"src": "17218:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "17229:11:11",
														"nodeType": "YulTypedName",
														"src": "17229:11:11",
														"type": ""
													}
												],
												"src": "17127:148:11"
											},
											{
												"body": {
													"nativeSrc": "17391:280:11",
													"nodeType": "YulBlock",
													"src": "17391:280:11",
													"statements": [
														{
															"nativeSrc": "17401:53:11",
															"nodeType": "YulVariableDeclaration",
															"src": "17401:53:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17448:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "17448:5:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "17415:32:11",
																	"nodeType": "YulIdentifier",
																	"src": "17415:32:11"
																},
																"nativeSrc": "17415:39:11",
																"nodeType": "YulFunctionCall",
																"src": "17415:39:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "17405:6:11",
																	"nodeType": "YulTypedName",
																	"src": "17405:6:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "17463:96:11",
															"nodeType": "YulAssignment",
															"src": "17463:96:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17547:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "17547:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "17552:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "17552:6:11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "17470:76:11",
																	"nodeType": "YulIdentifier",
																	"src": "17470:76:11"
																},
																"nativeSrc": "17470:89:11",
																"nodeType": "YulFunctionCall",
																"src": "17470:89:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17463:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "17463:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "17607:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "17607:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17614:4:11",
																				"nodeType": "YulLiteral",
																				"src": "17614:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17603:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "17603:3:11"
																		},
																		"nativeSrc": "17603:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "17603:16:11"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "17621:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "17621:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "17626:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "17626:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "17568:34:11",
																	"nodeType": "YulIdentifier",
																	"src": "17568:34:11"
																},
																"nativeSrc": "17568:65:11",
																"nodeType": "YulFunctionCall",
																"src": "17568:65:11"
															},
															"nativeSrc": "17568:65:11",
															"nodeType": "YulExpressionStatement",
															"src": "17568:65:11"
														},
														{
															"nativeSrc": "17642:23:11",
															"nodeType": "YulAssignment",
															"src": "17642:23:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17653:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "17653:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "17658:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "17658:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17649:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "17649:3:11"
																},
																"nativeSrc": "17649:16:11",
																"nodeType": "YulFunctionCall",
																"src": "17649:16:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17642:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "17642:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "17281:390:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17372:5:11",
														"nodeType": "YulTypedName",
														"src": "17372:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "17379:3:11",
														"nodeType": "YulTypedName",
														"src": "17379:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17387:3:11",
														"nodeType": "YulTypedName",
														"src": "17387:3:11",
														"type": ""
													}
												],
												"src": "17281:390:11"
											},
											{
												"body": {
													"nativeSrc": "17861:251:11",
													"nodeType": "YulBlock",
													"src": "17861:251:11",
													"statements": [
														{
															"nativeSrc": "17872:102:11",
															"nodeType": "YulAssignment",
															"src": "17872:102:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17961:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "17961:6:11"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "17970:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "17970:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "17879:81:11",
																	"nodeType": "YulIdentifier",
																	"src": "17879:81:11"
																},
																"nativeSrc": "17879:95:11",
																"nodeType": "YulFunctionCall",
																"src": "17879:95:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17872:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "17872:3:11"
																}
															]
														},
														{
															"nativeSrc": "17984:102:11",
															"nodeType": "YulAssignment",
															"src": "17984:102:11",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "18073:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "18073:6:11"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "18082:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "18082:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "17991:81:11",
																	"nodeType": "YulIdentifier",
																	"src": "17991:81:11"
																},
																"nativeSrc": "17991:95:11",
																"nodeType": "YulFunctionCall",
																"src": "17991:95:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17984:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "17984:3:11"
																}
															]
														},
														{
															"nativeSrc": "18096:10:11",
															"nodeType": "YulAssignment",
															"src": "18096:10:11",
															"value": {
																"name": "pos",
																"nativeSrc": "18103:3:11",
																"nodeType": "YulIdentifier",
																"src": "18103:3:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18096:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "18096:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "17677:435:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17832:3:11",
														"nodeType": "YulTypedName",
														"src": "17832:3:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17838:6:11",
														"nodeType": "YulTypedName",
														"src": "17838:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17846:6:11",
														"nodeType": "YulTypedName",
														"src": "17846:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17857:3:11",
														"nodeType": "YulTypedName",
														"src": "17857:3:11",
														"type": ""
													}
												],
												"src": "17677:435:11"
											},
											{
												"body": {
													"nativeSrc": "18224:69:11",
													"nodeType": "YulBlock",
													"src": "18224:69:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18246:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "18246:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18254:1:11",
																				"nodeType": "YulLiteral",
																				"src": "18254:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18242:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "18242:3:11"
																		},
																		"nativeSrc": "18242:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "18242:14:11"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
																		"kind": "string",
																		"nativeSrc": "18258:27:11",
																		"nodeType": "YulLiteral",
																		"src": "18258:27:11",
																		"type": "",
																		"value": "ERC721: approve to caller"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18235:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "18235:6:11"
																},
																"nativeSrc": "18235:51:11",
																"nodeType": "YulFunctionCall",
																"src": "18235:51:11"
															},
															"nativeSrc": "18235:51:11",
															"nodeType": "YulExpressionStatement",
															"src": "18235:51:11"
														}
													]
												},
												"name": "store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
												"nativeSrc": "18118:175:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18216:6:11",
														"nodeType": "YulTypedName",
														"src": "18216:6:11",
														"type": ""
													}
												],
												"src": "18118:175:11"
											},
											{
												"body": {
													"nativeSrc": "18445:220:11",
													"nodeType": "YulBlock",
													"src": "18445:220:11",
													"statements": [
														{
															"nativeSrc": "18455:74:11",
															"nodeType": "YulAssignment",
															"src": "18455:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18521:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "18521:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18526:2:11",
																		"nodeType": "YulLiteral",
																		"src": "18526:2:11",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18462:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "18462:58:11"
																},
																"nativeSrc": "18462:67:11",
																"nodeType": "YulFunctionCall",
																"src": "18462:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18455:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "18455:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18627:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "18627:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
																	"nativeSrc": "18538:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "18538:88:11"
																},
																"nativeSrc": "18538:93:11",
																"nodeType": "YulFunctionCall",
																"src": "18538:93:11"
															},
															"nativeSrc": "18538:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "18538:93:11"
														},
														{
															"nativeSrc": "18640:19:11",
															"nodeType": "YulAssignment",
															"src": "18640:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18651:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "18651:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18656:2:11",
																		"nodeType": "YulLiteral",
																		"src": "18656:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18647:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "18647:3:11"
																},
																"nativeSrc": "18647:12:11",
																"nodeType": "YulFunctionCall",
																"src": "18647:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18640:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "18640:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18299:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18433:3:11",
														"nodeType": "YulTypedName",
														"src": "18433:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18441:3:11",
														"nodeType": "YulTypedName",
														"src": "18441:3:11",
														"type": ""
													}
												],
												"src": "18299:366:11"
											},
											{
												"body": {
													"nativeSrc": "18842:248:11",
													"nodeType": "YulBlock",
													"src": "18842:248:11",
													"statements": [
														{
															"nativeSrc": "18852:26:11",
															"nodeType": "YulAssignment",
															"src": "18852:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18864:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "18864:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18875:2:11",
																		"nodeType": "YulLiteral",
																		"src": "18875:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18860:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "18860:3:11"
																},
																"nativeSrc": "18860:18:11",
																"nodeType": "YulFunctionCall",
																"src": "18860:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18852:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "18852:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18899:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "18899:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18910:1:11",
																				"nodeType": "YulLiteral",
																				"src": "18910:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18895:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "18895:3:11"
																		},
																		"nativeSrc": "18895:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "18895:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18918:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "18918:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18924:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "18924:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18914:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "18914:3:11"
																		},
																		"nativeSrc": "18914:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "18914:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18888:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "18888:6:11"
																},
																"nativeSrc": "18888:47:11",
																"nodeType": "YulFunctionCall",
																"src": "18888:47:11"
															},
															"nativeSrc": "18888:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "18888:47:11"
														},
														{
															"nativeSrc": "18944:139:11",
															"nodeType": "YulAssignment",
															"src": "18944:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19078:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "19078:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18952:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "18952:124:11"
																},
																"nativeSrc": "18952:131:11",
																"nodeType": "YulFunctionCall",
																"src": "18952:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18944:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "18944:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18671:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18822:9:11",
														"nodeType": "YulTypedName",
														"src": "18822:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18837:4:11",
														"nodeType": "YulTypedName",
														"src": "18837:4:11",
														"type": ""
													}
												],
												"src": "18671:419:11"
											},
											{
												"body": {
													"nativeSrc": "19202:131:11",
													"nodeType": "YulBlock",
													"src": "19202:131:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19224:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "19224:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19232:1:11",
																				"nodeType": "YulLiteral",
																				"src": "19232:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19220:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "19220:3:11"
																		},
																		"nativeSrc": "19220:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "19220:14:11"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f206e6f6e204552433732315265",
																		"kind": "string",
																		"nativeSrc": "19236:34:11",
																		"nodeType": "YulLiteral",
																		"src": "19236:34:11",
																		"type": "",
																		"value": "ERC721: transfer to non ERC721Re"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19213:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "19213:6:11"
																},
																"nativeSrc": "19213:58:11",
																"nodeType": "YulFunctionCall",
																"src": "19213:58:11"
															},
															"nativeSrc": "19213:58:11",
															"nodeType": "YulExpressionStatement",
															"src": "19213:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19292:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "19292:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19300:2:11",
																				"nodeType": "YulLiteral",
																				"src": "19300:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19288:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "19288:3:11"
																		},
																		"nativeSrc": "19288:15:11",
																		"nodeType": "YulFunctionCall",
																		"src": "19288:15:11"
																	},
																	{
																		"hexValue": "63656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nativeSrc": "19305:20:11",
																		"nodeType": "YulLiteral",
																		"src": "19305:20:11",
																		"type": "",
																		"value": "ceiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19281:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "19281:6:11"
																},
																"nativeSrc": "19281:45:11",
																"nodeType": "YulFunctionCall",
																"src": "19281:45:11"
															},
															"nativeSrc": "19281:45:11",
															"nodeType": "YulExpressionStatement",
															"src": "19281:45:11"
														}
													]
												},
												"name": "store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
												"nativeSrc": "19096:237:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19194:6:11",
														"nodeType": "YulTypedName",
														"src": "19194:6:11",
														"type": ""
													}
												],
												"src": "19096:237:11"
											},
											{
												"body": {
													"nativeSrc": "19485:220:11",
													"nodeType": "YulBlock",
													"src": "19485:220:11",
													"statements": [
														{
															"nativeSrc": "19495:74:11",
															"nodeType": "YulAssignment",
															"src": "19495:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19561:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "19561:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19566:2:11",
																		"nodeType": "YulLiteral",
																		"src": "19566:2:11",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19502:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "19502:58:11"
																},
																"nativeSrc": "19502:67:11",
																"nodeType": "YulFunctionCall",
																"src": "19502:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19495:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "19495:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19667:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "19667:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																	"nativeSrc": "19578:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "19578:88:11"
																},
																"nativeSrc": "19578:93:11",
																"nodeType": "YulFunctionCall",
																"src": "19578:93:11"
															},
															"nativeSrc": "19578:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "19578:93:11"
														},
														{
															"nativeSrc": "19680:19:11",
															"nodeType": "YulAssignment",
															"src": "19680:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19691:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "19691:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19696:2:11",
																		"nodeType": "YulLiteral",
																		"src": "19696:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19687:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "19687:3:11"
																},
																"nativeSrc": "19687:12:11",
																"nodeType": "YulFunctionCall",
																"src": "19687:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19680:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "19680:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19339:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19473:3:11",
														"nodeType": "YulTypedName",
														"src": "19473:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19481:3:11",
														"nodeType": "YulTypedName",
														"src": "19481:3:11",
														"type": ""
													}
												],
												"src": "19339:366:11"
											},
											{
												"body": {
													"nativeSrc": "19882:248:11",
													"nodeType": "YulBlock",
													"src": "19882:248:11",
													"statements": [
														{
															"nativeSrc": "19892:26:11",
															"nodeType": "YulAssignment",
															"src": "19892:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19904:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "19904:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19915:2:11",
																		"nodeType": "YulLiteral",
																		"src": "19915:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19900:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "19900:3:11"
																},
																"nativeSrc": "19900:18:11",
																"nodeType": "YulFunctionCall",
																"src": "19900:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19892:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "19892:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19939:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "19939:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19950:1:11",
																				"nodeType": "YulLiteral",
																				"src": "19950:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19935:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "19935:3:11"
																		},
																		"nativeSrc": "19935:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "19935:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19958:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "19958:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19964:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "19964:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19954:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "19954:3:11"
																		},
																		"nativeSrc": "19954:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "19954:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19928:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "19928:6:11"
																},
																"nativeSrc": "19928:47:11",
																"nodeType": "YulFunctionCall",
																"src": "19928:47:11"
															},
															"nativeSrc": "19928:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "19928:47:11"
														},
														{
															"nativeSrc": "19984:139:11",
															"nodeType": "YulAssignment",
															"src": "19984:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20118:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "20118:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19992:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "19992:124:11"
																},
																"nativeSrc": "19992:131:11",
																"nodeType": "YulFunctionCall",
																"src": "19992:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19984:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "19984:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19711:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19862:9:11",
														"nodeType": "YulTypedName",
														"src": "19862:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19877:4:11",
														"nodeType": "YulTypedName",
														"src": "19877:4:11",
														"type": ""
													}
												],
												"src": "19711:419:11"
											},
											{
												"body": {
													"nativeSrc": "20164:152:11",
													"nodeType": "YulBlock",
													"src": "20164:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20181:1:11",
																		"nodeType": "YulLiteral",
																		"src": "20181:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20184:77:11",
																		"nodeType": "YulLiteral",
																		"src": "20184:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20174:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "20174:6:11"
																},
																"nativeSrc": "20174:88:11",
																"nodeType": "YulFunctionCall",
																"src": "20174:88:11"
															},
															"nativeSrc": "20174:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "20174:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20278:1:11",
																		"nodeType": "YulLiteral",
																		"src": "20278:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20281:4:11",
																		"nodeType": "YulLiteral",
																		"src": "20281:4:11",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20271:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "20271:6:11"
																},
																"nativeSrc": "20271:15:11",
																"nodeType": "YulFunctionCall",
																"src": "20271:15:11"
															},
															"nativeSrc": "20271:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "20271:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20302:1:11",
																		"nodeType": "YulLiteral",
																		"src": "20302:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20305:4:11",
																		"nodeType": "YulLiteral",
																		"src": "20305:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "20295:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "20295:6:11"
																},
																"nativeSrc": "20295:15:11",
																"nodeType": "YulFunctionCall",
																"src": "20295:15:11"
															},
															"nativeSrc": "20295:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "20295:15:11"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "20136:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "20136:180:11"
											},
											{
												"body": {
													"nativeSrc": "20380:40:11",
													"nodeType": "YulBlock",
													"src": "20380:40:11",
													"statements": [
														{
															"nativeSrc": "20391:22:11",
															"nodeType": "YulAssignment",
															"src": "20391:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20407:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "20407:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "20401:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "20401:5:11"
																},
																"nativeSrc": "20401:12:11",
																"nodeType": "YulFunctionCall",
																"src": "20401:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "20391:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "20391:6:11"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "20322:98:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20363:5:11",
														"nodeType": "YulTypedName",
														"src": "20363:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "20373:6:11",
														"nodeType": "YulTypedName",
														"src": "20373:6:11",
														"type": ""
													}
												],
												"src": "20322:98:11"
											},
											{
												"body": {
													"nativeSrc": "20521:73:11",
													"nodeType": "YulBlock",
													"src": "20521:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20538:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "20538:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "20543:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "20543:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20531:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "20531:6:11"
																},
																"nativeSrc": "20531:19:11",
																"nodeType": "YulFunctionCall",
																"src": "20531:19:11"
															},
															"nativeSrc": "20531:19:11",
															"nodeType": "YulExpressionStatement",
															"src": "20531:19:11"
														},
														{
															"nativeSrc": "20559:29:11",
															"nodeType": "YulAssignment",
															"src": "20559:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20578:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "20578:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20583:4:11",
																		"nodeType": "YulLiteral",
																		"src": "20583:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20574:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "20574:3:11"
																},
																"nativeSrc": "20574:14:11",
																"nodeType": "YulFunctionCall",
																"src": "20574:14:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "20559:11:11",
																	"nodeType": "YulIdentifier",
																	"src": "20559:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "20426:168:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20493:3:11",
														"nodeType": "YulTypedName",
														"src": "20493:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "20498:6:11",
														"nodeType": "YulTypedName",
														"src": "20498:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "20509:11:11",
														"nodeType": "YulTypedName",
														"src": "20509:11:11",
														"type": ""
													}
												],
												"src": "20426:168:11"
											},
											{
												"body": {
													"nativeSrc": "20690:283:11",
													"nodeType": "YulBlock",
													"src": "20690:283:11",
													"statements": [
														{
															"nativeSrc": "20700:52:11",
															"nodeType": "YulVariableDeclaration",
															"src": "20700:52:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20746:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "20746:5:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "20714:31:11",
																	"nodeType": "YulIdentifier",
																	"src": "20714:31:11"
																},
																"nativeSrc": "20714:38:11",
																"nodeType": "YulFunctionCall",
																"src": "20714:38:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "20704:6:11",
																	"nodeType": "YulTypedName",
																	"src": "20704:6:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "20761:77:11",
															"nodeType": "YulAssignment",
															"src": "20761:77:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20826:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "20826:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "20831:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "20831:6:11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "20768:57:11",
																	"nodeType": "YulIdentifier",
																	"src": "20768:57:11"
																},
																"nativeSrc": "20768:70:11",
																"nodeType": "YulFunctionCall",
																"src": "20768:70:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20761:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "20761:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "20886:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "20886:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20893:4:11",
																				"nodeType": "YulLiteral",
																				"src": "20893:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20882:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "20882:3:11"
																		},
																		"nativeSrc": "20882:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "20882:16:11"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "20900:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "20900:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "20905:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "20905:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "20847:34:11",
																	"nodeType": "YulIdentifier",
																	"src": "20847:34:11"
																},
																"nativeSrc": "20847:65:11",
																"nodeType": "YulFunctionCall",
																"src": "20847:65:11"
															},
															"nativeSrc": "20847:65:11",
															"nodeType": "YulExpressionStatement",
															"src": "20847:65:11"
														},
														{
															"nativeSrc": "20921:46:11",
															"nodeType": "YulAssignment",
															"src": "20921:46:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20932:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "20932:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "20959:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "20959:6:11"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "20937:21:11",
																			"nodeType": "YulIdentifier",
																			"src": "20937:21:11"
																		},
																		"nativeSrc": "20937:29:11",
																		"nodeType": "YulFunctionCall",
																		"src": "20937:29:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20928:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "20928:3:11"
																},
																"nativeSrc": "20928:39:11",
																"nodeType": "YulFunctionCall",
																"src": "20928:39:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20921:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "20921:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "20600:373:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20671:5:11",
														"nodeType": "YulTypedName",
														"src": "20671:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "20678:3:11",
														"nodeType": "YulTypedName",
														"src": "20678:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20686:3:11",
														"nodeType": "YulTypedName",
														"src": "20686:3:11",
														"type": ""
													}
												],
												"src": "20600:373:11"
											},
											{
												"body": {
													"nativeSrc": "21179:440:11",
													"nodeType": "YulBlock",
													"src": "21179:440:11",
													"statements": [
														{
															"nativeSrc": "21189:27:11",
															"nodeType": "YulAssignment",
															"src": "21189:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21201:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "21201:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21212:3:11",
																		"nodeType": "YulLiteral",
																		"src": "21212:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21197:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "21197:3:11"
																},
																"nativeSrc": "21197:19:11",
																"nodeType": "YulFunctionCall",
																"src": "21197:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21189:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "21189:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "21270:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "21270:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21283:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "21283:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21294:1:11",
																				"nodeType": "YulLiteral",
																				"src": "21294:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21279:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "21279:3:11"
																		},
																		"nativeSrc": "21279:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "21279:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "21226:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "21226:43:11"
																},
																"nativeSrc": "21226:71:11",
																"nodeType": "YulFunctionCall",
																"src": "21226:71:11"
															},
															"nativeSrc": "21226:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "21226:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "21351:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "21351:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21364:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "21364:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21375:2:11",
																				"nodeType": "YulLiteral",
																				"src": "21375:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21360:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "21360:3:11"
																		},
																		"nativeSrc": "21360:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "21360:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "21307:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "21307:43:11"
																},
																"nativeSrc": "21307:72:11",
																"nodeType": "YulFunctionCall",
																"src": "21307:72:11"
															},
															"nativeSrc": "21307:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "21307:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "21433:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "21433:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21446:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "21446:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21457:2:11",
																				"nodeType": "YulLiteral",
																				"src": "21457:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21442:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "21442:3:11"
																		},
																		"nativeSrc": "21442:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "21442:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "21389:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "21389:43:11"
																},
																"nativeSrc": "21389:72:11",
																"nodeType": "YulFunctionCall",
																"src": "21389:72:11"
															},
															"nativeSrc": "21389:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "21389:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21482:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "21482:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21493:2:11",
																				"nodeType": "YulLiteral",
																				"src": "21493:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21478:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "21478:3:11"
																		},
																		"nativeSrc": "21478:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "21478:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21502:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "21502:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21508:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "21508:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21498:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "21498:3:11"
																		},
																		"nativeSrc": "21498:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "21498:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21471:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "21471:6:11"
																},
																"nativeSrc": "21471:48:11",
																"nodeType": "YulFunctionCall",
																"src": "21471:48:11"
															},
															"nativeSrc": "21471:48:11",
															"nodeType": "YulExpressionStatement",
															"src": "21471:48:11"
														},
														{
															"nativeSrc": "21528:84:11",
															"nodeType": "YulAssignment",
															"src": "21528:84:11",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "21598:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "21598:6:11"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "21607:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "21607:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "21536:61:11",
																	"nodeType": "YulIdentifier",
																	"src": "21536:61:11"
																},
																"nativeSrc": "21536:76:11",
																"nodeType": "YulFunctionCall",
																"src": "21536:76:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21528:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "21528:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "20979:640:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21127:9:11",
														"nodeType": "YulTypedName",
														"src": "21127:9:11",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "21139:6:11",
														"nodeType": "YulTypedName",
														"src": "21139:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "21147:6:11",
														"nodeType": "YulTypedName",
														"src": "21147:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "21155:6:11",
														"nodeType": "YulTypedName",
														"src": "21155:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "21163:6:11",
														"nodeType": "YulTypedName",
														"src": "21163:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21174:4:11",
														"nodeType": "YulTypedName",
														"src": "21174:4:11",
														"type": ""
													}
												],
												"src": "20979:640:11"
											},
											{
												"body": {
													"nativeSrc": "21687:79:11",
													"nodeType": "YulBlock",
													"src": "21687:79:11",
													"statements": [
														{
															"nativeSrc": "21697:22:11",
															"nodeType": "YulAssignment",
															"src": "21697:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "21712:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "21712:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "21706:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "21706:5:11"
																},
																"nativeSrc": "21706:13:11",
																"nodeType": "YulFunctionCall",
																"src": "21706:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "21697:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "21697:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21754:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "21754:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "21728:25:11",
																	"nodeType": "YulIdentifier",
																	"src": "21728:25:11"
																},
																"nativeSrc": "21728:32:11",
																"nodeType": "YulFunctionCall",
																"src": "21728:32:11"
															},
															"nativeSrc": "21728:32:11",
															"nodeType": "YulExpressionStatement",
															"src": "21728:32:11"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nativeSrc": "21625:141:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "21665:6:11",
														"nodeType": "YulTypedName",
														"src": "21665:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "21673:3:11",
														"nodeType": "YulTypedName",
														"src": "21673:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "21681:5:11",
														"nodeType": "YulTypedName",
														"src": "21681:5:11",
														"type": ""
													}
												],
												"src": "21625:141:11"
											},
											{
												"body": {
													"nativeSrc": "21848:273:11",
													"nodeType": "YulBlock",
													"src": "21848:273:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "21894:83:11",
																"nodeType": "YulBlock",
																"src": "21894:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "21896:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "21896:77:11"
																			},
																			"nativeSrc": "21896:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "21896:79:11"
																		},
																		"nativeSrc": "21896:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "21896:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "21869:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "21869:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21878:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "21878:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21865:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "21865:3:11"
																		},
																		"nativeSrc": "21865:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "21865:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21890:2:11",
																		"nodeType": "YulLiteral",
																		"src": "21890:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "21861:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "21861:3:11"
																},
																"nativeSrc": "21861:32:11",
																"nodeType": "YulFunctionCall",
																"src": "21861:32:11"
															},
															"nativeSrc": "21858:119:11",
															"nodeType": "YulIf",
															"src": "21858:119:11"
														},
														{
															"nativeSrc": "21987:127:11",
															"nodeType": "YulBlock",
															"src": "21987:127:11",
															"statements": [
																{
																	"nativeSrc": "22002:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "22002:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "22016:1:11",
																		"nodeType": "YulLiteral",
																		"src": "22016:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "22006:6:11",
																			"nodeType": "YulTypedName",
																			"src": "22006:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "22031:73:11",
																	"nodeType": "YulAssignment",
																	"src": "22031:73:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "22076:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "22076:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "22087:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "22087:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "22072:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "22072:3:11"
																				},
																				"nativeSrc": "22072:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "22072:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "22096:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "22096:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nativeSrc": "22041:30:11",
																			"nodeType": "YulIdentifier",
																			"src": "22041:30:11"
																		},
																		"nativeSrc": "22041:63:11",
																		"nodeType": "YulFunctionCall",
																		"src": "22041:63:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "22031:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "22031:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "21772:349:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21818:9:11",
														"nodeType": "YulTypedName",
														"src": "21818:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "21829:7:11",
														"nodeType": "YulTypedName",
														"src": "21829:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "21841:6:11",
														"nodeType": "YulTypedName",
														"src": "21841:6:11",
														"type": ""
													}
												],
												"src": "21772:349:11"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approval to current owne\")\n\n        mstore(add(memPtr, 32), \"r\")\n\n    }\n\n    function abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve caller is not to\")\n\n        mstore(add(memPtr, 32), \"ken owner or approved for all\")\n\n    }\n\n    function abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 61)\n        store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: caller is not token owne\")\n\n        mstore(add(memPtr, 32), \"r or approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer from incorrect \")\n\n        mstore(add(memPtr, 32), \"owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: invalid token ID\")\n\n    }\n\n    function abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: address zero is not a va\")\n\n        mstore(add(memPtr, 32), \"lid owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve to caller\")\n\n    }\n\n    function abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to non ERC721Re\")\n\n        mstore(add(memPtr, 32), \"ceiver implementer\")\n\n    }\n\n    function abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100f55760003560e01c80636352211e11610097578063b2bdfa7b11610066578063b2bdfa7b14610282578063b88d4fde146102a0578063c87b56dd146102bc578063e985e9c5146102ec576100f5565b80636352211e146101e857806370a082311461021857806395d89b4114610248578063a22cb46514610266576100f5565b8063095ea7b3116100d3578063095ea7b31461017857806323b872dd1461019457806330e0789e146101b057806342842e0e146101cc576100f5565b806301ffc9a7146100fa57806306fdde031461012a578063081812fc14610148575b600080fd5b610114600480360381019061010f9190611509565b61031c565b6040516101219190611551565b60405180910390f35b6101326103fe565b60405161013f91906115fc565b60405180910390f35b610162600480360381019061015d9190611654565b610490565b60405161016f91906116c2565b60405180910390f35b610192600480360381019061018d9190611709565b6104d6565b005b6101ae60048036038101906101a99190611749565b6105ed565b005b6101ca60048036038101906101c59190611749565b61064d565b005b6101e660048036038101906101e19190611749565b6108d7565b005b61020260048036038101906101fd9190611654565b6108f7565b60405161020f91906116c2565b60405180910390f35b610232600480360381019061022d919061179c565b61097d565b60405161023f91906117d8565b60405180910390f35b610250610a34565b60405161025d91906115fc565b60405180910390f35b610280600480360381019061027b919061181f565b610ac6565b005b61028a610adc565b60405161029791906116c2565b60405180910390f35b6102ba60048036038101906102b59190611994565b610b00565b005b6102d660048036038101906102d19190611654565b610b62565b6040516102e391906115fc565b60405180910390f35b61030660048036038101906103019190611a17565b610bca565b6040516103139190611551565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103e757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103f757506103f682610c5e565b5b9050919050565b60606001805461040d90611a86565b80601f016020809104026020016040519081016040528092919081815260200182805461043990611a86565b80156104865780601f1061045b57610100808354040283529160200191610486565b820191906000526020600020905b81548152906001019060200180831161046957829003601f168201915b5050505050905090565b600061049b82610cc8565b6005600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104e1826108f7565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610551576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054890611b29565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610570610d13565b73ffffffffffffffffffffffffffffffffffffffff16148061059f575061059e81610599610d13565b610bca565b5b6105de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d590611bbb565b60405180910390fd5b6105e88383610d1b565b505050565b6105fe6105f8610d13565b82610dd4565b61063d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063490611c4d565b60405180910390fd5b61064883838361064d565b505050565b8273ffffffffffffffffffffffffffffffffffffffff1661066d826108f7565b73ffffffffffffffffffffffffffffffffffffffff16146106c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ba90611cdf565b60405180910390fd5b6106d08383836001610e69565b8273ffffffffffffffffffffffffffffffffffffffff166106f0826108f7565b73ffffffffffffffffffffffffffffffffffffffff1614610746576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073d90611cdf565b60405180910390fd5b6005600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506001600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46108d28383836001610e6f565b505050565b6108f283838360405180602001604052806000815250610b00565b505050565b60008061090383610e75565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610974576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096b90611d4b565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e490611ddd565b60405180910390fd5b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060028054610a4390611a86565b80601f0160208091040260200160405190810160405280929190818152602001828054610a6f90611a86565b8015610abc5780601f10610a9157610100808354040283529160200191610abc565b820191906000526020600020905b815481529060010190602001808311610a9f57829003601f168201915b5050505050905090565b610ad8610ad1610d13565b8383610eb2565b5050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610b11610b0b610d13565b83610dd4565b610b50576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4790611c4d565b60405180910390fd5b610b5c8484848461101e565b50505050565b6060610b6d82610cc8565b6000610b7761107a565b90506000815111610b975760405180602001604052806000815250610bc2565b80610ba184611091565b604051602001610bb2929190611e39565b6040516020818303038152906040525b915050919050565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610cd18161115f565b610d10576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0790611d4b565b60405180910390fd5b50565b600033905090565b816005600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610d8e836108f7565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610de0836108f7565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610e225750610e218185610bca565b5b80610e6057508373ffffffffffffffffffffffffffffffffffffffff16610e4884610490565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b50505050565b50505050565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f20576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f1790611ea9565b60405180910390fd5b80600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516110119190611551565b60405180910390a3505050565b61102984848461064d565b611035848484846111a0565b611074576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161106b90611f3b565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b6060600060016110a084611327565b01905060008167ffffffffffffffff8111156110bf576110be611869565b5b6040519080825280601f01601f1916602001820160405280156110f15781602001600182028036833780820191505090505b509050600082602001820190505b600115611154578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161114857611147611f5b565b5b049450600085036110ff575b819350505050919050565b60008073ffffffffffffffffffffffffffffffffffffffff1661118183610e75565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b60006111c18473ffffffffffffffffffffffffffffffffffffffff1661147a565b1561131a578373ffffffffffffffffffffffffffffffffffffffff1663150b7a026111ea610d13565b8786866040518563ffffffff1660e01b815260040161120c9493929190611fdf565b6020604051808303816000875af192505050801561124857506040513d601f19601f820116820180604052508101906112459190612040565b60015b6112ca573d8060008114611278576040519150601f19603f3d011682016040523d82523d6000602084013e61127d565b606091505b5060008151036112c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112b990611f3b565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161491505061131f565b600190505b949350505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611385577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161137b5761137a611f5b565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106113c2576d04ee2d6d415b85acef810000000083816113b8576113b7611f5b565b5b0492506020810190505b662386f26fc1000083106113f157662386f26fc1000083816113e7576113e6611f5b565b5b0492506010810190505b6305f5e100831061141a576305f5e10083816114105761140f611f5b565b5b0492506008810190505b612710831061143f57612710838161143557611434611f5b565b5b0492506004810190505b60648310611462576064838161145857611457611f5b565b5b0492506002810190505b600a8310611471576001810190505b80915050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6114e6816114b1565b81146114f157600080fd5b50565b600081359050611503816114dd565b92915050565b60006020828403121561151f5761151e6114a7565b5b600061152d848285016114f4565b91505092915050565b60008115159050919050565b61154b81611536565b82525050565b60006020820190506115666000830184611542565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156115a657808201518184015260208101905061158b565b60008484015250505050565b6000601f19601f8301169050919050565b60006115ce8261156c565b6115d88185611577565b93506115e8818560208601611588565b6115f1816115b2565b840191505092915050565b6000602082019050818103600083015261161681846115c3565b905092915050565b6000819050919050565b6116318161161e565b811461163c57600080fd5b50565b60008135905061164e81611628565b92915050565b60006020828403121561166a576116696114a7565b5b60006116788482850161163f565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006116ac82611681565b9050919050565b6116bc816116a1565b82525050565b60006020820190506116d760008301846116b3565b92915050565b6116e6816116a1565b81146116f157600080fd5b50565b600081359050611703816116dd565b92915050565b600080604083850312156117205761171f6114a7565b5b600061172e858286016116f4565b925050602061173f8582860161163f565b9150509250929050565b600080600060608486031215611762576117616114a7565b5b6000611770868287016116f4565b9350506020611781868287016116f4565b92505060406117928682870161163f565b9150509250925092565b6000602082840312156117b2576117b16114a7565b5b60006117c0848285016116f4565b91505092915050565b6117d28161161e565b82525050565b60006020820190506117ed60008301846117c9565b92915050565b6117fc81611536565b811461180757600080fd5b50565b600081359050611819816117f3565b92915050565b60008060408385031215611836576118356114a7565b5b6000611844858286016116f4565b92505060206118558582860161180a565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6118a1826115b2565b810181811067ffffffffffffffff821117156118c0576118bf611869565b5b80604052505050565b60006118d361149d565b90506118df8282611898565b919050565b600067ffffffffffffffff8211156118ff576118fe611869565b5b611908826115b2565b9050602081019050919050565b82818337600083830152505050565b6000611937611932846118e4565b6118c9565b90508281526020810184848401111561195357611952611864565b5b61195e848285611915565b509392505050565b600082601f83011261197b5761197a61185f565b5b813561198b848260208601611924565b91505092915050565b600080600080608085870312156119ae576119ad6114a7565b5b60006119bc878288016116f4565b94505060206119cd878288016116f4565b93505060406119de8782880161163f565b925050606085013567ffffffffffffffff8111156119ff576119fe6114ac565b5b611a0b87828801611966565b91505092959194509250565b60008060408385031215611a2e57611a2d6114a7565b5b6000611a3c858286016116f4565b9250506020611a4d858286016116f4565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611a9e57607f821691505b602082108103611ab157611ab0611a57565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b6000611b13602183611577565b9150611b1e82611ab7565b604082019050919050565b60006020820190508181036000830152611b4281611b06565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b6000611ba5603d83611577565b9150611bb082611b49565b604082019050919050565b60006020820190508181036000830152611bd481611b98565b9050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b6000611c37602d83611577565b9150611c4282611bdb565b604082019050919050565b60006020820190508181036000830152611c6681611c2a565b9050919050565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b6000611cc9602583611577565b9150611cd482611c6d565b604082019050919050565b60006020820190508181036000830152611cf881611cbc565b9050919050565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b6000611d35601883611577565b9150611d4082611cff565b602082019050919050565b60006020820190508181036000830152611d6481611d28565b9050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b6000611dc7602983611577565b9150611dd282611d6b565b604082019050919050565b60006020820190508181036000830152611df681611dba565b9050919050565b600081905092915050565b6000611e138261156c565b611e1d8185611dfd565b9350611e2d818560208601611588565b80840191505092915050565b6000611e458285611e08565b9150611e518284611e08565b91508190509392505050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b6000611e93601983611577565b9150611e9e82611e5d565b602082019050919050565b60006020820190508181036000830152611ec281611e86565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b6000611f25603283611577565b9150611f3082611ec9565b604082019050919050565b60006020820190508181036000830152611f5481611f18565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600081519050919050565b600082825260208201905092915050565b6000611fb182611f8a565b611fbb8185611f95565b9350611fcb818560208601611588565b611fd4816115b2565b840191505092915050565b6000608082019050611ff460008301876116b3565b61200160208301866116b3565b61200e60408301856117c9565b81810360608301526120208184611fa6565b905095945050505050565b60008151905061203a816114dd565b92915050565b600060208284031215612056576120556114a7565b5b60006120648482850161202b565b9150509291505056fea2646970667358221220fa4d41d2e9e8e3a0392ae37cba06c39f5f090e06c232b82c5f4df0064d4f86fc64736f6c63430008150033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xB2BDFA7B GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xB2BDFA7B EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2EC JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x266 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x30E0789E EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1CC JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x148 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x114 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x1509 JUMP JUMPDEST PUSH2 0x31C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x1551 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x132 PUSH2 0x3FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x15FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x1654 JUMP JUMPDEST PUSH2 0x490 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x16C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x1709 JUMP JUMPDEST PUSH2 0x4D6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0x1749 JUMP JUMPDEST PUSH2 0x5ED JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C5 SWAP2 SWAP1 PUSH2 0x1749 JUMP JUMPDEST PUSH2 0x64D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E1 SWAP2 SWAP1 PUSH2 0x1749 JUMP JUMPDEST PUSH2 0x8D7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x202 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x1654 JUMP JUMPDEST PUSH2 0x8F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20F SWAP2 SWAP1 PUSH2 0x16C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x232 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22D SWAP2 SWAP1 PUSH2 0x179C JUMP JUMPDEST PUSH2 0x97D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x17D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x250 PUSH2 0xA34 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25D SWAP2 SWAP1 PUSH2 0x15FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x280 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27B SWAP2 SWAP1 PUSH2 0x181F JUMP JUMPDEST PUSH2 0xAC6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28A PUSH2 0xADC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x16C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B5 SWAP2 SWAP1 PUSH2 0x1994 JUMP JUMPDEST PUSH2 0xB00 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D1 SWAP2 SWAP1 PUSH2 0x1654 JUMP JUMPDEST PUSH2 0xB62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E3 SWAP2 SWAP1 PUSH2 0x15FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x306 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x301 SWAP2 SWAP1 PUSH2 0x1A17 JUMP JUMPDEST PUSH2 0xBCA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x313 SWAP2 SWAP1 PUSH2 0x1551 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3E7 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x3F7 JUMPI POP PUSH2 0x3F6 DUP3 PUSH2 0xC5E JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x40D SWAP1 PUSH2 0x1A86 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x439 SWAP1 PUSH2 0x1A86 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x486 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x45B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x486 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x469 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49B DUP3 PUSH2 0xCC8 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E1 DUP3 PUSH2 0x8F7 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x551 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x548 SWAP1 PUSH2 0x1B29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x570 PUSH2 0xD13 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x59F JUMPI POP PUSH2 0x59E DUP2 PUSH2 0x599 PUSH2 0xD13 JUMP JUMPDEST PUSH2 0xBCA JUMP JUMPDEST JUMPDEST PUSH2 0x5DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D5 SWAP1 PUSH2 0x1BBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5E8 DUP4 DUP4 PUSH2 0xD1B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x5FE PUSH2 0x5F8 PUSH2 0xD13 JUMP JUMPDEST DUP3 PUSH2 0xDD4 JUMP JUMPDEST PUSH2 0x63D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x634 SWAP1 PUSH2 0x1C4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x648 DUP4 DUP4 DUP4 PUSH2 0x64D JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x66D DUP3 PUSH2 0x8F7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6BA SWAP1 PUSH2 0x1CDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6D0 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xE69 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x6F0 DUP3 PUSH2 0x8F7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x746 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x73D SWAP1 PUSH2 0x1CDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x8D2 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xE6F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x8F2 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xB00 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x903 DUP4 PUSH2 0xE75 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x974 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x96B SWAP1 PUSH2 0x1D4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9ED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E4 SWAP1 PUSH2 0x1DDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0xA43 SWAP1 PUSH2 0x1A86 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA6F SWAP1 PUSH2 0x1A86 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xABC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA91 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xABC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA9F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xAD8 PUSH2 0xAD1 PUSH2 0xD13 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xEB2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xB11 PUSH2 0xB0B PUSH2 0xD13 JUMP JUMPDEST DUP4 PUSH2 0xDD4 JUMP JUMPDEST PUSH2 0xB50 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB47 SWAP1 PUSH2 0x1C4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB5C DUP5 DUP5 DUP5 DUP5 PUSH2 0x101E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xB6D DUP3 PUSH2 0xCC8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB77 PUSH2 0x107A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0xB97 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xBC2 JUMP JUMPDEST DUP1 PUSH2 0xBA1 DUP5 PUSH2 0x1091 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xBB2 SWAP3 SWAP2 SWAP1 PUSH2 0x1E39 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD1 DUP2 PUSH2 0x115F JUMP JUMPDEST PUSH2 0xD10 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD07 SWAP1 PUSH2 0x1D4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD8E DUP4 PUSH2 0x8F7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xDE0 DUP4 PUSH2 0x8F7 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xE22 JUMPI POP PUSH2 0xE21 DUP2 DUP6 PUSH2 0xBCA JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xE60 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE48 DUP5 PUSH2 0x490 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF20 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF17 SWAP1 PUSH2 0x1EA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1011 SWAP2 SWAP1 PUSH2 0x1551 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1029 DUP5 DUP5 DUP5 PUSH2 0x64D JUMP JUMPDEST PUSH2 0x1035 DUP5 DUP5 DUP5 DUP5 PUSH2 0x11A0 JUMP JUMPDEST PUSH2 0x1074 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x106B SWAP1 PUSH2 0x1F3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x10A0 DUP5 PUSH2 0x1327 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10BF JUMPI PUSH2 0x10BE PUSH2 0x1869 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10F1 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1154 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1148 JUMPI PUSH2 0x1147 PUSH2 0x1F5B JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x10FF JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1181 DUP4 PUSH2 0xE75 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11C1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x147A JUMP JUMPDEST ISZERO PUSH2 0x131A JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x11EA PUSH2 0xD13 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x120C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1FDF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1248 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1245 SWAP2 SWAP1 PUSH2 0x2040 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x12CA JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1278 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x127D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x12C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12B9 SWAP1 PUSH2 0x1F3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x131F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1385 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x137B JUMPI PUSH2 0x137A PUSH2 0x1F5B JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x13C2 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x13B8 JUMPI PUSH2 0x13B7 PUSH2 0x1F5B JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x13F1 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x13E7 JUMPI PUSH2 0x13E6 PUSH2 0x1F5B JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x141A JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1410 JUMPI PUSH2 0x140F PUSH2 0x1F5B JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x143F JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1435 JUMPI PUSH2 0x1434 PUSH2 0x1F5B JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1462 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1458 JUMPI PUSH2 0x1457 PUSH2 0x1F5B JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1471 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14E6 DUP2 PUSH2 0x14B1 JUMP JUMPDEST DUP2 EQ PUSH2 0x14F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1503 DUP2 PUSH2 0x14DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x151F JUMPI PUSH2 0x151E PUSH2 0x14A7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x152D DUP5 DUP3 DUP6 ADD PUSH2 0x14F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x154B DUP2 PUSH2 0x1536 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1566 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1542 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15A6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x158B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15CE DUP3 PUSH2 0x156C JUMP JUMPDEST PUSH2 0x15D8 DUP2 DUP6 PUSH2 0x1577 JUMP JUMPDEST SWAP4 POP PUSH2 0x15E8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1588 JUMP JUMPDEST PUSH2 0x15F1 DUP2 PUSH2 0x15B2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1616 DUP2 DUP5 PUSH2 0x15C3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1631 DUP2 PUSH2 0x161E JUMP JUMPDEST DUP2 EQ PUSH2 0x163C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x164E DUP2 PUSH2 0x1628 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x166A JUMPI PUSH2 0x1669 PUSH2 0x14A7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1678 DUP5 DUP3 DUP6 ADD PUSH2 0x163F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16AC DUP3 PUSH2 0x1681 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16BC DUP2 PUSH2 0x16A1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16D7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16B3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16E6 DUP2 PUSH2 0x16A1 JUMP JUMPDEST DUP2 EQ PUSH2 0x16F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1703 DUP2 PUSH2 0x16DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1720 JUMPI PUSH2 0x171F PUSH2 0x14A7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x172E DUP6 DUP3 DUP7 ADD PUSH2 0x16F4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x173F DUP6 DUP3 DUP7 ADD PUSH2 0x163F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1762 JUMPI PUSH2 0x1761 PUSH2 0x14A7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1770 DUP7 DUP3 DUP8 ADD PUSH2 0x16F4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1781 DUP7 DUP3 DUP8 ADD PUSH2 0x16F4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1792 DUP7 DUP3 DUP8 ADD PUSH2 0x163F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17B2 JUMPI PUSH2 0x17B1 PUSH2 0x14A7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17C0 DUP5 DUP3 DUP6 ADD PUSH2 0x16F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17D2 DUP2 PUSH2 0x161E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17ED PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x17C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17FC DUP2 PUSH2 0x1536 JUMP JUMPDEST DUP2 EQ PUSH2 0x1807 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1819 DUP2 PUSH2 0x17F3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1836 JUMPI PUSH2 0x1835 PUSH2 0x14A7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1844 DUP6 DUP3 DUP7 ADD PUSH2 0x16F4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1855 DUP6 DUP3 DUP7 ADD PUSH2 0x180A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x18A1 DUP3 PUSH2 0x15B2 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x18C0 JUMPI PUSH2 0x18BF PUSH2 0x1869 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18D3 PUSH2 0x149D JUMP JUMPDEST SWAP1 POP PUSH2 0x18DF DUP3 DUP3 PUSH2 0x1898 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x18FF JUMPI PUSH2 0x18FE PUSH2 0x1869 JUMP JUMPDEST JUMPDEST PUSH2 0x1908 DUP3 PUSH2 0x15B2 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1937 PUSH2 0x1932 DUP5 PUSH2 0x18E4 JUMP JUMPDEST PUSH2 0x18C9 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1953 JUMPI PUSH2 0x1952 PUSH2 0x1864 JUMP JUMPDEST JUMPDEST PUSH2 0x195E DUP5 DUP3 DUP6 PUSH2 0x1915 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x197B JUMPI PUSH2 0x197A PUSH2 0x185F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x198B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1924 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x19AE JUMPI PUSH2 0x19AD PUSH2 0x14A7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19BC DUP8 DUP3 DUP9 ADD PUSH2 0x16F4 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x19CD DUP8 DUP3 DUP9 ADD PUSH2 0x16F4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x19DE DUP8 DUP3 DUP9 ADD PUSH2 0x163F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19FF JUMPI PUSH2 0x19FE PUSH2 0x14AC JUMP JUMPDEST JUMPDEST PUSH2 0x1A0B DUP8 DUP3 DUP9 ADD PUSH2 0x1966 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A2E JUMPI PUSH2 0x1A2D PUSH2 0x14A7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A3C DUP6 DUP3 DUP7 ADD PUSH2 0x16F4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A4D DUP6 DUP3 DUP7 ADD PUSH2 0x16F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1A9E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1AB1 JUMPI PUSH2 0x1AB0 PUSH2 0x1A57 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B13 PUSH1 0x21 DUP4 PUSH2 0x1577 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B1E DUP3 PUSH2 0x1AB7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B42 DUP2 PUSH2 0x1B06 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BA5 PUSH1 0x3D DUP4 PUSH2 0x1577 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BB0 DUP3 PUSH2 0x1B49 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BD4 DUP2 PUSH2 0x1B98 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C37 PUSH1 0x2D DUP4 PUSH2 0x1577 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C42 DUP3 PUSH2 0x1BDB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C66 DUP2 PUSH2 0x1C2A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CC9 PUSH1 0x25 DUP4 PUSH2 0x1577 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CD4 DUP3 PUSH2 0x1C6D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CF8 DUP2 PUSH2 0x1CBC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D35 PUSH1 0x18 DUP4 PUSH2 0x1577 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D40 DUP3 PUSH2 0x1CFF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D64 DUP2 PUSH2 0x1D28 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DC7 PUSH1 0x29 DUP4 PUSH2 0x1577 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DD2 DUP3 PUSH2 0x1D6B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DF6 DUP2 PUSH2 0x1DBA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E13 DUP3 PUSH2 0x156C JUMP JUMPDEST PUSH2 0x1E1D DUP2 DUP6 PUSH2 0x1DFD JUMP JUMPDEST SWAP4 POP PUSH2 0x1E2D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1588 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E45 DUP3 DUP6 PUSH2 0x1E08 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E51 DUP3 DUP5 PUSH2 0x1E08 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E93 PUSH1 0x19 DUP4 PUSH2 0x1577 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E9E DUP3 PUSH2 0x1E5D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EC2 DUP2 PUSH2 0x1E86 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F25 PUSH1 0x32 DUP4 PUSH2 0x1577 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F30 DUP3 PUSH2 0x1EC9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F54 DUP2 PUSH2 0x1F18 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FB1 DUP3 PUSH2 0x1F8A JUMP JUMPDEST PUSH2 0x1FBB DUP2 DUP6 PUSH2 0x1F95 JUMP JUMPDEST SWAP4 POP PUSH2 0x1FCB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1588 JUMP JUMPDEST PUSH2 0x1FD4 DUP2 PUSH2 0x15B2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1FF4 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x16B3 JUMP JUMPDEST PUSH2 0x2001 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x16B3 JUMP JUMPDEST PUSH2 0x200E PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x17C9 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2020 DUP2 DUP5 PUSH2 0x1FA6 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x203A DUP2 PUSH2 0x14DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2056 JUMPI PUSH2 0x2055 PUSH2 0x14A7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2064 DUP5 DUP3 DUP6 ADD PUSH2 0x202B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STATICCALL 0x4D COINBASE 0xD2 0xE9 0xE8 0xE3 LOG0 CODECOPY 0x2A 0xE3 PUSH29 0xBA06C39F5F090E06C232B82C5F4DF0064D4F86FC64736F6C6343000815 STOP CALLER ",
							"sourceMap": "628:16557:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1757:300;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2658:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4122:167;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3655:406;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4799:296;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;11444:1196;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5161:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2377:219;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2116:204;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2820:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4356:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;757:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5376:276;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2988;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4575:162;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1757:300;1859:4;1909:25;1894:40;;;:11;:40;;;;:104;;;;1965:33;1950:48;;;:11;:48;;;;1894:104;:156;;;;2014:36;2038:11;2014:23;:36::i;:::-;1894:156;1875:175;;1757:300;;;:::o;2658:98::-;2712:13;2744:5;2737:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2658:98;:::o;4122:167::-;4198:7;4217:23;4232:7;4217:14;:23::i;:::-;4258:15;:24;4274:7;4258:24;;;;;;;;;;;;;;;;;;;;;4251:31;;4122:167;;;:::o;3655:406::-;3735:13;3751:23;3766:7;3751:14;:23::i;:::-;3735:39;;3798:5;3792:11;;:2;:11;;;3784:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3889:5;3873:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3898:37;3915:5;3922:12;:10;:12::i;:::-;3898:16;:37::i;:::-;3873:62;3852:170;;;;;;;;;;;;:::i;:::-;;;;;;;;;4033:21;4042:2;4046:7;4033:8;:21::i;:::-;3725:336;3655:406;;:::o;4799:296::-;4958:41;4977:12;:10;:12::i;:::-;4991:7;4958:18;:41::i;:::-;4950:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;5060:28;5070:4;5076:2;5080:7;5060:9;:28::i;:::-;4799:296;;;:::o;11444:1196::-;11559:4;11532:31;;:23;11547:7;11532:14;:23::i;:::-;:31;;;11524:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11693:42;11714:4;11720:2;11724:7;11733:1;11693:20;:42::i;:::-;11862:4;11835:31;;:23;11850:7;11835:14;:23::i;:::-;:31;;;11827:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11977:15;:24;11993:7;11977:24;;;;;;;;;;;;11970:31;;;;;;;;;;;12464:1;12445:9;:15;12455:4;12445:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;12496:1;12479:9;:13;12489:2;12479:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;12536:2;12517:7;:16;12525:7;12517:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;12573:7;12569:2;12554:27;;12563:4;12554:27;;;;;;;;;;;;12592:41;12612:4;12618:2;12622:7;12631:1;12592:19;:41::i;:::-;11444:1196;;;:::o;5161:149::-;5264:39;5281:4;5287:2;5291:7;5264:39;;;;;;;;;;;;:16;:39::i;:::-;5161:149;;;:::o;2377:219::-;2449:7;2468:13;2484:17;2493:7;2484:8;:17::i;:::-;2468:33;;2536:1;2519:19;;:5;:19;;;2511:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2584:5;2577:12;;;2377:219;;;:::o;2116:204::-;2188:7;2232:1;2215:19;;:5;:19;;;2207:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2297:9;:16;2307:5;2297:16;;;;;;;;;;;;;;;;2290:23;;2116:204;;;:::o;2820:102::-;2876:13;2908:7;2901:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2820:102;:::o;4356:153::-;4450:52;4469:12;:10;:12::i;:::-;4483:8;4493;4450:18;:52::i;:::-;4356:153;;:::o;757:21::-;;;;;;;;;;;;:::o;5376:276::-;5506:41;5525:12;:10;:12::i;:::-;5539:7;5506:18;:41::i;:::-;5498:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;5607:38;5621:4;5627:2;5631:7;5640:4;5607:13;:38::i;:::-;5376:276;;;;:::o;2988:::-;3061:13;3086:23;3101:7;3086:14;:23::i;:::-;3120:21;3144:10;:8;:10::i;:::-;3120:34;;3195:1;3177:7;3171:21;:25;:86;;;;;;;;;;;;;;;;;3223:7;3232:18;:7;:16;:18::i;:::-;3206:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3171:86;3164:93;;;2988:276;;;:::o;4575:162::-;4672:4;4695:18;:25;4714:5;4695:25;;;;;;;;;;;;;;;:35;4721:8;4695:35;;;;;;;;;;;;;;;;;;;;;;;;;4688:42;;4575:162;;;;:::o;829:155:7:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;13420:133:0:-;13501:16;13509:7;13501;:16::i;:::-;13493:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;13420:133;:::o;640:96:5:-;693:7;719:10;712:17;;640:96;:::o;12752:171:0:-;12853:2;12826:15;:24;12842:7;12826:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;12908:7;12904:2;12870:46;;12879:23;12894:7;12879:14;:23::i;:::-;12870:46;;;;;;;;;;;;12752:171;;:::o;7591:261::-;7684:4;7700:13;7716:23;7731:7;7716:14;:23::i;:::-;7700:39;;7768:5;7757:16;;:7;:16;;;:52;;;;7777:32;7794:5;7801:7;7777:16;:32::i;:::-;7757:52;:87;;;;7837:7;7813:31;;:20;7825:7;7813:11;:20::i;:::-;:31;;;7757:87;7749:96;;;7591:261;;;;:::o;15652:116::-;;;;;:::o;16474:115::-;;;;;:::o;6889:::-;6955:7;6981;:16;6989:7;6981:16;;;;;;;;;;;;;;;;;;;;;6974:23;;6889:115;;;:::o;13059:277::-;13179:8;13170:17;;:5;:17;;;13162:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;13265:8;13227:18;:25;13246:5;13227:25;;;;;;;;;;;;;;;:35;13253:8;13227:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13310:8;13288:41;;13303:5;13288:41;;;13320:8;13288:41;;;;;;:::i;:::-;;;;;;;;13059:277;;;:::o;6513:267::-;6625:28;6635:4;6641:2;6645:7;6625:9;:28::i;:::-;6671:47;6694:4;6700:2;6704:7;6713:4;6671:22;:47::i;:::-;6663:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;6513:267;;;;:::o;3506:92::-;3557:13;3582:9;;;;;;;;;;;;;;3506:92;:::o;447:696:6:-;503:13;552:14;589:1;569:17;580:5;569:10;:17::i;:::-;:21;552:38;;604:20;638:6;627:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;604:41;;659:11;785:6;781:2;777:15;769:6;765:28;758:35;;820:280;827:4;820:280;;;851:5;;;;;;;;990:8;985:2;978:5;974:14;969:30;964:3;956:44;1044:2;1035:11;;;;;;:::i;:::-;;;;;1077:1;1068:5;:10;820:280;1064:21;820:280;1120:6;1113:13;;;;;447:696;;;:::o;7307:126:0:-;7372:4;7424:1;7395:31;;:17;7404:7;7395:8;:17::i;:::-;:31;;;;7388:38;;7307:126;;;:::o;14105:831::-;14254:4;14274:15;:2;:13;;;:15::i;:::-;14270:660;;;14325:2;14309:36;;;14346:12;:10;:12::i;:::-;14360:4;14366:7;14375:4;14309:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14305:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14564:1;14547:6;:13;:18;14543:321;;14589:60;;;;;;;;;;:::i;:::-;;;;;;;;14543:321;14816:6;14810:13;14801:6;14797:2;14793:15;14786:38;14305:573;14440:41;;;14430:51;;;:6;:51;;;;14423:58;;;;;14270:660;14915:4;14908:11;;14105:831;;;;;;;:::o;10139:916:9:-;10192:7;10211:14;10228:1;10211:18;;10276:8;10267:5;:17;10263:103;;10313:8;10304:17;;;;;;:::i;:::-;;;;;10349:2;10339:12;;;;10263:103;10392:8;10383:5;:17;10379:103;;10429:8;10420:17;;;;;;:::i;:::-;;;;;10465:2;10455:12;;;;10379:103;10508:8;10499:5;:17;10495:103;;10545:8;10536:17;;;;;;:::i;:::-;;;;;10581:2;10571:12;;;;10495:103;10624:7;10615:5;:16;10611:100;;10660:7;10651:16;;;;;;:::i;:::-;;;;;10695:1;10685:11;;;;10611:100;10737:7;10728:5;:16;10724:100;;10773:7;10764:16;;;;;;:::i;:::-;;;;;10808:1;10798:11;;;;10724:100;10850:7;10841:5;:16;10837:100;;10886:7;10877:16;;;;;;:::i;:::-;;;;;10921:1;10911:11;;;;10837:100;10963:7;10954:5;:16;10950:66;;11000:1;10990:11;;;;10950:66;11042:6;11035:13;;;10139:916;;;:::o;1412:320:4:-;1472:4;1724:1;1702:7;:19;;;:23;1695:30;;1412:320;;;:::o;7:75:11:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:122::-;3016:24;3034:5;3016:24;:::i;:::-;3009:5;3006:35;2996:63;;3055:1;3052;3045:12;2996:63;2943:122;:::o;3071:139::-;3117:5;3155:6;3142:20;3133:29;;3171:33;3198:5;3171:33;:::i;:::-;3071:139;;;;:::o;3216:329::-;3275:6;3324:2;3312:9;3303:7;3299:23;3295:32;3292:119;;;3330:79;;:::i;:::-;3292:119;3450:1;3475:53;3520:7;3511:6;3500:9;3496:22;3475:53;:::i;:::-;3465:63;;3421:117;3216:329;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:619::-;4967:6;4975;4983;5032:2;5020:9;5011:7;5007:23;5003:32;5000:119;;;5038:79;;:::i;:::-;5000:119;5158:1;5183:53;5228:7;5219:6;5208:9;5204:22;5183:53;:::i;:::-;5173:63;;5129:117;5285:2;5311:53;5356:7;5347:6;5336:9;5332:22;5311:53;:::i;:::-;5301:63;;5256:118;5413:2;5439:53;5484:7;5475:6;5464:9;5460:22;5439:53;:::i;:::-;5429:63;;5384:118;4890:619;;;;;:::o;5515:329::-;5574:6;5623:2;5611:9;5602:7;5598:23;5594:32;5591:119;;;5629:79;;:::i;:::-;5591:119;5749:1;5774:53;5819:7;5810:6;5799:9;5795:22;5774:53;:::i;:::-;5764:63;;5720:117;5515:329;;;;:::o;5850:118::-;5937:24;5955:5;5937:24;:::i;:::-;5932:3;5925:37;5850:118;;:::o;5974:222::-;6067:4;6105:2;6094:9;6090:18;6082:26;;6118:71;6186:1;6175:9;6171:17;6162:6;6118:71;:::i;:::-;5974:222;;;;:::o;6202:116::-;6272:21;6287:5;6272:21;:::i;:::-;6265:5;6262:32;6252:60;;6308:1;6305;6298:12;6252:60;6202:116;:::o;6324:133::-;6367:5;6405:6;6392:20;6383:29;;6421:30;6445:5;6421:30;:::i;:::-;6324:133;;;;:::o;6463:468::-;6528:6;6536;6585:2;6573:9;6564:7;6560:23;6556:32;6553:119;;;6591:79;;:::i;:::-;6553:119;6711:1;6736:53;6781:7;6772:6;6761:9;6757:22;6736:53;:::i;:::-;6726:63;;6682:117;6838:2;6864:50;6906:7;6897:6;6886:9;6882:22;6864:50;:::i;:::-;6854:60;;6809:115;6463:468;;;;;:::o;6937:117::-;7046:1;7043;7036:12;7060:117;7169:1;7166;7159:12;7183:180;7231:77;7228:1;7221:88;7328:4;7325:1;7318:15;7352:4;7349:1;7342:15;7369:281;7452:27;7474:4;7452:27;:::i;:::-;7444:6;7440:40;7582:6;7570:10;7567:22;7546:18;7534:10;7531:34;7528:62;7525:88;;;7593:18;;:::i;:::-;7525:88;7633:10;7629:2;7622:22;7412:238;7369:281;;:::o;7656:129::-;7690:6;7717:20;;:::i;:::-;7707:30;;7746:33;7774:4;7766:6;7746:33;:::i;:::-;7656:129;;;:::o;7791:307::-;7852:4;7942:18;7934:6;7931:30;7928:56;;;7964:18;;:::i;:::-;7928:56;8002:29;8024:6;8002:29;:::i;:::-;7994:37;;8086:4;8080;8076:15;8068:23;;7791:307;;;:::o;8104:146::-;8201:6;8196:3;8191;8178:30;8242:1;8233:6;8228:3;8224:16;8217:27;8104:146;;;:::o;8256:423::-;8333:5;8358:65;8374:48;8415:6;8374:48;:::i;:::-;8358:65;:::i;:::-;8349:74;;8446:6;8439:5;8432:21;8484:4;8477:5;8473:16;8522:3;8513:6;8508:3;8504:16;8501:25;8498:112;;;8529:79;;:::i;:::-;8498:112;8619:54;8666:6;8661:3;8656;8619:54;:::i;:::-;8339:340;8256:423;;;;;:::o;8698:338::-;8753:5;8802:3;8795:4;8787:6;8783:17;8779:27;8769:122;;8810:79;;:::i;:::-;8769:122;8927:6;8914:20;8952:78;9026:3;9018:6;9011:4;9003:6;8999:17;8952:78;:::i;:::-;8943:87;;8759:277;8698:338;;;;:::o;9042:943::-;9137:6;9145;9153;9161;9210:3;9198:9;9189:7;9185:23;9181:33;9178:120;;;9217:79;;:::i;:::-;9178:120;9337:1;9362:53;9407:7;9398:6;9387:9;9383:22;9362:53;:::i;:::-;9352:63;;9308:117;9464:2;9490:53;9535:7;9526:6;9515:9;9511:22;9490:53;:::i;:::-;9480:63;;9435:118;9592:2;9618:53;9663:7;9654:6;9643:9;9639:22;9618:53;:::i;:::-;9608:63;;9563:118;9748:2;9737:9;9733:18;9720:32;9779:18;9771:6;9768:30;9765:117;;;9801:79;;:::i;:::-;9765:117;9906:62;9960:7;9951:6;9940:9;9936:22;9906:62;:::i;:::-;9896:72;;9691:287;9042:943;;;;;;;:::o;9991:474::-;10059:6;10067;10116:2;10104:9;10095:7;10091:23;10087:32;10084:119;;;10122:79;;:::i;:::-;10084:119;10242:1;10267:53;10312:7;10303:6;10292:9;10288:22;10267:53;:::i;:::-;10257:63;;10213:117;10369:2;10395:53;10440:7;10431:6;10420:9;10416:22;10395:53;:::i;:::-;10385:63;;10340:118;9991:474;;;;;:::o;10471:180::-;10519:77;10516:1;10509:88;10616:4;10613:1;10606:15;10640:4;10637:1;10630:15;10657:320;10701:6;10738:1;10732:4;10728:12;10718:22;;10785:1;10779:4;10775:12;10806:18;10796:81;;10862:4;10854:6;10850:17;10840:27;;10796:81;10924:2;10916:6;10913:14;10893:18;10890:38;10887:84;;10943:18;;:::i;:::-;10887:84;10708:269;10657:320;;;:::o;10983:220::-;11123:34;11119:1;11111:6;11107:14;11100:58;11192:3;11187:2;11179:6;11175:15;11168:28;10983:220;:::o;11209:366::-;11351:3;11372:67;11436:2;11431:3;11372:67;:::i;:::-;11365:74;;11448:93;11537:3;11448:93;:::i;:::-;11566:2;11561:3;11557:12;11550:19;;11209:366;;;:::o;11581:419::-;11747:4;11785:2;11774:9;11770:18;11762:26;;11834:9;11828:4;11824:20;11820:1;11809:9;11805:17;11798:47;11862:131;11988:4;11862:131;:::i;:::-;11854:139;;11581:419;;;:::o;12006:248::-;12146:34;12142:1;12134:6;12130:14;12123:58;12215:31;12210:2;12202:6;12198:15;12191:56;12006:248;:::o;12260:366::-;12402:3;12423:67;12487:2;12482:3;12423:67;:::i;:::-;12416:74;;12499:93;12588:3;12499:93;:::i;:::-;12617:2;12612:3;12608:12;12601:19;;12260:366;;;:::o;12632:419::-;12798:4;12836:2;12825:9;12821:18;12813:26;;12885:9;12879:4;12875:20;12871:1;12860:9;12856:17;12849:47;12913:131;13039:4;12913:131;:::i;:::-;12905:139;;12632:419;;;:::o;13057:232::-;13197:34;13193:1;13185:6;13181:14;13174:58;13266:15;13261:2;13253:6;13249:15;13242:40;13057:232;:::o;13295:366::-;13437:3;13458:67;13522:2;13517:3;13458:67;:::i;:::-;13451:74;;13534:93;13623:3;13534:93;:::i;:::-;13652:2;13647:3;13643:12;13636:19;;13295:366;;;:::o;13667:419::-;13833:4;13871:2;13860:9;13856:18;13848:26;;13920:9;13914:4;13910:20;13906:1;13895:9;13891:17;13884:47;13948:131;14074:4;13948:131;:::i;:::-;13940:139;;13667:419;;;:::o;14092:224::-;14232:34;14228:1;14220:6;14216:14;14209:58;14301:7;14296:2;14288:6;14284:15;14277:32;14092:224;:::o;14322:366::-;14464:3;14485:67;14549:2;14544:3;14485:67;:::i;:::-;14478:74;;14561:93;14650:3;14561:93;:::i;:::-;14679:2;14674:3;14670:12;14663:19;;14322:366;;;:::o;14694:419::-;14860:4;14898:2;14887:9;14883:18;14875:26;;14947:9;14941:4;14937:20;14933:1;14922:9;14918:17;14911:47;14975:131;15101:4;14975:131;:::i;:::-;14967:139;;14694:419;;;:::o;15119:174::-;15259:26;15255:1;15247:6;15243:14;15236:50;15119:174;:::o;15299:366::-;15441:3;15462:67;15526:2;15521:3;15462:67;:::i;:::-;15455:74;;15538:93;15627:3;15538:93;:::i;:::-;15656:2;15651:3;15647:12;15640:19;;15299:366;;;:::o;15671:419::-;15837:4;15875:2;15864:9;15860:18;15852:26;;15924:9;15918:4;15914:20;15910:1;15899:9;15895:17;15888:47;15952:131;16078:4;15952:131;:::i;:::-;15944:139;;15671:419;;;:::o;16096:228::-;16236:34;16232:1;16224:6;16220:14;16213:58;16305:11;16300:2;16292:6;16288:15;16281:36;16096:228;:::o;16330:366::-;16472:3;16493:67;16557:2;16552:3;16493:67;:::i;:::-;16486:74;;16569:93;16658:3;16569:93;:::i;:::-;16687:2;16682:3;16678:12;16671:19;;16330:366;;;:::o;16702:419::-;16868:4;16906:2;16895:9;16891:18;16883:26;;16955:9;16949:4;16945:20;16941:1;16930:9;16926:17;16919:47;16983:131;17109:4;16983:131;:::i;:::-;16975:139;;16702:419;;;:::o;17127:148::-;17229:11;17266:3;17251:18;;17127:148;;;;:::o;17281:390::-;17387:3;17415:39;17448:5;17415:39;:::i;:::-;17470:89;17552:6;17547:3;17470:89;:::i;:::-;17463:96;;17568:65;17626:6;17621:3;17614:4;17607:5;17603:16;17568:65;:::i;:::-;17658:6;17653:3;17649:16;17642:23;;17391:280;17281:390;;;;:::o;17677:435::-;17857:3;17879:95;17970:3;17961:6;17879:95;:::i;:::-;17872:102;;17991:95;18082:3;18073:6;17991:95;:::i;:::-;17984:102;;18103:3;18096:10;;17677:435;;;;;:::o;18118:175::-;18258:27;18254:1;18246:6;18242:14;18235:51;18118:175;:::o;18299:366::-;18441:3;18462:67;18526:2;18521:3;18462:67;:::i;:::-;18455:74;;18538:93;18627:3;18538:93;:::i;:::-;18656:2;18651:3;18647:12;18640:19;;18299:366;;;:::o;18671:419::-;18837:4;18875:2;18864:9;18860:18;18852:26;;18924:9;18918:4;18914:20;18910:1;18899:9;18895:17;18888:47;18952:131;19078:4;18952:131;:::i;:::-;18944:139;;18671:419;;;:::o;19096:237::-;19236:34;19232:1;19224:6;19220:14;19213:58;19305:20;19300:2;19292:6;19288:15;19281:45;19096:237;:::o;19339:366::-;19481:3;19502:67;19566:2;19561:3;19502:67;:::i;:::-;19495:74;;19578:93;19667:3;19578:93;:::i;:::-;19696:2;19691:3;19687:12;19680:19;;19339:366;;;:::o;19711:419::-;19877:4;19915:2;19904:9;19900:18;19892:26;;19964:9;19958:4;19954:20;19950:1;19939:9;19935:17;19928:47;19992:131;20118:4;19992:131;:::i;:::-;19984:139;;19711:419;;;:::o;20136:180::-;20184:77;20181:1;20174:88;20281:4;20278:1;20271:15;20305:4;20302:1;20295:15;20322:98;20373:6;20407:5;20401:12;20391:22;;20322:98;;;:::o;20426:168::-;20509:11;20543:6;20538:3;20531:19;20583:4;20578:3;20574:14;20559:29;;20426:168;;;;:::o;20600:373::-;20686:3;20714:38;20746:5;20714:38;:::i;:::-;20768:70;20831:6;20826:3;20768:70;:::i;:::-;20761:77;;20847:65;20905:6;20900:3;20893:4;20886:5;20882:16;20847:65;:::i;:::-;20937:29;20959:6;20937:29;:::i;:::-;20932:3;20928:39;20921:46;;20690:283;20600:373;;;;:::o;20979:640::-;21174:4;21212:3;21201:9;21197:19;21189:27;;21226:71;21294:1;21283:9;21279:17;21270:6;21226:71;:::i;:::-;21307:72;21375:2;21364:9;21360:18;21351:6;21307:72;:::i;:::-;21389;21457:2;21446:9;21442:18;21433:6;21389:72;:::i;:::-;21508:9;21502:4;21498:20;21493:2;21482:9;21478:18;21471:48;21536:76;21607:4;21598:6;21536:76;:::i;:::-;21528:84;;20979:640;;;;;;;:::o;21625:141::-;21681:5;21712:6;21706:13;21697:22;;21728:32;21754:5;21728:32;:::i;:::-;21625:141;;;;:::o;21772:349::-;21841:6;21890:2;21878:9;21869:7;21865:23;21861:32;21858:119;;;21896:79;;:::i;:::-;21858:119;22016:1;22041:63;22096:7;22087:6;22076:9;22072:22;22041:63;:::i;:::-;22031:73;;21987:127;21772:349;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1671000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_owner()": "2533",
								"_transfer(address,address,uint256)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2921",
								"getApproved(uint256)": "5300",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "3022",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "797",
								"symbol()": "infinite",
								"tokenURI(uint256)": "3459",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"__unsafe_increaseBalance(address,uint256)": "infinite",
								"_afterTokenTransfer(address,address,uint256,uint256)": "17",
								"_approve(address,uint256)": "infinite",
								"_baseURI()": "infinite",
								"_beforeTokenTransfer(address,address,uint256,uint256)": "17",
								"_burn(uint256)": "infinite",
								"_checkOnERC721Received(address,address,uint256,bytes memory)": "infinite",
								"_exists(uint256)": "2312",
								"_isApprovedOrOwner(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_ownerOf(uint256)": "2248",
								"_requireMinted(uint256)": "infinite",
								"_safeMint(address,uint256)": "infinite",
								"_safeMint(address,uint256,bytes memory)": "infinite",
								"_safeTransfer(address,address,uint256,bytes memory)": "infinite",
								"_setApprovalForAll(address,address,bool)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 628,
									"end": 17185,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 628,
									"end": 17185,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 628,
									"end": 17185,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1416,
									"end": 1570,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1416,
									"end": 1570,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1416,
									"end": 1570,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1416,
									"end": 1570,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1416,
									"end": 1570,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1416,
									"end": 1570,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1416,
									"end": 1570,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1416,
									"end": 1570,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1416,
									"end": 1570,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1416,
									"end": 1570,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1416,
									"end": 1570,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1416,
									"end": 1570,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1416,
									"end": 1570,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1416,
									"end": 1570,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1416,
									"end": 1570,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 1416,
									"end": 1570,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1416,
									"end": 1570,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1416,
									"end": 1570,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1416,
									"end": 1570,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1416,
									"end": 1570,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1416,
									"end": 1570,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1416,
									"end": 1570,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1416,
									"end": 1570,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1416,
									"end": 1570,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1416,
									"end": 1570,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1416,
									"end": 1570,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1416,
									"end": 1570,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1416,
									"end": 1570,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1416,
									"end": 1570,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1416,
									"end": 1570,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1416,
									"end": 1570,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1416,
									"end": 1570,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1416,
									"end": 1570,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1416,
									"end": 1570,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1416,
									"end": 1570,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1506,
									"end": 1511,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1498,
									"end": 1503,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1498,
									"end": 1511,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1498,
									"end": 1511,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1498,
									"end": 1511,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1498,
									"end": 1511,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1498,
									"end": 1511,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1498,
									"end": 1511,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1498,
									"end": 1511,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1498,
									"end": 1511,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1498,
									"end": 1511,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1498,
									"end": 1511,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1531,
									"end": 1538,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1521,
									"end": 1528,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1521,
									"end": 1538,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1521,
									"end": 1538,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1521,
									"end": 1538,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1521,
									"end": 1538,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1521,
									"end": 1538,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1521,
									"end": 1538,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1521,
									"end": 1538,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1521,
									"end": 1538,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1521,
									"end": 1538,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1521,
									"end": 1538,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1557,
									"end": 1563,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1548,
									"end": 1554,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1548,
									"end": 1554,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1548,
									"end": 1563,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1548,
									"end": 1563,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1548,
									"end": 1563,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1548,
									"end": 1563,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1548,
									"end": 1563,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1548,
									"end": 1563,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1548,
									"end": 1563,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1548,
									"end": 1563,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1548,
									"end": 1563,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1548,
									"end": 1563,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1548,
									"end": 1563,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1548,
									"end": 1563,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1548,
									"end": 1563,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1548,
									"end": 1563,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1548,
									"end": 1563,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1548,
									"end": 1563,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1548,
									"end": 1563,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1548,
									"end": 1563,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1416,
									"end": 1570,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1416,
									"end": 1570,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1416,
									"end": 1570,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 628,
									"end": 17185,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 628,
									"end": 17185,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 11,
									"value": "10"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 11,
									"value": "11"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 11,
									"value": "12"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 11,
									"value": "13"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 11,
									"value": "14"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 11,
									"value": "17"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "55"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 11,
									"value": "55"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "56"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "57"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 11,
									"value": "57"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 11,
									"value": "56"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "59"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "10"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 11,
									"value": "59"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "60"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "17"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 11,
									"value": "60"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "62"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "63"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 11,
									"value": "63"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 11,
									"value": "62"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "64"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 11,
									"value": "64"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "tag",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1691,
									"end": 1692,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 11,
									"value": "66"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1715,
									"end": 1721,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1712,
									"end": 1713,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1709,
									"end": 1722,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "68"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1800,
									"end": 1801,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1795,
									"end": 1798,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1791,
									"end": 1802,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1785,
									"end": 1803,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1781,
									"end": 1782,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1776,
									"end": 1779,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1772,
									"end": 1783,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1765,
									"end": 1804,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1737,
									"end": 1739,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1735,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1730,
									"end": 1740,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "66"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 11,
									"value": "68"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1848,
									"end": 1849,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1839,
									"end": 1845,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1834,
									"end": 1837,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1830,
									"end": 1846,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1823,
									"end": 1850,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1672,
									"end": 1856,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1610,
									"end": 1856,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "tag",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "70"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "71"
								},
								{
									"begin": 2034,
									"end": 2040,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 1992,
									"end": 2041,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "tag",
									"source": 11,
									"value": "71"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 1976,
									"end": 2042,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "tag",
									"source": 11,
									"value": "70"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2065,
									"end": 2071,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2058,
									"end": 2063,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2051,
									"end": 2072,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2103,
									"end": 2107,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2096,
									"end": 2101,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2092,
									"end": 2108,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2141,
									"end": 2144,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2132,
									"end": 2138,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2127,
									"end": 2130,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2123,
									"end": 2139,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2120,
									"end": 2145,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "72"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "14"
								},
								{
									"begin": 2148,
									"end": 2227,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "tag",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "tag",
									"source": 11,
									"value": "72"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "74"
								},
								{
									"begin": 2283,
									"end": 2289,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2278,
									"end": 2281,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2273,
									"end": 2276,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2238,
									"end": 2290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "tag",
									"source": 11,
									"value": "74"
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1957,
									"end": 2296,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1862,
									"end": 2296,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "tag",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2383,
									"end": 2388,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2432,
									"end": 2435,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2425,
									"end": 2429,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 2417,
									"end": 2423,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2413,
									"end": 2430,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2409,
									"end": 2436,
									"name": "SLT",
									"source": 11
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "76"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "77"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "13"
								},
								{
									"begin": 2440,
									"end": 2519,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "tag",
									"source": 11,
									"value": "77"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "tag",
									"source": 11,
									"value": "76"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2550,
									"end": 2556,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2544,
									"end": 2557,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "78"
								},
								{
									"begin": 2661,
									"end": 2664,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2653,
									"end": 2659,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2646,
									"end": 2650,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2638,
									"end": 2644,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 2634,
									"end": 2651,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 2575,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "tag",
									"source": 11,
									"value": "78"
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2389,
									"end": 2671,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2316,
									"end": 2671,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2677,
									"end": 2803,
									"name": "tag",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 2677,
									"end": 2803,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2714,
									"end": 2721,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2754,
									"end": 2796,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2747,
									"end": 2752,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2743,
									"end": 2797,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 2732,
									"end": 2797,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2732,
									"end": 2797,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2677,
									"end": 2803,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2677,
									"end": 2803,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2677,
									"end": 2803,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2677,
									"end": 2803,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2809,
									"end": 2905,
									"name": "tag",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 2809,
									"end": 2905,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2846,
									"end": 2853,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2875,
									"end": 2899,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "81"
								},
								{
									"begin": 2893,
									"end": 2898,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2875,
									"end": 2899,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 2875,
									"end": 2899,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2875,
									"end": 2899,
									"name": "tag",
									"source": 11,
									"value": "81"
								},
								{
									"begin": 2875,
									"end": 2899,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2864,
									"end": 2899,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2864,
									"end": 2899,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2809,
									"end": 2905,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2809,
									"end": 2905,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2809,
									"end": 2905,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2809,
									"end": 2905,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2911,
									"end": 3033,
									"name": "tag",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 2911,
									"end": 3033,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2984,
									"end": 3008,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "83"
								},
								{
									"begin": 3002,
									"end": 3007,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2984,
									"end": 3008,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 2984,
									"end": 3008,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2984,
									"end": 3008,
									"name": "tag",
									"source": 11,
									"value": "83"
								},
								{
									"begin": 2984,
									"end": 3008,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2977,
									"end": 2982,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2974,
									"end": 3009,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 2964,
									"end": 3027,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "84"
								},
								{
									"begin": 2964,
									"end": 3027,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 3023,
									"end": 3024,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3021,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 3013,
									"end": 3025,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 2964,
									"end": 3027,
									"name": "tag",
									"source": 11,
									"value": "84"
								},
								{
									"begin": 2964,
									"end": 3027,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2911,
									"end": 3033,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2911,
									"end": 3033,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3039,
									"end": 3182,
									"name": "tag",
									"source": 11,
									"value": "26"
								},
								{
									"begin": 3039,
									"end": 3182,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3096,
									"end": 3101,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3127,
									"end": 3133,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3121,
									"end": 3134,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 3112,
									"end": 3134,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3112,
									"end": 3134,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3143,
									"end": 3176,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "86"
								},
								{
									"begin": 3170,
									"end": 3175,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3143,
									"end": 3176,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 3143,
									"end": 3176,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3143,
									"end": 3176,
									"name": "tag",
									"source": 11,
									"value": "86"
								},
								{
									"begin": 3143,
									"end": 3176,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3039,
									"end": 3182,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 3039,
									"end": 3182,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3039,
									"end": 3182,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3039,
									"end": 3182,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3039,
									"end": 3182,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3188,
									"end": 4197,
									"name": "tag",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 3188,
									"end": 4197,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3296,
									"end": 3302,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3304,
									"end": 3310,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 3312,
									"end": 3318,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3361,
									"end": 3363,
									"name": "PUSH",
									"source": 11,
									"value": "60"
								},
								{
									"begin": 3349,
									"end": 3358,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 3340,
									"end": 3347,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 3336,
									"end": 3359,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 3332,
									"end": 3364,
									"name": "SLT",
									"source": 11
								},
								{
									"begin": 3329,
									"end": 3448,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 3329,
									"end": 3448,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "88"
								},
								{
									"begin": 3329,
									"end": 3448,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 3367,
									"end": 3446,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "89"
								},
								{
									"begin": 3367,
									"end": 3446,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "11"
								},
								{
									"begin": 3367,
									"end": 3446,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3367,
									"end": 3446,
									"name": "tag",
									"source": 11,
									"value": "89"
								},
								{
									"begin": 3367,
									"end": 3446,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3329,
									"end": 3448,
									"name": "tag",
									"source": 11,
									"value": "88"
								},
								{
									"begin": 3329,
									"end": 3448,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3508,
									"end": 3509,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3497,
									"end": 3506,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 3493,
									"end": 3510,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3487,
									"end": 3511,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 3538,
									"end": 3556,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3530,
									"end": 3536,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3527,
									"end": 3557,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 3524,
									"end": 3641,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 3524,
									"end": 3641,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "90"
								},
								{
									"begin": 3524,
									"end": 3641,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 3560,
									"end": 3639,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "91"
								},
								{
									"begin": 3560,
									"end": 3639,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "12"
								},
								{
									"begin": 3560,
									"end": 3639,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3560,
									"end": 3639,
									"name": "tag",
									"source": 11,
									"value": "91"
								},
								{
									"begin": 3560,
									"end": 3639,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3524,
									"end": 3641,
									"name": "tag",
									"source": 11,
									"value": "90"
								},
								{
									"begin": 3524,
									"end": 3641,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3665,
									"end": 3739,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "92"
								},
								{
									"begin": 3731,
									"end": 3738,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 3722,
									"end": 3728,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3711,
									"end": 3720,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 3707,
									"end": 3729,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3665,
									"end": 3739,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 3665,
									"end": 3739,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3665,
									"end": 3739,
									"name": "tag",
									"source": 11,
									"value": "92"
								},
								{
									"begin": 3665,
									"end": 3739,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3655,
									"end": 3739,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 3655,
									"end": 3739,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3458,
									"end": 3749,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3809,
									"end": 3811,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 3798,
									"end": 3807,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 3794,
									"end": 3812,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3788,
									"end": 3813,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 3840,
									"end": 3858,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3832,
									"end": 3838,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3829,
									"end": 3859,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 3826,
									"end": 3943,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 3826,
									"end": 3943,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "93"
								},
								{
									"begin": 3826,
									"end": 3943,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 3862,
									"end": 3941,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "94"
								},
								{
									"begin": 3862,
									"end": 3941,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "12"
								},
								{
									"begin": 3862,
									"end": 3941,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3862,
									"end": 3941,
									"name": "tag",
									"source": 11,
									"value": "94"
								},
								{
									"begin": 3862,
									"end": 3941,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3826,
									"end": 3943,
									"name": "tag",
									"source": 11,
									"value": "93"
								},
								{
									"begin": 3826,
									"end": 3943,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3967,
									"end": 4041,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "95"
								},
								{
									"begin": 4033,
									"end": 4040,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 4024,
									"end": 4030,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4013,
									"end": 4022,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 4009,
									"end": 4031,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3967,
									"end": 4041,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 3967,
									"end": 4041,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3967,
									"end": 4041,
									"name": "tag",
									"source": 11,
									"value": "95"
								},
								{
									"begin": 3967,
									"end": 4041,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3957,
									"end": 4041,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 3957,
									"end": 4041,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3759,
									"end": 4051,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4090,
									"end": 4092,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 4116,
									"end": 4180,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "96"
								},
								{
									"begin": 4172,
									"end": 4179,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 4163,
									"end": 4169,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4152,
									"end": 4161,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 4148,
									"end": 4170,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4116,
									"end": 4180,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "26"
								},
								{
									"begin": 4116,
									"end": 4180,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4116,
									"end": 4180,
									"name": "tag",
									"source": 11,
									"value": "96"
								},
								{
									"begin": 4116,
									"end": 4180,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4106,
									"end": 4180,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4106,
									"end": 4180,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4061,
									"end": 4190,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3188,
									"end": 4197,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 3188,
									"end": 4197,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3188,
									"end": 4197,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 3188,
									"end": 4197,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3188,
									"end": 4197,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 3188,
									"end": 4197,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4203,
									"end": 4302,
									"name": "tag",
									"source": 11,
									"value": "27"
								},
								{
									"begin": 4203,
									"end": 4302,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4289,
									"end": 4294,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4283,
									"end": 4295,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 4273,
									"end": 4295,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4273,
									"end": 4295,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4203,
									"end": 4302,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4203,
									"end": 4302,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4203,
									"end": 4302,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4203,
									"end": 4302,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4308,
									"end": 4488,
									"name": "tag",
									"source": 11,
									"value": "28"
								},
								{
									"begin": 4308,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4356,
									"end": 4433,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4353,
									"end": 4354,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4346,
									"end": 4434,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 4453,
									"end": 4457,
									"name": "PUSH",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 4450,
									"end": 4451,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 4443,
									"end": 4458,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 4477,
									"end": 4481,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 4474,
									"end": 4475,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4467,
									"end": 4482,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 4494,
									"end": 4814,
									"name": "tag",
									"source": 11,
									"value": "29"
								},
								{
									"begin": 4494,
									"end": 4814,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4538,
									"end": 4544,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4575,
									"end": 4576,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 4569,
									"end": 4573,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4565,
									"end": 4577,
									"name": "DIV",
									"source": 11
								},
								{
									"begin": 4555,
									"end": 4577,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4555,
									"end": 4577,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4622,
									"end": 4623,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 4616,
									"end": 4620,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4612,
									"end": 4624,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 4643,
									"end": 4661,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 4633,
									"end": 4714,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 4633,
									"end": 4714,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 4699,
									"end": 4703,
									"name": "PUSH",
									"source": 11,
									"value": "7F"
								},
								{
									"begin": 4691,
									"end": 4697,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4687,
									"end": 4704,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 4677,
									"end": 4704,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4677,
									"end": 4704,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4633,
									"end": 4714,
									"name": "tag",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 4633,
									"end": 4714,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4761,
									"end": 4763,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 4753,
									"end": 4759,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4750,
									"end": 4764,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 4730,
									"end": 4748,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4727,
									"end": 4765,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 4724,
									"end": 4808,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "101"
								},
								{
									"begin": 4724,
									"end": 4808,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 4780,
									"end": 4798,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "102"
								},
								{
									"begin": 4780,
									"end": 4798,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "28"
								},
								{
									"begin": 4780,
									"end": 4798,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4780,
									"end": 4798,
									"name": "tag",
									"source": 11,
									"value": "102"
								},
								{
									"begin": 4780,
									"end": 4798,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4724,
									"end": 4808,
									"name": "tag",
									"source": 11,
									"value": "101"
								},
								{
									"begin": 4724,
									"end": 4808,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4545,
									"end": 4814,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4494,
									"end": 4814,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4494,
									"end": 4814,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4494,
									"end": 4814,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4494,
									"end": 4814,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4820,
									"end": 4961,
									"name": "tag",
									"source": 11,
									"value": "30"
								},
								{
									"begin": 4820,
									"end": 4961,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4869,
									"end": 4873,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4892,
									"end": 4895,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4884,
									"end": 4895,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4884,
									"end": 4895,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4915,
									"end": 4918,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4912,
									"end": 4913,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4905,
									"end": 4919,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 4949,
									"end": 4953,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 4946,
									"end": 4947,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4936,
									"end": 4954,
									"name": "KECCAK256",
									"source": 11
								},
								{
									"begin": 4928,
									"end": 4954,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4928,
									"end": 4954,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4820,
									"end": 4961,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4820,
									"end": 4961,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4820,
									"end": 4961,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4820,
									"end": 4961,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4967,
									"end": 5060,
									"name": "tag",
									"source": 11,
									"value": "31"
								},
								{
									"begin": 4967,
									"end": 5060,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5004,
									"end": 5010,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5051,
									"end": 5053,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 5046,
									"end": 5048,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 5039,
									"end": 5044,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 5035,
									"end": 5049,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 5031,
									"end": 5054,
									"name": "DIV",
									"source": 11
								},
								{
									"begin": 5021,
									"end": 5054,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5021,
									"end": 5054,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4967,
									"end": 5060,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4967,
									"end": 5060,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4967,
									"end": 5060,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4967,
									"end": 5060,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5066,
									"end": 5173,
									"name": "tag",
									"source": 11,
									"value": "32"
								},
								{
									"begin": 5066,
									"end": 5173,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5110,
									"end": 5118,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5160,
									"end": 5165,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5154,
									"end": 5158,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5150,
									"end": 5166,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 5129,
									"end": 5166,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5129,
									"end": 5166,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5066,
									"end": 5173,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 5066,
									"end": 5173,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 5066,
									"end": 5173,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5066,
									"end": 5173,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5066,
									"end": 5173,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5179,
									"end": 5572,
									"name": "tag",
									"source": 11,
									"value": "33"
								},
								{
									"begin": 5179,
									"end": 5572,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5248,
									"end": 5254,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5298,
									"end": 5299,
									"name": "PUSH",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 5286,
									"end": 5296,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 5282,
									"end": 5300,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 5321,
									"end": 5418,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "107"
								},
								{
									"begin": 5351,
									"end": 5417,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5340,
									"end": 5349,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5321,
									"end": 5418,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "32"
								},
								{
									"begin": 5321,
									"end": 5418,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5321,
									"end": 5418,
									"name": "tag",
									"source": 11,
									"value": "107"
								},
								{
									"begin": 5321,
									"end": 5418,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5439,
									"end": 5478,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "108"
								},
								{
									"begin": 5469,
									"end": 5477,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 5458,
									"end": 5467,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 5439,
									"end": 5478,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "32"
								},
								{
									"begin": 5439,
									"end": 5478,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5439,
									"end": 5478,
									"name": "tag",
									"source": 11,
									"value": "108"
								},
								{
									"begin": 5439,
									"end": 5478,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5427,
									"end": 5478,
									"name": "SWAP6",
									"source": 11
								},
								{
									"begin": 5427,
									"end": 5478,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5511,
									"end": 5515,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 5507,
									"end": 5516,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 5500,
									"end": 5505,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 5496,
									"end": 5517,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 5487,
									"end": 5517,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 5487,
									"end": 5517,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5560,
									"end": 5564,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 5550,
									"end": 5558,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 5546,
									"end": 5565,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 5539,
									"end": 5544,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 5536,
									"end": 5566,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 5526,
									"end": 5566,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 5526,
									"end": 5566,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5255,
									"end": 5572,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5255,
									"end": 5572,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5179,
									"end": 5572,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 5179,
									"end": 5572,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 5179,
									"end": 5572,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5179,
									"end": 5572,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5179,
									"end": 5572,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5179,
									"end": 5572,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5578,
									"end": 5655,
									"name": "tag",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 5578,
									"end": 5655,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5615,
									"end": 5622,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5644,
									"end": 5649,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5633,
									"end": 5649,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5633,
									"end": 5649,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5578,
									"end": 5655,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 5578,
									"end": 5655,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5578,
									"end": 5655,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5578,
									"end": 5655,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5661,
									"end": 5721,
									"name": "tag",
									"source": 11,
									"value": "35"
								},
								{
									"begin": 5661,
									"end": 5721,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5689,
									"end": 5692,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5710,
									"end": 5715,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5703,
									"end": 5715,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5703,
									"end": 5715,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5661,
									"end": 5721,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 5661,
									"end": 5721,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5661,
									"end": 5721,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5661,
									"end": 5721,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5727,
									"end": 5869,
									"name": "tag",
									"source": 11,
									"value": "36"
								},
								{
									"begin": 5727,
									"end": 5869,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5777,
									"end": 5786,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5810,
									"end": 5863,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "112"
								},
								{
									"begin": 5828,
									"end": 5862,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "113"
								},
								{
									"begin": 5837,
									"end": 5861,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "114"
								},
								{
									"begin": 5855,
									"end": 5860,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 5837,
									"end": 5861,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 5837,
									"end": 5861,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5837,
									"end": 5861,
									"name": "tag",
									"source": 11,
									"value": "114"
								},
								{
									"begin": 5837,
									"end": 5861,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5828,
									"end": 5862,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "35"
								},
								{
									"begin": 5828,
									"end": 5862,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5828,
									"end": 5862,
									"name": "tag",
									"source": 11,
									"value": "113"
								},
								{
									"begin": 5828,
									"end": 5862,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5810,
									"end": 5863,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 5810,
									"end": 5863,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5810,
									"end": 5863,
									"name": "tag",
									"source": 11,
									"value": "112"
								},
								{
									"begin": 5810,
									"end": 5863,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5797,
									"end": 5863,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5797,
									"end": 5863,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5727,
									"end": 5869,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 5727,
									"end": 5869,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5727,
									"end": 5869,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5727,
									"end": 5869,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5875,
									"end": 5950,
									"name": "tag",
									"source": 11,
									"value": "37"
								},
								{
									"begin": 5875,
									"end": 5950,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5918,
									"end": 5921,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5939,
									"end": 5944,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5932,
									"end": 5944,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5932,
									"end": 5944,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5875,
									"end": 5950,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 5875,
									"end": 5950,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5875,
									"end": 5950,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5875,
									"end": 5950,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5956,
									"end": 6225,
									"name": "tag",
									"source": 11,
									"value": "38"
								},
								{
									"begin": 5956,
									"end": 6225,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6066,
									"end": 6105,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "117"
								},
								{
									"begin": 6097,
									"end": 6104,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 6066,
									"end": 6105,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "36"
								},
								{
									"begin": 6066,
									"end": 6105,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6066,
									"end": 6105,
									"name": "tag",
									"source": 11,
									"value": "117"
								},
								{
									"begin": 6066,
									"end": 6105,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6127,
									"end": 6218,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "118"
								},
								{
									"begin": 6176,
									"end": 6217,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "119"
								},
								{
									"begin": 6200,
									"end": 6216,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 6176,
									"end": 6217,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "37"
								},
								{
									"begin": 6176,
									"end": 6217,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6176,
									"end": 6217,
									"name": "tag",
									"source": 11,
									"value": "119"
								},
								{
									"begin": 6176,
									"end": 6217,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6168,
									"end": 6174,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 6161,
									"end": 6165,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 6155,
									"end": 6166,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 6127,
									"end": 6218,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "33"
								},
								{
									"begin": 6127,
									"end": 6218,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6127,
									"end": 6218,
									"name": "tag",
									"source": 11,
									"value": "118"
								},
								{
									"begin": 6127,
									"end": 6218,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6121,
									"end": 6125,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 6114,
									"end": 6219,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 6032,
									"end": 6225,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5956,
									"end": 6225,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5956,
									"end": 6225,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5956,
									"end": 6225,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5956,
									"end": 6225,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6231,
									"end": 6304,
									"name": "tag",
									"source": 11,
									"value": "39"
								},
								{
									"begin": 6231,
									"end": 6304,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6276,
									"end": 6279,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 6231,
									"end": 6304,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 6231,
									"end": 6304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6310,
									"end": 6499,
									"name": "tag",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 6310,
									"end": 6499,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6387,
									"end": 6419,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "122"
								},
								{
									"begin": 6387,
									"end": 6419,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "39"
								},
								{
									"begin": 6387,
									"end": 6419,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6387,
									"end": 6419,
									"name": "tag",
									"source": 11,
									"value": "122"
								},
								{
									"begin": 6387,
									"end": 6419,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6428,
									"end": 6493,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "123"
								},
								{
									"begin": 6486,
									"end": 6492,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 6478,
									"end": 6484,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 6472,
									"end": 6476,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 6428,
									"end": 6493,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "38"
								},
								{
									"begin": 6428,
									"end": 6493,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6428,
									"end": 6493,
									"name": "tag",
									"source": 11,
									"value": "123"
								},
								{
									"begin": 6428,
									"end": 6493,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6363,
									"end": 6499,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6310,
									"end": 6499,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6310,
									"end": 6499,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6310,
									"end": 6499,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6505,
									"end": 6691,
									"name": "tag",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 6505,
									"end": 6691,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6565,
									"end": 6685,
									"name": "tag",
									"source": 11,
									"value": "125"
								},
								{
									"begin": 6565,
									"end": 6685,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6582,
									"end": 6585,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 6575,
									"end": 6580,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 6572,
									"end": 6586,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 6565,
									"end": 6685,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 6565,
									"end": 6685,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "127"
								},
								{
									"begin": 6565,
									"end": 6685,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 6636,
									"end": 6675,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "128"
								},
								{
									"begin": 6673,
									"end": 6674,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 6666,
									"end": 6671,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 6636,
									"end": 6675,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 6636,
									"end": 6675,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6636,
									"end": 6675,
									"name": "tag",
									"source": 11,
									"value": "128"
								},
								{
									"begin": 6636,
									"end": 6675,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6609,
									"end": 6610,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 6602,
									"end": 6607,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 6598,
									"end": 6611,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 6589,
									"end": 6611,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 6589,
									"end": 6611,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6565,
									"end": 6685,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "125"
								},
								{
									"begin": 6565,
									"end": 6685,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6565,
									"end": 6685,
									"name": "tag",
									"source": 11,
									"value": "127"
								},
								{
									"begin": 6565,
									"end": 6685,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6505,
									"end": 6691,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6505,
									"end": 6691,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6505,
									"end": 6691,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6697,
									"end": 7240,
									"name": "tag",
									"source": 11,
									"value": "42"
								},
								{
									"begin": 6697,
									"end": 7240,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6798,
									"end": 6800,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 6793,
									"end": 6796,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 6790,
									"end": 6801,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 6787,
									"end": 7233,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 6787,
									"end": 7233,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "130"
								},
								{
									"begin": 6787,
									"end": 7233,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 6832,
									"end": 6870,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "131"
								},
								{
									"begin": 6864,
									"end": 6869,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 6832,
									"end": 6870,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "30"
								},
								{
									"begin": 6832,
									"end": 6870,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6832,
									"end": 6870,
									"name": "tag",
									"source": 11,
									"value": "131"
								},
								{
									"begin": 6832,
									"end": 6870,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6916,
									"end": 6945,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "132"
								},
								{
									"begin": 6934,
									"end": 6944,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 6916,
									"end": 6945,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "31"
								},
								{
									"begin": 6916,
									"end": 6945,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6916,
									"end": 6945,
									"name": "tag",
									"source": 11,
									"value": "132"
								},
								{
									"begin": 6916,
									"end": 6945,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6906,
									"end": 6914,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 6902,
									"end": 6946,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 7099,
									"end": 7101,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 7087,
									"end": 7097,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 7084,
									"end": 7102,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 7081,
									"end": 7130,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 7081,
									"end": 7130,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "133"
								},
								{
									"begin": 7081,
									"end": 7130,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 7120,
									"end": 7128,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 7105,
									"end": 7128,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 7105,
									"end": 7128,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7081,
									"end": 7130,
									"name": "tag",
									"source": 11,
									"value": "133"
								},
								{
									"begin": 7081,
									"end": 7130,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7143,
									"end": 7223,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "134"
								},
								{
									"begin": 7199,
									"end": 7221,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "135"
								},
								{
									"begin": 7217,
									"end": 7220,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 7199,
									"end": 7221,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "31"
								},
								{
									"begin": 7199,
									"end": 7221,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7199,
									"end": 7221,
									"name": "tag",
									"source": 11,
									"value": "135"
								},
								{
									"begin": 7199,
									"end": 7221,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7189,
									"end": 7197,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 7185,
									"end": 7222,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 7172,
									"end": 7183,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7143,
									"end": 7223,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 7143,
									"end": 7223,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7143,
									"end": 7223,
									"name": "tag",
									"source": 11,
									"value": "134"
								},
								{
									"begin": 7143,
									"end": 7223,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6802,
									"end": 7233,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6802,
									"end": 7233,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6787,
									"end": 7233,
									"name": "tag",
									"source": 11,
									"value": "130"
								},
								{
									"begin": 6787,
									"end": 7233,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6697,
									"end": 7240,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6697,
									"end": 7240,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6697,
									"end": 7240,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6697,
									"end": 7240,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7246,
									"end": 7363,
									"name": "tag",
									"source": 11,
									"value": "43"
								},
								{
									"begin": 7246,
									"end": 7363,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7300,
									"end": 7308,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 7350,
									"end": 7355,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7344,
									"end": 7348,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7340,
									"end": 7356,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 7319,
									"end": 7356,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 7319,
									"end": 7356,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7246,
									"end": 7363,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 7246,
									"end": 7363,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 7246,
									"end": 7363,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7246,
									"end": 7363,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7246,
									"end": 7363,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7369,
									"end": 7538,
									"name": "tag",
									"source": 11,
									"value": "44"
								},
								{
									"begin": 7369,
									"end": 7538,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7413,
									"end": 7419,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 7446,
									"end": 7497,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "138"
								},
								{
									"begin": 7494,
									"end": 7495,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 7490,
									"end": 7496,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 7482,
									"end": 7487,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 7479,
									"end": 7480,
									"name": "PUSH",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 7475,
									"end": 7488,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 7446,
									"end": 7497,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "43"
								},
								{
									"begin": 7446,
									"end": 7497,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7446,
									"end": 7497,
									"name": "tag",
									"source": 11,
									"value": "138"
								},
								{
									"begin": 7446,
									"end": 7497,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7442,
									"end": 7498,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 7527,
									"end": 7531,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 7521,
									"end": 7525,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 7517,
									"end": 7532,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 7507,
									"end": 7532,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 7507,
									"end": 7532,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7420,
									"end": 7538,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7369,
									"end": 7538,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 7369,
									"end": 7538,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 7369,
									"end": 7538,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7369,
									"end": 7538,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7369,
									"end": 7538,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7543,
									"end": 7838,
									"name": "tag",
									"source": 11,
									"value": "45"
								},
								{
									"begin": 7543,
									"end": 7838,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7619,
									"end": 7623,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 7765,
									"end": 7794,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "140"
								},
								{
									"begin": 7790,
									"end": 7793,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 7784,
									"end": 7788,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 7765,
									"end": 7794,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "44"
								},
								{
									"begin": 7765,
									"end": 7794,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7765,
									"end": 7794,
									"name": "tag",
									"source": 11,
									"value": "140"
								},
								{
									"begin": 7765,
									"end": 7794,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7757,
									"end": 7794,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 7757,
									"end": 7794,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7827,
									"end": 7830,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7824,
									"end": 7825,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 7820,
									"end": 7831,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 7814,
									"end": 7818,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7811,
									"end": 7832,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 7803,
									"end": 7832,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 7803,
									"end": 7832,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7543,
									"end": 7838,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 7543,
									"end": 7838,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 7543,
									"end": 7838,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7543,
									"end": 7838,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7543,
									"end": 7838,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7843,
									"end": 9238,
									"name": "tag",
									"source": 11,
									"value": "7"
								},
								{
									"begin": 7843,
									"end": 9238,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7960,
									"end": 7997,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "142"
								},
								{
									"begin": 7993,
									"end": 7996,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7960,
									"end": 7997,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "27"
								},
								{
									"begin": 7960,
									"end": 7997,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7960,
									"end": 7997,
									"name": "tag",
									"source": 11,
									"value": "142"
								},
								{
									"begin": 7960,
									"end": 7997,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8062,
									"end": 8080,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8054,
									"end": 8060,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 8051,
									"end": 8081,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 8048,
									"end": 8104,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 8048,
									"end": 8104,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "143"
								},
								{
									"begin": 8048,
									"end": 8104,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 8084,
									"end": 8102,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "144"
								},
								{
									"begin": 8084,
									"end": 8102,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 8084,
									"end": 8102,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8084,
									"end": 8102,
									"name": "tag",
									"source": 11,
									"value": "144"
								},
								{
									"begin": 8084,
									"end": 8102,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8048,
									"end": 8104,
									"name": "tag",
									"source": 11,
									"value": "143"
								},
								{
									"begin": 8048,
									"end": 8104,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8128,
									"end": 8166,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "145"
								},
								{
									"begin": 8160,
									"end": 8164,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 8154,
									"end": 8165,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 8128,
									"end": 8166,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "29"
								},
								{
									"begin": 8128,
									"end": 8166,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8128,
									"end": 8166,
									"name": "tag",
									"source": 11,
									"value": "145"
								},
								{
									"begin": 8128,
									"end": 8166,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8213,
									"end": 8280,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "146"
								},
								{
									"begin": 8273,
									"end": 8279,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 8265,
									"end": 8271,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 8259,
									"end": 8263,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 8213,
									"end": 8280,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "42"
								},
								{
									"begin": 8213,
									"end": 8280,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8213,
									"end": 8280,
									"name": "tag",
									"source": 11,
									"value": "146"
								},
								{
									"begin": 8213,
									"end": 8280,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8307,
									"end": 8308,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 8331,
									"end": 8335,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 8318,
									"end": 8335,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 8318,
									"end": 8335,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8363,
									"end": 8365,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 8355,
									"end": 8361,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 8352,
									"end": 8366,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 8380,
									"end": 8381,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 8375,
									"end": 8993,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 8375,
									"end": 8993,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 8375,
									"end": 8993,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "148"
								},
								{
									"begin": 8375,
									"end": 8993,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 9037,
									"end": 9038,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 9054,
									"end": 9060,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 9051,
									"end": 9128,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 9051,
									"end": 9128,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "149"
								},
								{
									"begin": 9051,
									"end": 9128,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 9103,
									"end": 9112,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 9098,
									"end": 9101,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 9094,
									"end": 9113,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 9088,
									"end": 9114,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 9079,
									"end": 9114,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 9079,
									"end": 9114,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 9051,
									"end": 9128,
									"name": "tag",
									"source": 11,
									"value": "149"
								},
								{
									"begin": 9051,
									"end": 9128,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 9154,
									"end": 9221,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "150"
								},
								{
									"begin": 9214,
									"end": 9220,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 9207,
									"end": 9212,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 9154,
									"end": 9221,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "45"
								},
								{
									"begin": 9154,
									"end": 9221,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 9154,
									"end": 9221,
									"name": "tag",
									"source": 11,
									"value": "150"
								},
								{
									"begin": 9154,
									"end": 9221,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 9148,
									"end": 9152,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 9141,
									"end": 9222,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 9010,
									"end": 9232,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8345,
									"end": 9232,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "147"
								},
								{
									"begin": 8345,
									"end": 9232,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8375,
									"end": 8993,
									"name": "tag",
									"source": 11,
									"value": "148"
								},
								{
									"begin": 8375,
									"end": 8993,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8427,
									"end": 8431,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 8423,
									"end": 8432,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 8415,
									"end": 8421,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 8411,
									"end": 8433,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 8461,
									"end": 8498,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "151"
								},
								{
									"begin": 8493,
									"end": 8497,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 8461,
									"end": 8498,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "30"
								},
								{
									"begin": 8461,
									"end": 8498,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8461,
									"end": 8498,
									"name": "tag",
									"source": 11,
									"value": "151"
								},
								{
									"begin": 8461,
									"end": 8498,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8520,
									"end": 8521,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 8534,
									"end": 8742,
									"name": "tag",
									"source": 11,
									"value": "152"
								},
								{
									"begin": 8534,
									"end": 8742,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8548,
									"end": 8555,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 8545,
									"end": 8546,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 8542,
									"end": 8556,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 8534,
									"end": 8742,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 8534,
									"end": 8742,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "154"
								},
								{
									"begin": 8534,
									"end": 8742,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 8627,
									"end": 8636,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 8622,
									"end": 8625,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 8618,
									"end": 8637,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 8612,
									"end": 8638,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 8604,
									"end": 8610,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 8597,
									"end": 8639,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 8678,
									"end": 8679,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 8670,
									"end": 8676,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 8666,
									"end": 8680,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 8656,
									"end": 8680,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 8656,
									"end": 8680,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8725,
									"end": 8727,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 8714,
									"end": 8723,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 8710,
									"end": 8728,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 8697,
									"end": 8728,
									"name": "SWAP5",
									"source": 11
								},
								{
									"begin": 8697,
									"end": 8728,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8571,
									"end": 8575,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 8568,
									"end": 8569,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 8564,
									"end": 8576,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 8559,
									"end": 8576,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 8559,
									"end": 8576,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8534,
									"end": 8742,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "152"
								},
								{
									"begin": 8534,
									"end": 8742,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8534,
									"end": 8742,
									"name": "tag",
									"source": 11,
									"value": "154"
								},
								{
									"begin": 8534,
									"end": 8742,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8770,
									"end": 8776,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 8761,
									"end": 8768,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 8758,
									"end": 8777,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 8755,
									"end": 8934,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 8755,
									"end": 8934,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "155"
								},
								{
									"begin": 8755,
									"end": 8934,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 8828,
									"end": 8837,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 8823,
									"end": 8826,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 8819,
									"end": 8838,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 8813,
									"end": 8839,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 8871,
									"end": 8919,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "156"
								},
								{
									"begin": 8913,
									"end": 8917,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 8905,
									"end": 8911,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 8901,
									"end": 8918,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 8890,
									"end": 8899,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 8871,
									"end": 8919,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "44"
								},
								{
									"begin": 8871,
									"end": 8919,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8871,
									"end": 8919,
									"name": "tag",
									"source": 11,
									"value": "156"
								},
								{
									"begin": 8871,
									"end": 8919,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8863,
									"end": 8869,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 8856,
									"end": 8920,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 8778,
									"end": 8934,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8755,
									"end": 8934,
									"name": "tag",
									"source": 11,
									"value": "155"
								},
								{
									"begin": 8755,
									"end": 8934,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8980,
									"end": 8981,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 8976,
									"end": 8977,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 8968,
									"end": 8974,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 8964,
									"end": 8978,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 8960,
									"end": 8982,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 8954,
									"end": 8958,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 8947,
									"end": 8983,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 8382,
									"end": 8993,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8382,
									"end": 8993,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8382,
									"end": 8993,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8345,
									"end": 9232,
									"name": "tag",
									"source": 11,
									"value": "147"
								},
								{
									"begin": 8345,
									"end": 9232,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8345,
									"end": 9232,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7935,
									"end": 9238,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7935,
									"end": 9238,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7935,
									"end": 9238,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7843,
									"end": 9238,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7843,
									"end": 9238,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7843,
									"end": 9238,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 628,
									"end": 17185,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 628,
									"end": 17185,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 628,
									"end": 17185,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 628,
									"end": 17185,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 628,
									"end": 17185,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 628,
									"end": 17185,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 17185,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 628,
									"end": 17185,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 17185,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fa4d41d2e9e8e3a0392ae37cba06c39f5f090e06c232b82c5f4df0064d4f86fc64736f6c63430008150033",
									".code": [
										{
											"begin": 628,
											"end": 17185,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "PUSH",
											"source": 0,
											"value": "B2BDFA7B"
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "PUSH",
											"source": 0,
											"value": "B2BDFA7B"
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "PUSH",
											"source": 0,
											"value": "B88D4FDE"
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "PUSH",
											"source": 0,
											"value": "C87B56DD"
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "PUSH",
											"source": 0,
											"value": "30E0789E"
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "PUSH",
											"source": 0,
											"value": "42842E0E"
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "PUSH",
											"source": 0,
											"value": "81812FC"
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 17185,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 2057,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1757,
											"end": 2057,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 2057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1757,
											"end": 2057,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1757,
											"end": 2057,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 2057,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 2057,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 2057,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 2057,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 2057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 2057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1757,
											"end": 2057,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 2057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 2057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1757,
											"end": 2057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 2057,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1757,
											"end": 2057,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 2057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1757,
											"end": 2057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 2057,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1757,
											"end": 2057,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 2057,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1757,
											"end": 2057,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 2057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1757,
											"end": 2057,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 2057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 2057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1757,
											"end": 2057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 2057,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1757,
											"end": 2057,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 2057,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1757,
											"end": 2057,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 2057,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 2057,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 2057,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 2057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 2057,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2756,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2658,
											"end": 2756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2658,
											"end": 2756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2658,
											"end": 2756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2756,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2658,
											"end": 2756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2756,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2658,
											"end": 2756,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2658,
											"end": 2756,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2658,
											"end": 2756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2756,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2658,
											"end": 2756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2756,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2658,
											"end": 2756,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2756,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2756,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2756,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2756,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4122,
											"end": 4289,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4122,
											"end": 4289,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4122,
											"end": 4289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4122,
											"end": 4289,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4122,
											"end": 4289,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4122,
											"end": 4289,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4122,
											"end": 4289,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4122,
											"end": 4289,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4122,
											"end": 4289,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4122,
											"end": 4289,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4122,
											"end": 4289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4122,
											"end": 4289,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4122,
											"end": 4289,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4122,
											"end": 4289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4122,
											"end": 4289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4122,
											"end": 4289,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4122,
											"end": 4289,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4122,
											"end": 4289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4122,
											"end": 4289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4122,
											"end": 4289,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4122,
											"end": 4289,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4122,
											"end": 4289,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4122,
											"end": 4289,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4122,
											"end": 4289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 4122,
											"end": 4289,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4122,
											"end": 4289,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4122,
											"end": 4289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 4122,
											"end": 4289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4122,
											"end": 4289,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 4122,
											"end": 4289,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4122,
											"end": 4289,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4122,
											"end": 4289,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4122,
											"end": 4289,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4122,
											"end": 4289,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4122,
											"end": 4289,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4122,
											"end": 4289,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4122,
											"end": 4289,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3655,
											"end": 4061,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3655,
											"end": 4061,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3655,
											"end": 4061,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3655,
											"end": 4061,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3655,
											"end": 4061,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3655,
											"end": 4061,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3655,
											"end": 4061,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3655,
											"end": 4061,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3655,
											"end": 4061,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3655,
											"end": 4061,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3655,
											"end": 4061,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 3655,
											"end": 4061,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3655,
											"end": 4061,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3655,
											"end": 4061,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 3655,
											"end": 4061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3655,
											"end": 4061,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 3655,
											"end": 4061,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3655,
											"end": 4061,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3655,
											"end": 4061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3655,
											"end": 4061,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3655,
											"end": 4061,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3655,
											"end": 4061,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4799,
											"end": 5095,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4799,
											"end": 5095,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4799,
											"end": 5095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 4799,
											"end": 5095,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4799,
											"end": 5095,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4799,
											"end": 5095,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4799,
											"end": 5095,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4799,
											"end": 5095,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4799,
											"end": 5095,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4799,
											"end": 5095,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4799,
											"end": 5095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 4799,
											"end": 5095,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4799,
											"end": 5095,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4799,
											"end": 5095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 4799,
											"end": 5095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4799,
											"end": 5095,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 4799,
											"end": 5095,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4799,
											"end": 5095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 4799,
											"end": 5095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4799,
											"end": 5095,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 4799,
											"end": 5095,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4799,
											"end": 5095,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 11444,
											"end": 12640,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 11444,
											"end": 12640,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11444,
											"end": 12640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 11444,
											"end": 12640,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11444,
											"end": 12640,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11444,
											"end": 12640,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 11444,
											"end": 12640,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11444,
											"end": 12640,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11444,
											"end": 12640,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11444,
											"end": 12640,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11444,
											"end": 12640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 11444,
											"end": 12640,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11444,
											"end": 12640,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11444,
											"end": 12640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 11444,
											"end": 12640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11444,
											"end": 12640,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 11444,
											"end": 12640,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11444,
											"end": 12640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 11444,
											"end": 12640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11444,
											"end": 12640,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 11444,
											"end": 12640,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11444,
											"end": 12640,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5161,
											"end": 5310,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 5161,
											"end": 5310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5161,
											"end": 5310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 5161,
											"end": 5310,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5161,
											"end": 5310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5161,
											"end": 5310,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5161,
											"end": 5310,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5161,
											"end": 5310,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5161,
											"end": 5310,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5161,
											"end": 5310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5161,
											"end": 5310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 5161,
											"end": 5310,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5161,
											"end": 5310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5161,
											"end": 5310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 5161,
											"end": 5310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5161,
											"end": 5310,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 5161,
											"end": 5310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5161,
											"end": 5310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 5161,
											"end": 5310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5161,
											"end": 5310,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 5161,
											"end": 5310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5161,
											"end": 5310,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2596,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2377,
											"end": 2596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2377,
											"end": 2596,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2377,
											"end": 2596,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2596,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2596,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2596,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2596,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2596,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2377,
											"end": 2596,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2596,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2377,
											"end": 2596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2596,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2377,
											"end": 2596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2377,
											"end": 2596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2596,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2377,
											"end": 2596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2596,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2377,
											"end": 2596,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2377,
											"end": 2596,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2596,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2377,
											"end": 2596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2596,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2377,
											"end": 2596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2596,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2377,
											"end": 2596,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2596,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2596,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2596,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2596,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2596,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2116,
											"end": 2320,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2116,
											"end": 2320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2116,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2116,
											"end": 2320,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2116,
											"end": 2320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2116,
											"end": 2320,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2116,
											"end": 2320,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2116,
											"end": 2320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2116,
											"end": 2320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2116,
											"end": 2320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2116,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2116,
											"end": 2320,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2116,
											"end": 2320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2116,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2116,
											"end": 2320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2116,
											"end": 2320,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2116,
											"end": 2320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2116,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2116,
											"end": 2320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2116,
											"end": 2320,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2116,
											"end": 2320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2116,
											"end": 2320,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2116,
											"end": 2320,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2116,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2116,
											"end": 2320,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2116,
											"end": 2320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2116,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2116,
											"end": 2320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2116,
											"end": 2320,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2116,
											"end": 2320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2116,
											"end": 2320,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2116,
											"end": 2320,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2116,
											"end": 2320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2116,
											"end": 2320,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2116,
											"end": 2320,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2116,
											"end": 2320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2116,
											"end": 2320,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 2922,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2820,
											"end": 2922,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 2922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2820,
											"end": 2922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2820,
											"end": 2922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 2922,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2820,
											"end": 2922,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 2922,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2820,
											"end": 2922,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 2922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2820,
											"end": 2922,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 2922,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 2922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2820,
											"end": 2922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 2922,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2820,
											"end": 2922,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 2922,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2820,
											"end": 2922,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 2922,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 2922,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 2922,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 2922,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 2922,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4356,
											"end": 4509,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 4356,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4356,
											"end": 4509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 4356,
											"end": 4509,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4356,
											"end": 4509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4356,
											"end": 4509,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4356,
											"end": 4509,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4356,
											"end": 4509,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4356,
											"end": 4509,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4356,
											"end": 4509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4356,
											"end": 4509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 4356,
											"end": 4509,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4356,
											"end": 4509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4356,
											"end": 4509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 4356,
											"end": 4509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4356,
											"end": 4509,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 4356,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4356,
											"end": 4509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 4356,
											"end": 4509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4356,
											"end": 4509,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 4356,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4356,
											"end": 4509,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 757,
											"end": 778,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 757,
											"end": 778,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 757,
											"end": 778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 757,
											"end": 778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 757,
											"end": 778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 757,
											"end": 778,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 757,
											"end": 778,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 757,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 757,
											"end": 778,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 757,
											"end": 778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 757,
											"end": 778,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 757,
											"end": 778,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 757,
											"end": 778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 757,
											"end": 778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 757,
											"end": 778,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 757,
											"end": 778,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 757,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 757,
											"end": 778,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 757,
											"end": 778,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 757,
											"end": 778,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 757,
											"end": 778,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 757,
											"end": 778,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 757,
											"end": 778,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5376,
											"end": 5652,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 5376,
											"end": 5652,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5376,
											"end": 5652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 5376,
											"end": 5652,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5376,
											"end": 5652,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5376,
											"end": 5652,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5376,
											"end": 5652,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5376,
											"end": 5652,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5376,
											"end": 5652,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5376,
											"end": 5652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5376,
											"end": 5652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 5376,
											"end": 5652,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5376,
											"end": 5652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5376,
											"end": 5652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 5376,
											"end": 5652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5376,
											"end": 5652,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 5376,
											"end": 5652,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5376,
											"end": 5652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 5376,
											"end": 5652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5376,
											"end": 5652,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 5376,
											"end": 5652,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5376,
											"end": 5652,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2988,
											"end": 3264,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2988,
											"end": 3264,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2988,
											"end": 3264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2988,
											"end": 3264,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2988,
											"end": 3264,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2988,
											"end": 3264,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2988,
											"end": 3264,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2988,
											"end": 3264,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2988,
											"end": 3264,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2988,
											"end": 3264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2988,
											"end": 3264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2988,
											"end": 3264,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2988,
											"end": 3264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2988,
											"end": 3264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2988,
											"end": 3264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2988,
											"end": 3264,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2988,
											"end": 3264,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2988,
											"end": 3264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2988,
											"end": 3264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2988,
											"end": 3264,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2988,
											"end": 3264,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2988,
											"end": 3264,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2988,
											"end": 3264,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2988,
											"end": 3264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2988,
											"end": 3264,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2988,
											"end": 3264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2988,
											"end": 3264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2988,
											"end": 3264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2988,
											"end": 3264,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2988,
											"end": 3264,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2988,
											"end": 3264,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2988,
											"end": 3264,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2988,
											"end": 3264,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2988,
											"end": 3264,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2988,
											"end": 3264,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2988,
											"end": 3264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2988,
											"end": 3264,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4575,
											"end": 4737,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 4575,
											"end": 4737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4575,
											"end": 4737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 4575,
											"end": 4737,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4575,
											"end": 4737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4575,
											"end": 4737,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4575,
											"end": 4737,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4575,
											"end": 4737,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4575,
											"end": 4737,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4575,
											"end": 4737,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4575,
											"end": 4737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4575,
											"end": 4737,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4575,
											"end": 4737,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4575,
											"end": 4737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 4575,
											"end": 4737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4575,
											"end": 4737,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4575,
											"end": 4737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4575,
											"end": 4737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 4575,
											"end": 4737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4575,
											"end": 4737,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 4575,
											"end": 4737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4575,
											"end": 4737,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4575,
											"end": 4737,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4575,
											"end": 4737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 4575,
											"end": 4737,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4575,
											"end": 4737,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4575,
											"end": 4737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 4575,
											"end": 4737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4575,
											"end": 4737,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 4575,
											"end": 4737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4575,
											"end": 4737,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4575,
											"end": 4737,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4575,
											"end": 4737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4575,
											"end": 4737,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4575,
											"end": 4737,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4575,
											"end": 4737,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4575,
											"end": 4737,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 2057,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1757,
											"end": 2057,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1859,
											"end": 1863,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1909,
											"end": 1934,
											"name": "PUSH",
											"source": 0,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1894,
											"end": 1934,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1894,
											"end": 1934,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1894,
											"end": 1934,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1894,
											"end": 1905,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1894,
											"end": 1934,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1894,
											"end": 1934,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1894,
											"end": 1934,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1894,
											"end": 1934,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1894,
											"end": 1998,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1894,
											"end": 1998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1894,
											"end": 1998,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1894,
											"end": 1998,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1965,
											"end": 1998,
											"name": "PUSH",
											"source": 0,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1950,
											"end": 1998,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1950,
											"end": 1998,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1950,
											"end": 1998,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1950,
											"end": 1961,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1950,
											"end": 1998,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1950,
											"end": 1998,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1950,
											"end": 1998,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1950,
											"end": 1998,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1894,
											"end": 1998,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1894,
											"end": 1998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1894,
											"end": 2050,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1894,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1894,
											"end": 2050,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1894,
											"end": 2050,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2014,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2038,
											"end": 2049,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2014,
											"end": 2037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2014,
											"end": 2050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2014,
											"end": 2050,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2014,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1894,
											"end": 2050,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1894,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1875,
											"end": 2050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1875,
											"end": 2050,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 2057,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 2057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 2057,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 2057,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2756,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2658,
											"end": 2756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 2725,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2744,
											"end": 2749,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2737,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2737,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4122,
											"end": 4289,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4122,
											"end": 4289,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4198,
											"end": 4205,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4217,
											"end": 4240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 4232,
											"end": 4239,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4217,
											"end": 4231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 4217,
											"end": 4240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4217,
											"end": 4240,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 4217,
											"end": 4240,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4258,
											"end": 4273,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4258,
											"end": 4282,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4274,
											"end": 4281,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4258,
											"end": 4282,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4258,
											"end": 4282,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4258,
											"end": 4282,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4258,
											"end": 4282,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4258,
											"end": 4282,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4258,
											"end": 4282,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4258,
											"end": 4282,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4258,
											"end": 4282,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4258,
											"end": 4282,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4258,
											"end": 4282,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4258,
											"end": 4282,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4258,
											"end": 4282,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4258,
											"end": 4282,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4258,
											"end": 4282,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4258,
											"end": 4282,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4258,
											"end": 4282,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4258,
											"end": 4282,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4258,
											"end": 4282,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4258,
											"end": 4282,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4258,
											"end": 4282,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4258,
											"end": 4282,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4251,
											"end": 4282,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4251,
											"end": 4282,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4122,
											"end": 4289,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4122,
											"end": 4289,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4122,
											"end": 4289,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4122,
											"end": 4289,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3655,
											"end": 4061,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3655,
											"end": 4061,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3735,
											"end": 3748,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3751,
											"end": 3774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3766,
											"end": 3773,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 3751,
											"end": 3774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3751,
											"end": 3774,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3751,
											"end": 3774,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3735,
											"end": 3774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3735,
											"end": 3774,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3798,
											"end": 3803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3792,
											"end": 3803,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3792,
											"end": 3803,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3792,
											"end": 3794,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3792,
											"end": 3803,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3792,
											"end": 3803,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3792,
											"end": 3803,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3784,
											"end": 3841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3784,
											"end": 3841,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3784,
											"end": 3841,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3784,
											"end": 3841,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3784,
											"end": 3841,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3784,
											"end": 3841,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3784,
											"end": 3841,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3784,
											"end": 3841,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3784,
											"end": 3841,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3784,
											"end": 3841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3784,
											"end": 3841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3784,
											"end": 3841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3784,
											"end": 3841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3784,
											"end": 3841,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3784,
											"end": 3841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3784,
											"end": 3841,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3784,
											"end": 3841,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3784,
											"end": 3841,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3784,
											"end": 3841,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3784,
											"end": 3841,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3784,
											"end": 3841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3784,
											"end": 3841,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3784,
											"end": 3841,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3784,
											"end": 3841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3889,
											"end": 3894,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3873,
											"end": 3894,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3873,
											"end": 3894,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3873,
											"end": 3885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3873,
											"end": 3883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 3873,
											"end": 3885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3873,
											"end": 3885,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3873,
											"end": 3885,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3873,
											"end": 3894,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3873,
											"end": 3894,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3873,
											"end": 3894,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3873,
											"end": 3935,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3873,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 3873,
											"end": 3935,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3873,
											"end": 3935,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3898,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 3915,
											"end": 3920,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3922,
											"end": 3934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 3922,
											"end": 3932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 3922,
											"end": 3934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3922,
											"end": 3934,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 3922,
											"end": 3934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3898,
											"end": 3914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 3898,
											"end": 3935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3898,
											"end": 3935,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 3898,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3873,
											"end": 3935,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 3873,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3852,
											"end": 4022,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 3852,
											"end": 4022,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3852,
											"end": 4022,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3852,
											"end": 4022,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3852,
											"end": 4022,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3852,
											"end": 4022,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3852,
											"end": 4022,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3852,
											"end": 4022,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3852,
											"end": 4022,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3852,
											"end": 4022,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 3852,
											"end": 4022,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3852,
											"end": 4022,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 3852,
											"end": 4022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3852,
											"end": 4022,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 3852,
											"end": 4022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3852,
											"end": 4022,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3852,
											"end": 4022,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3852,
											"end": 4022,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3852,
											"end": 4022,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3852,
											"end": 4022,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3852,
											"end": 4022,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3852,
											"end": 4022,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3852,
											"end": 4022,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 3852,
											"end": 4022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4033,
											"end": 4054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 4042,
											"end": 4044,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4046,
											"end": 4053,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4033,
											"end": 4041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 4033,
											"end": 4054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4033,
											"end": 4054,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 4033,
											"end": 4054,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3725,
											"end": 4061,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3655,
											"end": 4061,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3655,
											"end": 4061,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3655,
											"end": 4061,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4799,
											"end": 5095,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 4799,
											"end": 5095,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 4999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 4977,
											"end": 4989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 4977,
											"end": 4987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 4977,
											"end": 4989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4977,
											"end": 4989,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 4977,
											"end": 4989,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4991,
											"end": 4998,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 4976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 4958,
											"end": 4999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 4999,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 4958,
											"end": 4999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4950,
											"end": 5049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 4950,
											"end": 5049,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4950,
											"end": 5049,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4950,
											"end": 5049,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4950,
											"end": 5049,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4950,
											"end": 5049,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4950,
											"end": 5049,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4950,
											"end": 5049,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4950,
											"end": 5049,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4950,
											"end": 5049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 4950,
											"end": 5049,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4950,
											"end": 5049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 4950,
											"end": 5049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4950,
											"end": 5049,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 4950,
											"end": 5049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4950,
											"end": 5049,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4950,
											"end": 5049,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4950,
											"end": 5049,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4950,
											"end": 5049,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4950,
											"end": 5049,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4950,
											"end": 5049,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4950,
											"end": 5049,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4950,
											"end": 5049,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 4950,
											"end": 5049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5060,
											"end": 5088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 5070,
											"end": 5074,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5076,
											"end": 5078,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5080,
											"end": 5087,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5060,
											"end": 5069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 5060,
											"end": 5088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5060,
											"end": 5088,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 5060,
											"end": 5088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4799,
											"end": 5095,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4799,
											"end": 5095,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4799,
											"end": 5095,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4799,
											"end": 5095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11444,
											"end": 12640,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 11444,
											"end": 12640,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11559,
											"end": 11563,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11532,
											"end": 11563,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11532,
											"end": 11563,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11532,
											"end": 11555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 11547,
											"end": 11554,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11532,
											"end": 11546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 11532,
											"end": 11555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11532,
											"end": 11555,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 11532,
											"end": 11555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11532,
											"end": 11563,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11532,
											"end": 11563,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11532,
											"end": 11563,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11524,
											"end": 11605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 11524,
											"end": 11605,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11524,
											"end": 11605,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11524,
											"end": 11605,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11524,
											"end": 11605,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11524,
											"end": 11605,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11524,
											"end": 11605,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11524,
											"end": 11605,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11524,
											"end": 11605,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11524,
											"end": 11605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 11524,
											"end": 11605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11524,
											"end": 11605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 11524,
											"end": 11605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11524,
											"end": 11605,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 11524,
											"end": 11605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11524,
											"end": 11605,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11524,
											"end": 11605,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11524,
											"end": 11605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11524,
											"end": 11605,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11524,
											"end": 11605,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11524,
											"end": 11605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11524,
											"end": 11605,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11524,
											"end": 11605,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 11524,
											"end": 11605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11693,
											"end": 11735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 11714,
											"end": 11718,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11720,
											"end": 11722,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11724,
											"end": 11731,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11733,
											"end": 11734,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11693,
											"end": 11713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 11693,
											"end": 11735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11693,
											"end": 11735,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 11693,
											"end": 11735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11862,
											"end": 11866,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11835,
											"end": 11866,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11835,
											"end": 11866,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11835,
											"end": 11858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 11850,
											"end": 11857,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11835,
											"end": 11849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 11835,
											"end": 11858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11835,
											"end": 11858,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 11835,
											"end": 11858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11835,
											"end": 11866,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11835,
											"end": 11866,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11835,
											"end": 11866,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11827,
											"end": 11908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 11827,
											"end": 11908,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11827,
											"end": 11908,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11827,
											"end": 11908,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11827,
											"end": 11908,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11827,
											"end": 11908,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11827,
											"end": 11908,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11827,
											"end": 11908,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11827,
											"end": 11908,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11827,
											"end": 11908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 11827,
											"end": 11908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11827,
											"end": 11908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 11827,
											"end": 11908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11827,
											"end": 11908,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 11827,
											"end": 11908,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11827,
											"end": 11908,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11827,
											"end": 11908,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11827,
											"end": 11908,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11827,
											"end": 11908,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11827,
											"end": 11908,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11827,
											"end": 11908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11827,
											"end": 11908,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11827,
											"end": 11908,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 11827,
											"end": 11908,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11977,
											"end": 11992,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 11977,
											"end": 12001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11993,
											"end": 12000,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11977,
											"end": 12001,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11977,
											"end": 12001,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11977,
											"end": 12001,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11977,
											"end": 12001,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11977,
											"end": 12001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11977,
											"end": 12001,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11977,
											"end": 12001,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11977,
											"end": 12001,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11977,
											"end": 12001,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11977,
											"end": 12001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11977,
											"end": 12001,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11977,
											"end": 12001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11970,
											"end": 12001,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 11970,
											"end": 12001,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 11970,
											"end": 12001,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11970,
											"end": 12001,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11970,
											"end": 12001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11970,
											"end": 12001,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11970,
											"end": 12001,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 11970,
											"end": 12001,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 11970,
											"end": 12001,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11970,
											"end": 12001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11970,
											"end": 12001,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12464,
											"end": 12465,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12445,
											"end": 12454,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12445,
											"end": 12460,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12455,
											"end": 12459,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12445,
											"end": 12460,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12445,
											"end": 12460,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12445,
											"end": 12460,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12445,
											"end": 12460,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12445,
											"end": 12460,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12445,
											"end": 12460,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12445,
											"end": 12460,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12445,
											"end": 12460,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12445,
											"end": 12460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12445,
											"end": 12460,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12445,
											"end": 12460,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12445,
											"end": 12460,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12445,
											"end": 12460,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12445,
											"end": 12460,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12445,
											"end": 12460,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12445,
											"end": 12460,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12445,
											"end": 12465,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12445,
											"end": 12465,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12445,
											"end": 12465,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12445,
											"end": 12465,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12445,
											"end": 12465,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12445,
											"end": 12465,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12445,
											"end": 12465,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12445,
											"end": 12465,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12445,
											"end": 12465,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12445,
											"end": 12465,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12445,
											"end": 12465,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12496,
											"end": 12497,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12479,
											"end": 12488,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12479,
											"end": 12492,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12489,
											"end": 12491,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12479,
											"end": 12492,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12479,
											"end": 12492,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12479,
											"end": 12492,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12479,
											"end": 12492,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12479,
											"end": 12492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12479,
											"end": 12492,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12479,
											"end": 12492,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12479,
											"end": 12492,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12479,
											"end": 12492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12479,
											"end": 12492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12479,
											"end": 12492,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12479,
											"end": 12492,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12479,
											"end": 12492,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12479,
											"end": 12492,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12479,
											"end": 12492,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12479,
											"end": 12492,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12479,
											"end": 12497,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12479,
											"end": 12497,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12479,
											"end": 12497,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12479,
											"end": 12497,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12479,
											"end": 12497,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12479,
											"end": 12497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12479,
											"end": 12497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12479,
											"end": 12497,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12479,
											"end": 12497,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12479,
											"end": 12497,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12479,
											"end": 12497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12536,
											"end": 12538,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12517,
											"end": 12524,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12517,
											"end": 12533,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12525,
											"end": 12532,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12517,
											"end": 12533,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12517,
											"end": 12533,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12517,
											"end": 12533,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12517,
											"end": 12533,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12517,
											"end": 12533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12517,
											"end": 12533,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12517,
											"end": 12533,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12517,
											"end": 12533,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12517,
											"end": 12533,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12517,
											"end": 12533,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12517,
											"end": 12533,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12517,
											"end": 12533,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12517,
											"end": 12538,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12517,
											"end": 12538,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 12517,
											"end": 12538,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12517,
											"end": 12538,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12517,
											"end": 12538,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12517,
											"end": 12538,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12517,
											"end": 12538,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12517,
											"end": 12538,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 12517,
											"end": 12538,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12517,
											"end": 12538,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12517,
											"end": 12538,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12517,
											"end": 12538,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12517,
											"end": 12538,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12517,
											"end": 12538,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12517,
											"end": 12538,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 12517,
											"end": 12538,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12517,
											"end": 12538,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12517,
											"end": 12538,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12573,
											"end": 12580,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12569,
											"end": 12571,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12554,
											"end": 12581,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12554,
											"end": 12581,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12563,
											"end": 12567,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12554,
											"end": 12581,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12554,
											"end": 12581,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12554,
											"end": 12581,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 12554,
											"end": 12581,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12554,
											"end": 12581,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12554,
											"end": 12581,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12554,
											"end": 12581,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12554,
											"end": 12581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12554,
											"end": 12581,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12554,
											"end": 12581,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12554,
											"end": 12581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12554,
											"end": 12581,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 12592,
											"end": 12633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 12612,
											"end": 12616,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12618,
											"end": 12620,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12622,
											"end": 12629,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12631,
											"end": 12632,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12592,
											"end": 12611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 12592,
											"end": 12633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12592,
											"end": 12633,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 12592,
											"end": 12633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11444,
											"end": 12640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11444,
											"end": 12640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11444,
											"end": 12640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11444,
											"end": 12640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5161,
											"end": 5310,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 5161,
											"end": 5310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5264,
											"end": 5303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 5281,
											"end": 5285,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5289,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5291,
											"end": 5298,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5264,
											"end": 5303,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5264,
											"end": 5303,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5264,
											"end": 5303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5264,
											"end": 5303,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5264,
											"end": 5303,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5264,
											"end": 5303,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5264,
											"end": 5303,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5264,
											"end": 5303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5264,
											"end": 5303,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5264,
											"end": 5303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5264,
											"end": 5303,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5264,
											"end": 5303,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5264,
											"end": 5280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 5264,
											"end": 5303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5264,
											"end": 5303,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 5264,
											"end": 5303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5161,
											"end": 5310,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5161,
											"end": 5310,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5161,
											"end": 5310,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5161,
											"end": 5310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2596,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2377,
											"end": 2596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2449,
											"end": 2456,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2468,
											"end": 2481,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2493,
											"end": 2500,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2484,
											"end": 2501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2501,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2484,
											"end": 2501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2468,
											"end": 2501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2468,
											"end": 2501,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2536,
											"end": 2537,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2519,
											"end": 2538,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2519,
											"end": 2538,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2519,
											"end": 2524,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2519,
											"end": 2538,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2519,
											"end": 2538,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2519,
											"end": 2538,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2511,
											"end": 2567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2511,
											"end": 2567,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2511,
											"end": 2567,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2511,
											"end": 2567,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2511,
											"end": 2567,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2511,
											"end": 2567,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2511,
											"end": 2567,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2511,
											"end": 2567,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2511,
											"end": 2567,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2511,
											"end": 2567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2511,
											"end": 2567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2511,
											"end": 2567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 2511,
											"end": 2567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2511,
											"end": 2567,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2511,
											"end": 2567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2511,
											"end": 2567,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2511,
											"end": 2567,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2511,
											"end": 2567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2511,
											"end": 2567,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2511,
											"end": 2567,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2511,
											"end": 2567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2511,
											"end": 2567,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2511,
											"end": 2567,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2511,
											"end": 2567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2584,
											"end": 2589,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2577,
											"end": 2589,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2577,
											"end": 2589,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2577,
											"end": 2589,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2596,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2596,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2596,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2116,
											"end": 2320,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2116,
											"end": 2320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2188,
											"end": 2195,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2232,
											"end": 2233,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2215,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2215,
											"end": 2234,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2215,
											"end": 2220,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2215,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2215,
											"end": 2234,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2215,
											"end": 2234,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2207,
											"end": 2280,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2280,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2207,
											"end": 2280,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2280,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2207,
											"end": 2280,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2280,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2280,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2207,
											"end": 2280,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2207,
											"end": 2280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 2207,
											"end": 2280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2280,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2207,
											"end": 2280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2280,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2207,
											"end": 2280,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2280,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2280,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2280,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2280,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2280,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2207,
											"end": 2280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2297,
											"end": 2306,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2297,
											"end": 2313,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2307,
											"end": 2312,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2297,
											"end": 2313,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2297,
											"end": 2313,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2297,
											"end": 2313,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2297,
											"end": 2313,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2297,
											"end": 2313,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2297,
											"end": 2313,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2297,
											"end": 2313,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2297,
											"end": 2313,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2297,
											"end": 2313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2297,
											"end": 2313,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2297,
											"end": 2313,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2297,
											"end": 2313,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2297,
											"end": 2313,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2297,
											"end": 2313,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2297,
											"end": 2313,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2297,
											"end": 2313,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2313,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2116,
											"end": 2320,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2116,
											"end": 2320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2116,
											"end": 2320,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2116,
											"end": 2320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 2922,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2820,
											"end": 2922,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2876,
											"end": 2889,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2908,
											"end": 2915,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2901,
											"end": 2915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2901,
											"end": 2915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 2922,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 2922,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4356,
											"end": 4509,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 4356,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4450,
											"end": 4502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 4469,
											"end": 4481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 4469,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 4469,
											"end": 4481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4481,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 4469,
											"end": 4481,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4483,
											"end": 4491,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4501,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4450,
											"end": 4468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 4450,
											"end": 4502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4450,
											"end": 4502,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 4450,
											"end": 4502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4356,
											"end": 4509,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4356,
											"end": 4509,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4356,
											"end": 4509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 757,
											"end": 778,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 757,
											"end": 778,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 757,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 757,
											"end": 778,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 757,
											"end": 778,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 757,
											"end": 778,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 757,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 757,
											"end": 778,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 757,
											"end": 778,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 757,
											"end": 778,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 757,
											"end": 778,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 757,
											"end": 778,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 757,
											"end": 778,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 757,
											"end": 778,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5376,
											"end": 5652,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 5376,
											"end": 5652,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5506,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 5525,
											"end": 5537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 5525,
											"end": 5535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 5525,
											"end": 5537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5525,
											"end": 5537,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 5525,
											"end": 5537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5539,
											"end": 5546,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5506,
											"end": 5524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 5506,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5506,
											"end": 5547,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 5506,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5498,
											"end": 5597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 5498,
											"end": 5597,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5498,
											"end": 5597,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5597,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5498,
											"end": 5597,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5498,
											"end": 5597,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5498,
											"end": 5597,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5498,
											"end": 5597,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5498,
											"end": 5597,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5498,
											"end": 5597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 5498,
											"end": 5597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5498,
											"end": 5597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 5498,
											"end": 5597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5498,
											"end": 5597,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 5498,
											"end": 5597,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5498,
											"end": 5597,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5597,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5498,
											"end": 5597,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5498,
											"end": 5597,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5498,
											"end": 5597,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5498,
											"end": 5597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5498,
											"end": 5597,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5498,
											"end": 5597,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 5498,
											"end": 5597,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5607,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 5621,
											"end": 5625,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5627,
											"end": 5629,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5631,
											"end": 5638,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5640,
											"end": 5644,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5607,
											"end": 5620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 5607,
											"end": 5645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5607,
											"end": 5645,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 5607,
											"end": 5645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5376,
											"end": 5652,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5376,
											"end": 5652,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5376,
											"end": 5652,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5376,
											"end": 5652,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5376,
											"end": 5652,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2988,
											"end": 3264,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2988,
											"end": 3264,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3061,
											"end": 3074,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3086,
											"end": 3109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 3101,
											"end": 3108,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3086,
											"end": 3100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3086,
											"end": 3109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3086,
											"end": 3109,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 3086,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3120,
											"end": 3141,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3144,
											"end": 3154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 3144,
											"end": 3152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 3144,
											"end": 3154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3144,
											"end": 3154,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 3144,
											"end": 3154,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3120,
											"end": 3154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3120,
											"end": 3154,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3195,
											"end": 3196,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3177,
											"end": 3184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3192,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3196,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 3171,
											"end": 3257,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3257,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3171,
											"end": 3257,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3257,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3257,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3171,
											"end": 3257,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3257,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3171,
											"end": 3257,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3257,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3257,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3171,
											"end": 3257,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3257,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3257,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 3171,
											"end": 3257,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3257,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 3171,
											"end": 3257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3223,
											"end": 3230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3232,
											"end": 3250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 3232,
											"end": 3239,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3232,
											"end": 3248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 3232,
											"end": 3250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3232,
											"end": 3250,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 3232,
											"end": 3250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3251,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3206,
											"end": 3251,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3251,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3206,
											"end": 3251,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 3206,
											"end": 3251,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3251,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3251,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 3206,
											"end": 3251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3251,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 3206,
											"end": 3251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3251,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3206,
											"end": 3251,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3251,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3206,
											"end": 3251,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3251,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3251,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3251,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3251,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3251,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3251,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3251,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3206,
											"end": 3251,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3257,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 3171,
											"end": 3257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3164,
											"end": 3257,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3164,
											"end": 3257,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3164,
											"end": 3257,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2988,
											"end": 3264,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2988,
											"end": 3264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2988,
											"end": 3264,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2988,
											"end": 3264,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4575,
											"end": 4737,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 4575,
											"end": 4737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4672,
											"end": 4676,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4695,
											"end": 4713,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4695,
											"end": 4720,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4714,
											"end": 4719,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4695,
											"end": 4720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4695,
											"end": 4720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4695,
											"end": 4720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4695,
											"end": 4720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4695,
											"end": 4720,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4695,
											"end": 4720,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4695,
											"end": 4720,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4695,
											"end": 4720,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4695,
											"end": 4720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4695,
											"end": 4720,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4695,
											"end": 4720,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4695,
											"end": 4720,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4695,
											"end": 4720,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4695,
											"end": 4720,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4695,
											"end": 4720,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4695,
											"end": 4730,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4721,
											"end": 4729,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4695,
											"end": 4730,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4695,
											"end": 4730,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4695,
											"end": 4730,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4695,
											"end": 4730,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4695,
											"end": 4730,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4695,
											"end": 4730,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4695,
											"end": 4730,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4695,
											"end": 4730,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4695,
											"end": 4730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4695,
											"end": 4730,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4695,
											"end": 4730,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4695,
											"end": 4730,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4695,
											"end": 4730,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4695,
											"end": 4730,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4695,
											"end": 4730,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4695,
											"end": 4730,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4695,
											"end": 4730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4695,
											"end": 4730,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4695,
											"end": 4730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4695,
											"end": 4730,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4695,
											"end": 4730,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4695,
											"end": 4730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4695,
											"end": 4730,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4695,
											"end": 4730,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 4695,
											"end": 4730,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 4730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 4730,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4575,
											"end": 4737,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4575,
											"end": 4737,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4575,
											"end": 4737,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4575,
											"end": 4737,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4575,
											"end": 4737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 914,
											"end": 918,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 977,
											"name": "PUSH",
											"source": 7,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 937,
											"end": 948,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 930,
											"end": 977,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 930,
											"end": 977,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 829,
											"end": 984,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 829,
											"end": 984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13420,
											"end": 13553,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 13420,
											"end": 13553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13501,
											"end": 13517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 13509,
											"end": 13516,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13501,
											"end": 13508,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 13501,
											"end": 13517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13501,
											"end": 13517,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 13501,
											"end": 13517,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13493,
											"end": 13546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 13493,
											"end": 13546,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13493,
											"end": 13546,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13493,
											"end": 13546,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13493,
											"end": 13546,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13493,
											"end": 13546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13493,
											"end": 13546,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13493,
											"end": 13546,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13493,
											"end": 13546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13493,
											"end": 13546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 13493,
											"end": 13546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13493,
											"end": 13546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 13493,
											"end": 13546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13493,
											"end": 13546,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 13493,
											"end": 13546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13493,
											"end": 13546,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13493,
											"end": 13546,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13493,
											"end": 13546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13493,
											"end": 13546,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13493,
											"end": 13546,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13493,
											"end": 13546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13493,
											"end": 13546,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13493,
											"end": 13546,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 13493,
											"end": 13546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13420,
											"end": 13553,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13420,
											"end": 13553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12752,
											"end": 12923,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 12752,
											"end": 12923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12855,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12826,
											"end": 12841,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 12826,
											"end": 12850,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12842,
											"end": 12849,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12826,
											"end": 12850,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12826,
											"end": 12850,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12826,
											"end": 12850,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12826,
											"end": 12850,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12826,
											"end": 12850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12826,
											"end": 12850,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12826,
											"end": 12850,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12826,
											"end": 12850,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12826,
											"end": 12850,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12826,
											"end": 12850,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12826,
											"end": 12850,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12826,
											"end": 12850,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12826,
											"end": 12855,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12826,
											"end": 12855,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 12826,
											"end": 12855,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12826,
											"end": 12855,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12826,
											"end": 12855,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12826,
											"end": 12855,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12826,
											"end": 12855,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12826,
											"end": 12855,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 12826,
											"end": 12855,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12826,
											"end": 12855,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12826,
											"end": 12855,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12826,
											"end": 12855,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12826,
											"end": 12855,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12826,
											"end": 12855,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12826,
											"end": 12855,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 12826,
											"end": 12855,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12826,
											"end": 12855,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12826,
											"end": 12855,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12908,
											"end": 12915,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12904,
											"end": 12906,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12870,
											"end": 12916,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12870,
											"end": 12916,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12879,
											"end": 12902,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 12894,
											"end": 12901,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12879,
											"end": 12893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 12879,
											"end": 12902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12879,
											"end": 12902,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 12879,
											"end": 12902,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12870,
											"end": 12916,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12870,
											"end": 12916,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12870,
											"end": 12916,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 12870,
											"end": 12916,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12870,
											"end": 12916,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12870,
											"end": 12916,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12870,
											"end": 12916,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12870,
											"end": 12916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12870,
											"end": 12916,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12870,
											"end": 12916,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12870,
											"end": 12916,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12870,
											"end": 12916,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 12752,
											"end": 12923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12752,
											"end": 12923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12752,
											"end": 12923,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7591,
											"end": 7852,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 7591,
											"end": 7852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7684,
											"end": 7688,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7700,
											"end": 7713,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7716,
											"end": 7739,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 7731,
											"end": 7738,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7716,
											"end": 7730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 7716,
											"end": 7739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7716,
											"end": 7739,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 7716,
											"end": 7739,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7700,
											"end": 7739,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7700,
											"end": 7739,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7768,
											"end": 7773,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7773,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7757,
											"end": 7773,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7764,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7773,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7757,
											"end": 7773,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7773,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7809,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 7757,
											"end": 7809,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7809,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7777,
											"end": 7809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 7794,
											"end": 7799,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7801,
											"end": 7808,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7777,
											"end": 7793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 7777,
											"end": 7809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7777,
											"end": 7809,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 7777,
											"end": 7809,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7809,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 7757,
											"end": 7809,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 7757,
											"end": 7844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7844,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7837,
											"end": 7844,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7813,
											"end": 7844,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7813,
											"end": 7844,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7813,
											"end": 7833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 7825,
											"end": 7832,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7813,
											"end": 7824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 7813,
											"end": 7833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7813,
											"end": 7833,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 7813,
											"end": 7833,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7813,
											"end": 7844,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7813,
											"end": 7844,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7813,
											"end": 7844,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7844,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 7757,
											"end": 7844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7749,
											"end": 7845,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7749,
											"end": 7845,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7749,
											"end": 7845,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7591,
											"end": 7852,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7591,
											"end": 7852,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7591,
											"end": 7852,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7591,
											"end": 7852,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7591,
											"end": 7852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15652,
											"end": 15768,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 15652,
											"end": 15768,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15652,
											"end": 15768,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15652,
											"end": 15768,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15652,
											"end": 15768,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15652,
											"end": 15768,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15652,
											"end": 15768,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16474,
											"end": 16589,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 16474,
											"end": 16589,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16474,
											"end": 16589,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16474,
											"end": 16589,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16474,
											"end": 16589,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16474,
											"end": 16589,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16474,
											"end": 16589,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6889,
											"end": 7004,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 6889,
											"end": 7004,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6955,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6981,
											"end": 6988,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6981,
											"end": 6997,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6989,
											"end": 6996,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6981,
											"end": 6997,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6981,
											"end": 6997,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6981,
											"end": 6997,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6981,
											"end": 6997,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6981,
											"end": 6997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6981,
											"end": 6997,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6981,
											"end": 6997,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6981,
											"end": 6997,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6981,
											"end": 6997,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6981,
											"end": 6997,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6981,
											"end": 6997,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6981,
											"end": 6997,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6981,
											"end": 6997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6981,
											"end": 6997,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6981,
											"end": 6997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6981,
											"end": 6997,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6981,
											"end": 6997,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6981,
											"end": 6997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6981,
											"end": 6997,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6981,
											"end": 6997,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6981,
											"end": 6997,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6974,
											"end": 6997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6974,
											"end": 6997,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6889,
											"end": 7004,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6889,
											"end": 7004,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6889,
											"end": 7004,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6889,
											"end": 7004,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13059,
											"end": 13336,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 13059,
											"end": 13336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13179,
											"end": 13187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13170,
											"end": 13187,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13170,
											"end": 13187,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13170,
											"end": 13175,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13170,
											"end": 13187,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13170,
											"end": 13187,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13170,
											"end": 13187,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13162,
											"end": 13217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 13162,
											"end": 13217,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13162,
											"end": 13217,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13162,
											"end": 13217,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13162,
											"end": 13217,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13162,
											"end": 13217,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13162,
											"end": 13217,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13162,
											"end": 13217,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13162,
											"end": 13217,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13162,
											"end": 13217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 13162,
											"end": 13217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13162,
											"end": 13217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 13162,
											"end": 13217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13162,
											"end": 13217,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 13162,
											"end": 13217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13162,
											"end": 13217,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13162,
											"end": 13217,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13162,
											"end": 13217,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13162,
											"end": 13217,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13162,
											"end": 13217,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13162,
											"end": 13217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13162,
											"end": 13217,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13162,
											"end": 13217,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 13162,
											"end": 13217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13265,
											"end": 13273,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13227,
											"end": 13245,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 13227,
											"end": 13252,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13246,
											"end": 13251,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13227,
											"end": 13252,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13227,
											"end": 13252,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13227,
											"end": 13252,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13227,
											"end": 13252,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13227,
											"end": 13252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13227,
											"end": 13252,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13227,
											"end": 13252,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13227,
											"end": 13252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13227,
											"end": 13252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13227,
											"end": 13252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13227,
											"end": 13252,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13227,
											"end": 13252,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13227,
											"end": 13252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13227,
											"end": 13252,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13227,
											"end": 13252,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13227,
											"end": 13262,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13253,
											"end": 13261,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13227,
											"end": 13262,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13227,
											"end": 13262,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13227,
											"end": 13262,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13227,
											"end": 13262,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13227,
											"end": 13262,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13227,
											"end": 13262,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13227,
											"end": 13262,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13227,
											"end": 13262,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13227,
											"end": 13262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13227,
											"end": 13262,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13227,
											"end": 13262,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13227,
											"end": 13262,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13227,
											"end": 13262,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13227,
											"end": 13262,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13227,
											"end": 13262,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13227,
											"end": 13262,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13227,
											"end": 13273,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13227,
											"end": 13273,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 13227,
											"end": 13273,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13227,
											"end": 13273,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13227,
											"end": 13273,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13227,
											"end": 13273,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 13227,
											"end": 13273,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13227,
											"end": 13273,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 13227,
											"end": 13273,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13227,
											"end": 13273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13227,
											"end": 13273,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13227,
											"end": 13273,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13227,
											"end": 13273,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13227,
											"end": 13273,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13227,
											"end": 13273,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 13227,
											"end": 13273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13227,
											"end": 13273,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13227,
											"end": 13273,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13310,
											"end": 13318,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13288,
											"end": 13329,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13288,
											"end": 13329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13303,
											"end": 13308,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13288,
											"end": 13329,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13288,
											"end": 13329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13288,
											"end": 13329,
											"name": "PUSH",
											"source": 0,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 13320,
											"end": 13328,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13288,
											"end": 13329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13288,
											"end": 13329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13288,
											"end": 13329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 13288,
											"end": 13329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13288,
											"end": 13329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13288,
											"end": 13329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 13288,
											"end": 13329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13288,
											"end": 13329,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 13288,
											"end": 13329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13288,
											"end": 13329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13288,
											"end": 13329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13288,
											"end": 13329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13288,
											"end": 13329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13288,
											"end": 13329,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13288,
											"end": 13329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13288,
											"end": 13329,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 13059,
											"end": 13336,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13059,
											"end": 13336,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13059,
											"end": 13336,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13059,
											"end": 13336,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6513,
											"end": 6780,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 6513,
											"end": 6780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6625,
											"end": 6653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 6635,
											"end": 6639,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6641,
											"end": 6643,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6645,
											"end": 6652,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6625,
											"end": 6634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 6625,
											"end": 6653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6625,
											"end": 6653,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 6625,
											"end": 6653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6671,
											"end": 6718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 6694,
											"end": 6698,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6700,
											"end": 6702,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6704,
											"end": 6711,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6713,
											"end": 6717,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6671,
											"end": 6693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 6671,
											"end": 6718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6671,
											"end": 6718,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 6671,
											"end": 6718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6663,
											"end": 6773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 6663,
											"end": 6773,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6663,
											"end": 6773,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6663,
											"end": 6773,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6663,
											"end": 6773,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6663,
											"end": 6773,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6663,
											"end": 6773,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6663,
											"end": 6773,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6663,
											"end": 6773,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6663,
											"end": 6773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 6663,
											"end": 6773,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6663,
											"end": 6773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 6663,
											"end": 6773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6663,
											"end": 6773,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 6663,
											"end": 6773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6663,
											"end": 6773,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6663,
											"end": 6773,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6663,
											"end": 6773,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6663,
											"end": 6773,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6663,
											"end": 6773,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6663,
											"end": 6773,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6663,
											"end": 6773,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6663,
											"end": 6773,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 6663,
											"end": 6773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6513,
											"end": 6780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6513,
											"end": 6780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6513,
											"end": 6780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6513,
											"end": 6780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6513,
											"end": 6780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3598,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 3506,
											"end": 3598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3557,
											"end": 3570,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3582,
											"end": 3591,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3582,
											"end": 3591,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3591,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3591,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3582,
											"end": 3591,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3591,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3582,
											"end": 3591,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3591,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3591,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3582,
											"end": 3591,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3591,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3591,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3591,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3591,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3598,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 447,
											"end": 1143,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 447,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 503,
											"end": 516,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 552,
											"end": 566,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 590,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 569,
											"end": 586,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 580,
											"end": 585,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 569,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 569,
											"end": 586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 569,
											"end": 586,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 569,
											"end": 586,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 569,
											"end": 590,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 552,
											"end": 590,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 552,
											"end": 590,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 604,
											"end": 624,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 638,
											"end": 644,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 627,
											"end": 645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "CALLDATACOPY",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 659,
											"end": 670,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 785,
											"end": 791,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 781,
											"end": 783,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 777,
											"end": 792,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 769,
											"end": 775,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 765,
											"end": 793,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 758,
											"end": 793,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 758,
											"end": 793,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 827,
											"end": 831,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 851,
											"end": 856,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 851,
											"end": 856,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 851,
											"end": 856,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 851,
											"end": 856,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 851,
											"end": 856,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 851,
											"end": 856,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 851,
											"end": 856,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 851,
											"end": 856,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 990,
											"end": 998,
											"name": "PUSH",
											"source": 6,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 985,
											"end": 987,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 978,
											"end": 983,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 974,
											"end": 988,
											"name": "MOD",
											"source": 6
										},
										{
											"begin": 969,
											"end": 999,
											"name": "BYTE",
											"source": 6
										},
										{
											"begin": 964,
											"end": 967,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 956,
											"end": 1000,
											"name": "MSTORE8",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1046,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 1035,
											"end": 1046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1077,
											"end": 1078,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1068,
											"end": 1073,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1068,
											"end": 1078,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 1064,
											"end": 1085,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1120,
											"end": 1126,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1126,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1126,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1126,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1126,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1126,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 447,
											"end": 1143,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 447,
											"end": 1143,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 447,
											"end": 1143,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 447,
											"end": 1143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7307,
											"end": 7433,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 7307,
											"end": 7433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7372,
											"end": 7376,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7424,
											"end": 7425,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7395,
											"end": 7426,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7395,
											"end": 7426,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7395,
											"end": 7412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 7404,
											"end": 7411,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7395,
											"end": 7403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 7395,
											"end": 7412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7395,
											"end": 7412,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 7395,
											"end": 7412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7395,
											"end": 7426,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7395,
											"end": 7426,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7395,
											"end": 7426,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7395,
											"end": 7426,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7388,
											"end": 7426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7388,
											"end": 7426,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7307,
											"end": 7433,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7307,
											"end": 7433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7307,
											"end": 7433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7307,
											"end": 7433,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14105,
											"end": 14936,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 14105,
											"end": 14936,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14254,
											"end": 14258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14274,
											"end": 14289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 14274,
											"end": 14276,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14274,
											"end": 14287,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14274,
											"end": 14287,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14274,
											"end": 14287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 14274,
											"end": 14289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14274,
											"end": 14289,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 14274,
											"end": 14289,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14270,
											"end": 14930,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14270,
											"end": 14930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 14270,
											"end": 14930,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14325,
											"end": 14327,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14345,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14309,
											"end": 14345,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14345,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 14346,
											"end": 14358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 14346,
											"end": 14356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 14346,
											"end": 14358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14346,
											"end": 14358,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 14346,
											"end": 14358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14360,
											"end": 14364,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 14366,
											"end": 14373,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14375,
											"end": 14379,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14380,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14309,
											"end": 14380,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14380,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14380,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14309,
											"end": 14380,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14380,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 14309,
											"end": 14380,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14380,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14380,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14309,
											"end": 14380,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 14309,
											"end": 14380,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14380,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14380,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14380,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 14309,
											"end": 14380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14380,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 14309,
											"end": 14380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14380,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14309,
											"end": 14380,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14309,
											"end": 14380,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14380,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14380,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14380,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14309,
											"end": 14380,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14380,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14380,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14380,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14380,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14380,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14380,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14380,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 14309,
											"end": 14380,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14380,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14380,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14309,
											"end": 14380,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14380,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14380,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14309,
											"end": 14380,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14380,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14309,
											"end": 14380,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14380,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14380,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14380,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14380,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14380,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14309,
											"end": 14380,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14380,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14380,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 14309,
											"end": 14380,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 14309,
											"end": 14380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14380,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 14309,
											"end": 14380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14380,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14309,
											"end": 14380,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 14309,
											"end": 14380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14305,
											"end": 14878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 14305,
											"end": 14878,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14305,
											"end": 14878,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14305,
											"end": 14878,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14305,
											"end": 14878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14305,
											"end": 14878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14305,
											"end": 14878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 14305,
											"end": 14878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 14305,
											"end": 14878,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14305,
											"end": 14878,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14305,
											"end": 14878,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14305,
											"end": 14878,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14305,
											"end": 14878,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14305,
											"end": 14878,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14305,
											"end": 14878,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 14305,
											"end": 14878,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 14305,
											"end": 14878,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14305,
											"end": 14878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14305,
											"end": 14878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14305,
											"end": 14878,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14305,
											"end": 14878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14305,
											"end": 14878,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14305,
											"end": 14878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14305,
											"end": 14878,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14305,
											"end": 14878,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14305,
											"end": 14878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14305,
											"end": 14878,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14305,
											"end": 14878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14305,
											"end": 14878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14305,
											"end": 14878,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14305,
											"end": 14878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14305,
											"end": 14878,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 14305,
											"end": 14878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 14305,
											"end": 14878,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14305,
											"end": 14878,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 14305,
											"end": 14878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14305,
											"end": 14878,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 14305,
											"end": 14878,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14305,
											"end": 14878,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14305,
											"end": 14878,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 14305,
											"end": 14878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14305,
											"end": 14878,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14564,
											"end": 14565,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14547,
											"end": 14553,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14547,
											"end": 14560,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14547,
											"end": 14565,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14543,
											"end": 14864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 14543,
											"end": 14864,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14649,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14589,
											"end": 14649,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14649,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14589,
											"end": 14649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14649,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14649,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14589,
											"end": 14649,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 14589,
											"end": 14649,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 14589,
											"end": 14649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14649,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 14589,
											"end": 14649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14649,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14589,
											"end": 14649,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14649,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14649,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14649,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14543,
											"end": 14864,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 14543,
											"end": 14864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14816,
											"end": 14822,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14810,
											"end": 14823,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14801,
											"end": 14807,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14797,
											"end": 14799,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14793,
											"end": 14808,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14786,
											"end": 14824,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14305,
											"end": 14878,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 14305,
											"end": 14878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14440,
											"end": 14481,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 14440,
											"end": 14481,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 14440,
											"end": 14481,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 14430,
											"end": 14481,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14430,
											"end": 14481,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 14430,
											"end": 14481,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14430,
											"end": 14436,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14430,
											"end": 14481,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14430,
											"end": 14481,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 14430,
											"end": 14481,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14430,
											"end": 14481,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 14423,
											"end": 14481,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14423,
											"end": 14481,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14423,
											"end": 14481,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14423,
											"end": 14481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 14423,
											"end": 14481,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14270,
											"end": 14930,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 14270,
											"end": 14930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14915,
											"end": 14919,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14908,
											"end": 14919,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14908,
											"end": 14919,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14105,
											"end": 14936,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 14105,
											"end": 14936,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14105,
											"end": 14936,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 14105,
											"end": 14936,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14105,
											"end": 14936,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14105,
											"end": 14936,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14105,
											"end": 14936,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14105,
											"end": 14936,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14105,
											"end": 14936,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10139,
											"end": 11055,
											"name": "tag",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 10139,
											"end": 11055,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10192,
											"end": 10199,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10211,
											"end": 10225,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10228,
											"end": 10229,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10211,
											"end": 10229,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10211,
											"end": 10229,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10276,
											"end": 10284,
											"name": "PUSH",
											"source": 9,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 10267,
											"end": 10272,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10267,
											"end": 10284,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 10263,
											"end": 10366,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 10263,
											"end": 10366,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10313,
											"end": 10321,
											"name": "PUSH",
											"source": 9,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 10304,
											"end": 10321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "tag",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "tag",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10349,
											"end": 10351,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10339,
											"end": 10351,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10339,
											"end": 10351,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10339,
											"end": 10351,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10339,
											"end": 10351,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10263,
											"end": 10366,
											"name": "tag",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 10263,
											"end": 10366,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10392,
											"end": 10400,
											"name": "PUSH",
											"source": 9,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 10383,
											"end": 10388,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10383,
											"end": 10400,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 10379,
											"end": 10482,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 10379,
											"end": 10482,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10429,
											"end": 10437,
											"name": "PUSH",
											"source": 9,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 10420,
											"end": 10437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "tag",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "tag",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10465,
											"end": 10467,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10455,
											"end": 10467,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10455,
											"end": 10467,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10455,
											"end": 10467,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10455,
											"end": 10467,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10379,
											"end": 10482,
											"name": "tag",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 10379,
											"end": 10482,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10508,
											"end": 10516,
											"name": "PUSH",
											"source": 9,
											"value": "2386F26FC10000"
										},
										{
											"begin": 10499,
											"end": 10504,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10499,
											"end": 10516,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 10495,
											"end": 10598,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 10495,
											"end": 10598,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10545,
											"end": 10553,
											"name": "PUSH",
											"source": 9,
											"value": "2386F26FC10000"
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 10536,
											"end": 10553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "tag",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "tag",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10581,
											"end": 10583,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 10571,
											"end": 10583,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10571,
											"end": 10583,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10571,
											"end": 10583,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10571,
											"end": 10583,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10495,
											"end": 10598,
											"name": "tag",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 10495,
											"end": 10598,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10624,
											"end": 10631,
											"name": "PUSH",
											"source": 9,
											"value": "5F5E100"
										},
										{
											"begin": 10615,
											"end": 10620,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10615,
											"end": 10631,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 10611,
											"end": 10711,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 10611,
											"end": 10711,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10660,
											"end": 10667,
											"name": "PUSH",
											"source": 9,
											"value": "5F5E100"
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 10651,
											"end": 10667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "tag",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "tag",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10695,
											"end": 10696,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 10685,
											"end": 10696,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10685,
											"end": 10696,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10685,
											"end": 10696,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10685,
											"end": 10696,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10611,
											"end": 10711,
											"name": "tag",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 10611,
											"end": 10711,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10737,
											"end": 10744,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 10728,
											"end": 10733,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10728,
											"end": 10744,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 10724,
											"end": 10824,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 10724,
											"end": 10824,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10773,
											"end": 10780,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 10764,
											"end": 10780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "tag",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "tag",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10808,
											"end": 10809,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10798,
											"end": 10809,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10798,
											"end": 10809,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10798,
											"end": 10809,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10798,
											"end": 10809,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10724,
											"end": 10824,
											"name": "tag",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 10724,
											"end": 10824,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10850,
											"end": 10857,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 10841,
											"end": 10846,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10841,
											"end": 10857,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 10837,
											"end": 10937,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 10837,
											"end": 10937,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10886,
											"end": 10893,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 10877,
											"end": 10893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "tag",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "tag",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10921,
											"end": 10922,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 10911,
											"end": 10922,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10911,
											"end": 10922,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10911,
											"end": 10922,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10911,
											"end": 10922,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10837,
											"end": 10937,
											"name": "tag",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 10837,
											"end": 10937,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 10954,
											"end": 10959,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10954,
											"end": 10970,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 10950,
											"end": 11016,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 10950,
											"end": 11016,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11000,
											"end": 11001,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 10990,
											"end": 11001,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10990,
											"end": 11001,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10990,
											"end": 11001,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10990,
											"end": 11001,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10950,
											"end": 11016,
											"name": "tag",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 10950,
											"end": 11016,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11042,
											"end": 11048,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11035,
											"end": 11048,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11035,
											"end": 11048,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11035,
											"end": 11048,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10139,
											"end": 11055,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10139,
											"end": 11055,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10139,
											"end": 11055,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10139,
											"end": 11055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "tag",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1472,
											"end": 1476,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1724,
											"end": 1725,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1709,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1725,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1725,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1725,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "323"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 11,
											"value": "323"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "326"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 11,
											"value": "326"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "328"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 11,
											"value": "328"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "330"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 11,
											"value": "330"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "333"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 11,
											"value": "333"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "335"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 11,
											"value": "335"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "tag",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1879,
											"end": 1880,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 11,
											"value": "339"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1900,
											"end": 1901,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1897,
											"end": 1910,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1983,
											"end": 1986,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1979,
											"end": 1990,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1973,
											"end": 1991,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1969,
											"end": 1970,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1964,
											"end": 1967,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1960,
											"end": 1971,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1953,
											"end": 1992,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1925,
											"end": 1927,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1918,
											"end": 1928,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "339"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2036,
											"end": 2037,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2033,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2022,
											"end": 2025,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2018,
											"end": 2034,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2011,
											"end": 2038,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1860,
											"end": 2044,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 2044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "tag",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2091,
											"end": 2097,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2144,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2138,
											"end": 2145,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2126,
											"end": 2131,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2118,
											"end": 2146,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2050,
											"end": 2152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "tag",
											"source": 11,
											"value": "274"
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2246,
											"end": 2249,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "344"
										},
										{
											"begin": 2307,
											"end": 2312,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 2274,
											"end": 2313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "tag",
											"source": 11,
											"value": "344"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "345"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2388,
											"end": 2391,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 2329,
											"end": 2400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "tag",
											"source": 11,
											"value": "345"
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "346"
										},
										{
											"begin": 2467,
											"end": 2473,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2455,
											"end": 2459,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2453,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2444,
											"end": 2460,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 2409,
											"end": 2474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "tag",
											"source": 11,
											"value": "346"
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "347"
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 2499,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "tag",
											"source": 11,
											"value": "347"
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2494,
											"end": 2497,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2490,
											"end": 2529,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2250,
											"end": 2535,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2158,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "tag",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2654,
											"end": 2658,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2694,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2741,
											"end": 2750,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2731,
											"end": 2751,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2727,
											"end": 2728,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2725,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2712,
											"end": 2729,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2705,
											"end": 2752,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "349"
										},
										{
											"begin": 2842,
											"end": 2846,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "274"
										},
										{
											"begin": 2769,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "tag",
											"source": 11,
											"value": "349"
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2541,
											"end": 2854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "tag",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2897,
											"end": 2904,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2931,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2860,
											"end": 2937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "tag",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "352"
										},
										{
											"begin": 3034,
											"end": 3039,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 3016,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "tag",
											"source": 11,
											"value": "352"
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3009,
											"end": 3014,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3006,
											"end": 3041,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "353"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3055,
											"end": 3056,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3053,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3045,
											"end": 3057,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "tag",
											"source": 11,
											"value": "353"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2943,
											"end": 3065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "tag",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3117,
											"end": 3122,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3161,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3142,
											"end": 3162,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "355"
										},
										{
											"begin": 3198,
											"end": 3203,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 3171,
											"end": 3204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "tag",
											"source": 11,
											"value": "355"
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3071,
											"end": 3210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "tag",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3275,
											"end": 3281,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3326,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3303,
											"end": 3310,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3299,
											"end": 3322,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3295,
											"end": 3327,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "357"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "358"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 3330,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "tag",
											"source": 11,
											"value": "358"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "tag",
											"source": 11,
											"value": "357"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3450,
											"end": 3451,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "359"
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3511,
											"end": 3517,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 3475,
											"end": 3528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "tag",
											"source": 11,
											"value": "359"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3421,
											"end": 3538,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3216,
											"end": 3545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "tag",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3588,
											"end": 3595,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3628,
											"end": 3670,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3621,
											"end": 3626,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3617,
											"end": 3671,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3551,
											"end": 3677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "tag",
											"source": 11,
											"value": "279"
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "362"
										},
										{
											"begin": 3767,
											"end": 3772,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 3749,
											"end": 3773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "tag",
											"source": 11,
											"value": "362"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3683,
											"end": 3779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "tag",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "364"
										},
										{
											"begin": 3890,
											"end": 3895,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "279"
										},
										{
											"begin": 3872,
											"end": 3896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "tag",
											"source": 11,
											"value": "364"
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3867,
											"end": 3870,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3860,
											"end": 3897,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3785,
											"end": 3903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "tag",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4002,
											"end": 4006,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4040,
											"end": 4042,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4029,
											"end": 4038,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4025,
											"end": 4043,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "366"
										},
										{
											"begin": 4121,
											"end": 4122,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4110,
											"end": 4119,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4106,
											"end": 4123,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4097,
											"end": 4103,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 4053,
											"end": 4124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "tag",
											"source": 11,
											"value": "366"
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3909,
											"end": 4131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "tag",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "368"
										},
										{
											"begin": 4228,
											"end": 4233,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "279"
										},
										{
											"begin": 4210,
											"end": 4234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "tag",
											"source": 11,
											"value": "368"
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4203,
											"end": 4208,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4200,
											"end": 4235,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "369"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4249,
											"end": 4250,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4246,
											"end": 4247,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4239,
											"end": 4251,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "tag",
											"source": 11,
											"value": "369"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4137,
											"end": 4259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "tag",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4311,
											"end": 4316,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4349,
											"end": 4355,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4336,
											"end": 4356,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "371"
										},
										{
											"begin": 4392,
											"end": 4397,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 4365,
											"end": 4398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "tag",
											"source": 11,
											"value": "371"
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4265,
											"end": 4404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "tag",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4478,
											"end": 4484,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4486,
											"end": 4492,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4535,
											"end": 4537,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4523,
											"end": 4532,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4514,
											"end": 4521,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4510,
											"end": 4533,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4506,
											"end": 4538,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "373"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "374"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 4541,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "tag",
											"source": 11,
											"value": "374"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "tag",
											"source": 11,
											"value": "373"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4661,
											"end": 4662,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "375"
										},
										{
											"begin": 4731,
											"end": 4738,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4722,
											"end": 4728,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4711,
											"end": 4720,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4707,
											"end": 4729,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 4686,
											"end": 4739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "tag",
											"source": 11,
											"value": "375"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4632,
											"end": 4749,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4788,
											"end": 4790,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 4859,
											"end": 4866,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4850,
											"end": 4856,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4839,
											"end": 4848,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4835,
											"end": 4857,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 4814,
											"end": 4867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "tag",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4759,
											"end": 4877,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4410,
											"end": 4884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "tag",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4967,
											"end": 4973,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4975,
											"end": 4981,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4983,
											"end": 4989,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5032,
											"end": 5034,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 5020,
											"end": 5029,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5011,
											"end": 5018,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5007,
											"end": 5030,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5003,
											"end": 5035,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "378"
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "379"
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 5038,
											"end": 5117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "tag",
											"source": 11,
											"value": "379"
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "tag",
											"source": 11,
											"value": "378"
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5158,
											"end": 5159,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "380"
										},
										{
											"begin": 5228,
											"end": 5235,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5219,
											"end": 5225,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5208,
											"end": 5217,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 5204,
											"end": 5226,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 5183,
											"end": 5236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "tag",
											"source": 11,
											"value": "380"
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5173,
											"end": 5236,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 5173,
											"end": 5236,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5129,
											"end": 5246,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5285,
											"end": 5287,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 5356,
											"end": 5363,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5347,
											"end": 5353,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5336,
											"end": 5345,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 5332,
											"end": 5354,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 5311,
											"end": 5364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "tag",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5301,
											"end": 5364,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5301,
											"end": 5364,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5374,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5413,
											"end": 5415,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "382"
										},
										{
											"begin": 5484,
											"end": 5491,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5475,
											"end": 5481,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5464,
											"end": 5473,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 5460,
											"end": 5482,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 5439,
											"end": 5492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "tag",
											"source": 11,
											"value": "382"
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5429,
											"end": 5492,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5429,
											"end": 5492,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5384,
											"end": 5502,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4890,
											"end": 5509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "tag",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5574,
											"end": 5580,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5623,
											"end": 5625,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5611,
											"end": 5620,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5602,
											"end": 5609,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5598,
											"end": 5621,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5594,
											"end": 5626,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "384"
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "385"
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 5629,
											"end": 5708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "tag",
											"source": 11,
											"value": "385"
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "tag",
											"source": 11,
											"value": "384"
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5749,
											"end": 5750,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "386"
										},
										{
											"begin": 5819,
											"end": 5826,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5810,
											"end": 5816,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5799,
											"end": 5808,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5795,
											"end": 5817,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 5774,
											"end": 5827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "tag",
											"source": 11,
											"value": "386"
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5764,
											"end": 5827,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5764,
											"end": 5827,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5720,
											"end": 5837,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5515,
											"end": 5844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "tag",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "388"
										},
										{
											"begin": 5955,
											"end": 5960,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 5937,
											"end": 5961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "tag",
											"source": 11,
											"value": "388"
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5932,
											"end": 5935,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5925,
											"end": 5962,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5850,
											"end": 5968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "tag",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6067,
											"end": 6071,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6105,
											"end": 6107,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6094,
											"end": 6103,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6090,
											"end": 6108,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6082,
											"end": 6108,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6082,
											"end": 6108,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "390"
										},
										{
											"begin": 6186,
											"end": 6187,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6175,
											"end": 6184,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6171,
											"end": 6188,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6162,
											"end": 6168,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 6118,
											"end": 6189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "tag",
											"source": 11,
											"value": "390"
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5974,
											"end": 6196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "tag",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "392"
										},
										{
											"begin": 6287,
											"end": 6292,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 6272,
											"end": 6293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "tag",
											"source": 11,
											"value": "392"
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6265,
											"end": 6270,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6262,
											"end": 6294,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "393"
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6308,
											"end": 6309,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6305,
											"end": 6306,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6298,
											"end": 6310,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "tag",
											"source": 11,
											"value": "393"
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6202,
											"end": 6318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "tag",
											"source": 11,
											"value": "285"
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6367,
											"end": 6372,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6405,
											"end": 6411,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6392,
											"end": 6412,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 6383,
											"end": 6412,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6383,
											"end": 6412,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "395"
										},
										{
											"begin": 6445,
											"end": 6450,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 6421,
											"end": 6451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "tag",
											"source": 11,
											"value": "395"
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6324,
											"end": 6457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "tag",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6528,
											"end": 6534,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6536,
											"end": 6542,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6585,
											"end": 6587,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6573,
											"end": 6582,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6564,
											"end": 6571,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6560,
											"end": 6583,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6556,
											"end": 6588,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "397"
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "398"
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 6591,
											"end": 6670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "tag",
											"source": 11,
											"value": "398"
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "tag",
											"source": 11,
											"value": "397"
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6711,
											"end": 6712,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "399"
										},
										{
											"begin": 6781,
											"end": 6788,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6772,
											"end": 6778,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6761,
											"end": 6770,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6757,
											"end": 6779,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 6736,
											"end": 6789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "tag",
											"source": 11,
											"value": "399"
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6726,
											"end": 6789,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6726,
											"end": 6789,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6682,
											"end": 6799,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6838,
											"end": 6840,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "400"
										},
										{
											"begin": 6906,
											"end": 6913,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6897,
											"end": 6903,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6886,
											"end": 6895,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6882,
											"end": 6904,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "285"
										},
										{
											"begin": 6864,
											"end": 6914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "tag",
											"source": 11,
											"value": "400"
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6854,
											"end": 6914,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6854,
											"end": 6914,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6809,
											"end": 6924,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6463,
											"end": 6931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6937,
											"end": 7054,
											"name": "tag",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 6937,
											"end": 7054,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7046,
											"end": 7047,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7043,
											"end": 7044,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7036,
											"end": 7048,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7060,
											"end": 7177,
											"name": "tag",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 7060,
											"end": 7177,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7169,
											"end": 7170,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7166,
											"end": 7167,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7159,
											"end": 7171,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7183,
											"end": 7363,
											"name": "tag",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 7183,
											"end": 7363,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7231,
											"end": 7308,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7228,
											"end": 7229,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7221,
											"end": 7309,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7328,
											"end": 7332,
											"name": "PUSH",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 7325,
											"end": 7326,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7318,
											"end": 7333,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7352,
											"end": 7356,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 7349,
											"end": 7350,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7342,
											"end": 7357,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "tag",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "405"
										},
										{
											"begin": 7474,
											"end": 7478,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 7452,
											"end": 7479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "tag",
											"source": 11,
											"value": "405"
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7444,
											"end": 7450,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7440,
											"end": 7480,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7582,
											"end": 7588,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7570,
											"end": 7580,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7567,
											"end": 7589,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 7546,
											"end": 7564,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7534,
											"end": 7544,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7531,
											"end": 7565,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 7528,
											"end": 7590,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "406"
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "407"
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 7593,
											"end": 7611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "tag",
											"source": 11,
											"value": "407"
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "tag",
											"source": 11,
											"value": "406"
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7633,
											"end": 7643,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7629,
											"end": 7631,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7622,
											"end": 7644,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7412,
											"end": 7650,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7369,
											"end": 7650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "tag",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7690,
											"end": 7696,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "409"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 7717,
											"end": 7737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "tag",
											"source": 11,
											"value": "409"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7707,
											"end": 7737,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7707,
											"end": 7737,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "410"
										},
										{
											"begin": 7774,
											"end": 7778,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7766,
											"end": 7772,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 7746,
											"end": 7779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "tag",
											"source": 11,
											"value": "410"
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7656,
											"end": 7785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "tag",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7852,
											"end": 7856,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7942,
											"end": 7960,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7934,
											"end": 7940,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7931,
											"end": 7961,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "412"
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "413"
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 7964,
											"end": 7982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "tag",
											"source": 11,
											"value": "413"
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "tag",
											"source": 11,
											"value": "412"
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "414"
										},
										{
											"begin": 8024,
											"end": 8030,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 8002,
											"end": 8031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "tag",
											"source": 11,
											"value": "414"
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7994,
											"end": 8031,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7994,
											"end": 8031,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8086,
											"end": 8090,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8080,
											"end": 8084,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8076,
											"end": 8091,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8068,
											"end": 8091,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8068,
											"end": 8091,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7791,
											"end": 8098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "tag",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8201,
											"end": 8207,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8196,
											"end": 8199,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8191,
											"end": 8194,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8178,
											"end": 8208,
											"name": "CALLDATACOPY",
											"source": 11
										},
										{
											"begin": 8242,
											"end": 8243,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8233,
											"end": 8239,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8228,
											"end": 8231,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8224,
											"end": 8240,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8217,
											"end": 8244,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8104,
											"end": 8250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "tag",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8333,
											"end": 8338,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "417"
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "418"
										},
										{
											"begin": 8415,
											"end": 8421,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 8374,
											"end": 8422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "tag",
											"source": 11,
											"value": "418"
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 8358,
											"end": 8423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "tag",
											"source": 11,
											"value": "417"
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8349,
											"end": 8423,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8349,
											"end": 8423,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8446,
											"end": 8452,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8439,
											"end": 8444,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8432,
											"end": 8453,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8484,
											"end": 8488,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8477,
											"end": 8482,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8473,
											"end": 8489,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8522,
											"end": 8525,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8513,
											"end": 8519,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8508,
											"end": 8511,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8504,
											"end": 8520,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8501,
											"end": 8526,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "419"
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "420"
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 8529,
											"end": 8608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "tag",
											"source": 11,
											"value": "420"
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "tag",
											"source": 11,
											"value": "419"
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "421"
										},
										{
											"begin": 8666,
											"end": 8672,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8661,
											"end": 8664,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8656,
											"end": 8659,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 8619,
											"end": 8673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "tag",
											"source": 11,
											"value": "421"
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8339,
											"end": 8679,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8256,
											"end": 8679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "tag",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8753,
											"end": 8758,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8802,
											"end": 8805,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8795,
											"end": 8799,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 8787,
											"end": 8793,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8783,
											"end": 8800,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8779,
											"end": 8806,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "423"
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "424"
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 8810,
											"end": 8889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "tag",
											"source": 11,
											"value": "424"
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "tag",
											"source": 11,
											"value": "423"
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8927,
											"end": 8933,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8914,
											"end": 8934,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "425"
										},
										{
											"begin": 9026,
											"end": 9029,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 9018,
											"end": 9024,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9011,
											"end": 9015,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9003,
											"end": 9009,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 8999,
											"end": 9016,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 8952,
											"end": 9030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "tag",
											"source": 11,
											"value": "425"
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8943,
											"end": 9030,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8943,
											"end": 9030,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8759,
											"end": 9036,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8698,
											"end": 9036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "tag",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9137,
											"end": 9143,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9145,
											"end": 9151,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9153,
											"end": 9159,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9161,
											"end": 9167,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9210,
											"end": 9213,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 9198,
											"end": 9207,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 9189,
											"end": 9196,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 9185,
											"end": 9208,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 9181,
											"end": 9214,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "427"
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "428"
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 9217,
											"end": 9296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "tag",
											"source": 11,
											"value": "428"
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "tag",
											"source": 11,
											"value": "427"
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9337,
											"end": 9338,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "429"
										},
										{
											"begin": 9407,
											"end": 9414,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 9398,
											"end": 9404,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9387,
											"end": 9396,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 9383,
											"end": 9405,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 9362,
											"end": 9415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "tag",
											"source": 11,
											"value": "429"
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9352,
											"end": 9415,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 9352,
											"end": 9415,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9308,
											"end": 9425,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9464,
											"end": 9466,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "430"
										},
										{
											"begin": 9535,
											"end": 9542,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 9526,
											"end": 9532,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9515,
											"end": 9524,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 9511,
											"end": 9533,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 9490,
											"end": 9543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "tag",
											"source": 11,
											"value": "430"
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9480,
											"end": 9543,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 9480,
											"end": 9543,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9435,
											"end": 9553,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9592,
											"end": 9594,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "431"
										},
										{
											"begin": 9663,
											"end": 9670,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 9654,
											"end": 9660,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9643,
											"end": 9652,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 9639,
											"end": 9661,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 9618,
											"end": 9671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "tag",
											"source": 11,
											"value": "431"
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9608,
											"end": 9671,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9608,
											"end": 9671,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9563,
											"end": 9681,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9748,
											"end": 9750,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 9737,
											"end": 9746,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 9733,
											"end": 9751,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9720,
											"end": 9752,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 9779,
											"end": 9797,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9771,
											"end": 9777,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9768,
											"end": 9798,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "432"
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "433"
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 9801,
											"end": 9880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "tag",
											"source": 11,
											"value": "433"
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "tag",
											"source": 11,
											"value": "432"
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "434"
										},
										{
											"begin": 9960,
											"end": 9967,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 9951,
											"end": 9957,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9940,
											"end": 9949,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 9936,
											"end": 9958,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 9906,
											"end": 9968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "tag",
											"source": 11,
											"value": "434"
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9896,
											"end": 9968,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9896,
											"end": 9968,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9691,
											"end": 9978,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9042,
											"end": 9985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "tag",
											"source": 11,
											"value": "81"
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10059,
											"end": 10065,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10067,
											"end": 10073,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10116,
											"end": 10118,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 10104,
											"end": 10113,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10095,
											"end": 10102,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 10091,
											"end": 10114,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 10087,
											"end": 10119,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "436"
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "437"
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 10122,
											"end": 10201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "tag",
											"source": 11,
											"value": "437"
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "tag",
											"source": 11,
											"value": "436"
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10242,
											"end": 10243,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "438"
										},
										{
											"begin": 10312,
											"end": 10319,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 10303,
											"end": 10309,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10292,
											"end": 10301,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 10288,
											"end": 10310,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 10267,
											"end": 10320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "tag",
											"source": 11,
											"value": "438"
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10257,
											"end": 10320,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10257,
											"end": 10320,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10213,
											"end": 10330,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10369,
											"end": 10371,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "439"
										},
										{
											"begin": 10440,
											"end": 10447,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 10431,
											"end": 10437,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10420,
											"end": 10429,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 10416,
											"end": 10438,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 10395,
											"end": 10448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "tag",
											"source": 11,
											"value": "439"
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10385,
											"end": 10448,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10385,
											"end": 10448,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10340,
											"end": 10458,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9991,
											"end": 10465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10471,
											"end": 10651,
											"name": "tag",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 10471,
											"end": 10651,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10519,
											"end": 10596,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10516,
											"end": 10517,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10509,
											"end": 10597,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10616,
											"end": 10620,
											"name": "PUSH",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 10613,
											"end": 10614,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 10606,
											"end": 10621,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10640,
											"end": 10644,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 10637,
											"end": 10638,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10630,
											"end": 10645,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "tag",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10701,
											"end": 10707,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10738,
											"end": 10739,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 10732,
											"end": 10736,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10728,
											"end": 10740,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 10718,
											"end": 10740,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10718,
											"end": 10740,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10785,
											"end": 10786,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 10779,
											"end": 10783,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10775,
											"end": 10787,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10806,
											"end": 10824,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "442"
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10862,
											"end": 10866,
											"name": "PUSH",
											"source": 11,
											"value": "7F"
										},
										{
											"begin": 10854,
											"end": 10860,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10850,
											"end": 10867,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10840,
											"end": 10867,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10840,
											"end": 10867,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "tag",
											"source": 11,
											"value": "442"
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10924,
											"end": 10926,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10916,
											"end": 10922,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10913,
											"end": 10927,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 10893,
											"end": 10911,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10890,
											"end": 10928,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "443"
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "444"
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 10943,
											"end": 10961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "tag",
											"source": 11,
											"value": "444"
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "tag",
											"source": 11,
											"value": "443"
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10708,
											"end": 10977,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10657,
											"end": 10977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10983,
											"end": 11203,
											"name": "tag",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 10983,
											"end": 11203,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11123,
											"end": 11157,
											"name": "PUSH",
											"source": 11,
											"value": "4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
										},
										{
											"begin": 11119,
											"end": 11120,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11111,
											"end": 11117,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11107,
											"end": 11121,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11100,
											"end": 11158,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11192,
											"end": 11195,
											"name": "PUSH",
											"source": 11,
											"value": "7200000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11187,
											"end": 11189,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11179,
											"end": 11185,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11175,
											"end": 11190,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11168,
											"end": 11196,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10983,
											"end": 11203,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10983,
											"end": 11203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11209,
											"end": 11575,
											"name": "tag",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 11209,
											"end": 11575,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11351,
											"end": 11354,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11372,
											"end": 11439,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "447"
										},
										{
											"begin": 11436,
											"end": 11438,
											"name": "PUSH",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 11431,
											"end": 11434,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11372,
											"end": 11439,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 11372,
											"end": 11439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11372,
											"end": 11439,
											"name": "tag",
											"source": 11,
											"value": "447"
										},
										{
											"begin": 11372,
											"end": 11439,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11365,
											"end": 11439,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11365,
											"end": 11439,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11448,
											"end": 11541,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "448"
										},
										{
											"begin": 11537,
											"end": 11540,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11448,
											"end": 11541,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 11448,
											"end": 11541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11448,
											"end": 11541,
											"name": "tag",
											"source": 11,
											"value": "448"
										},
										{
											"begin": 11448,
											"end": 11541,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11566,
											"end": 11568,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11561,
											"end": 11564,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11557,
											"end": 11569,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11550,
											"end": 11569,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11550,
											"end": 11569,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11209,
											"end": 11575,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11209,
											"end": 11575,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11209,
											"end": 11575,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11209,
											"end": 11575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11581,
											"end": 12000,
											"name": "tag",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 11581,
											"end": 12000,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11747,
											"end": 11751,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11785,
											"end": 11787,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11774,
											"end": 11783,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11770,
											"end": 11788,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11762,
											"end": 11788,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11762,
											"end": 11788,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11834,
											"end": 11843,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11828,
											"end": 11832,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11824,
											"end": 11844,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 11820,
											"end": 11821,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11809,
											"end": 11818,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11805,
											"end": 11822,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11798,
											"end": 11845,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11862,
											"end": 11993,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "450"
										},
										{
											"begin": 11988,
											"end": 11992,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11862,
											"end": 11993,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 11862,
											"end": 11993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11862,
											"end": 11993,
											"name": "tag",
											"source": 11,
											"value": "450"
										},
										{
											"begin": 11862,
											"end": 11993,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11854,
											"end": 11993,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11854,
											"end": 11993,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11581,
											"end": 12000,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11581,
											"end": 12000,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11581,
											"end": 12000,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11581,
											"end": 12000,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12006,
											"end": 12254,
											"name": "tag",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 12006,
											"end": 12254,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12146,
											"end": 12180,
											"name": "PUSH",
											"source": 11,
											"value": "4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F"
										},
										{
											"begin": 12142,
											"end": 12143,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12134,
											"end": 12140,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12130,
											"end": 12144,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12123,
											"end": 12181,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12215,
											"end": 12246,
											"name": "PUSH",
											"source": 11,
											"value": "6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000"
										},
										{
											"begin": 12210,
											"end": 12212,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12202,
											"end": 12208,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12198,
											"end": 12213,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12191,
											"end": 12247,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12006,
											"end": 12254,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12006,
											"end": 12254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12260,
											"end": 12626,
											"name": "tag",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 12260,
											"end": 12626,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12402,
											"end": 12405,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12423,
											"end": 12490,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "453"
										},
										{
											"begin": 12487,
											"end": 12489,
											"name": "PUSH",
											"source": 11,
											"value": "3D"
										},
										{
											"begin": 12482,
											"end": 12485,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12423,
											"end": 12490,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 12423,
											"end": 12490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12423,
											"end": 12490,
											"name": "tag",
											"source": 11,
											"value": "453"
										},
										{
											"begin": 12423,
											"end": 12490,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12416,
											"end": 12490,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12416,
											"end": 12490,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12499,
											"end": 12592,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "454"
										},
										{
											"begin": 12588,
											"end": 12591,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12499,
											"end": 12592,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 12499,
											"end": 12592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12499,
											"end": 12592,
											"name": "tag",
											"source": 11,
											"value": "454"
										},
										{
											"begin": 12499,
											"end": 12592,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12617,
											"end": 12619,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 12612,
											"end": 12615,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12608,
											"end": 12620,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12601,
											"end": 12620,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12601,
											"end": 12620,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12260,
											"end": 12626,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12260,
											"end": 12626,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12260,
											"end": 12626,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12260,
											"end": 12626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12632,
											"end": 13051,
											"name": "tag",
											"source": 11,
											"value": "111"
										},
										{
											"begin": 12632,
											"end": 13051,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12798,
											"end": 12802,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12836,
											"end": 12838,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12825,
											"end": 12834,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12821,
											"end": 12839,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12813,
											"end": 12839,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12813,
											"end": 12839,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12885,
											"end": 12894,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12879,
											"end": 12883,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12875,
											"end": 12895,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 12871,
											"end": 12872,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12860,
											"end": 12869,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12856,
											"end": 12873,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12849,
											"end": 12896,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12913,
											"end": 13044,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "456"
										},
										{
											"begin": 13039,
											"end": 13043,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12913,
											"end": 13044,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 12913,
											"end": 13044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12913,
											"end": 13044,
											"name": "tag",
											"source": 11,
											"value": "456"
										},
										{
											"begin": 12913,
											"end": 13044,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12905,
											"end": 13044,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12905,
											"end": 13044,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12632,
											"end": 13051,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12632,
											"end": 13051,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12632,
											"end": 13051,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12632,
											"end": 13051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13057,
											"end": 13289,
											"name": "tag",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 13057,
											"end": 13289,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13197,
											"end": 13231,
											"name": "PUSH",
											"source": 11,
											"value": "4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65"
										},
										{
											"begin": 13193,
											"end": 13194,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13185,
											"end": 13191,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13181,
											"end": 13195,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13174,
											"end": 13232,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13266,
											"end": 13281,
											"name": "PUSH",
											"source": 11,
											"value": "72206F7220617070726F76656400000000000000000000000000000000000000"
										},
										{
											"begin": 13261,
											"end": 13263,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 13253,
											"end": 13259,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13249,
											"end": 13264,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13242,
											"end": 13282,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13057,
											"end": 13289,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13057,
											"end": 13289,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13295,
											"end": 13661,
											"name": "tag",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 13295,
											"end": 13661,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13437,
											"end": 13440,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13458,
											"end": 13525,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "459"
										},
										{
											"begin": 13522,
											"end": 13524,
											"name": "PUSH",
											"source": 11,
											"value": "2D"
										},
										{
											"begin": 13517,
											"end": 13520,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13458,
											"end": 13525,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 13458,
											"end": 13525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13458,
											"end": 13525,
											"name": "tag",
											"source": 11,
											"value": "459"
										},
										{
											"begin": 13458,
											"end": 13525,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13451,
											"end": 13525,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13451,
											"end": 13525,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13534,
											"end": 13627,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "460"
										},
										{
											"begin": 13623,
											"end": 13626,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13534,
											"end": 13627,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 13534,
											"end": 13627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13534,
											"end": 13627,
											"name": "tag",
											"source": 11,
											"value": "460"
										},
										{
											"begin": 13534,
											"end": 13627,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13652,
											"end": 13654,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 13647,
											"end": 13650,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13643,
											"end": 13655,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13636,
											"end": 13655,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13636,
											"end": 13655,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13295,
											"end": 13661,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13295,
											"end": 13661,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13295,
											"end": 13661,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13295,
											"end": 13661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13667,
											"end": 14086,
											"name": "tag",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 13667,
											"end": 14086,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13833,
											"end": 13837,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13871,
											"end": 13873,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 13860,
											"end": 13869,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13856,
											"end": 13874,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13848,
											"end": 13874,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13848,
											"end": 13874,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13920,
											"end": 13929,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13914,
											"end": 13918,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13910,
											"end": 13930,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 13906,
											"end": 13907,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13895,
											"end": 13904,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13891,
											"end": 13908,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13884,
											"end": 13931,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13948,
											"end": 14079,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "462"
										},
										{
											"begin": 14074,
											"end": 14078,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13948,
											"end": 14079,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 13948,
											"end": 14079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13948,
											"end": 14079,
											"name": "tag",
											"source": 11,
											"value": "462"
										},
										{
											"begin": 13948,
											"end": 14079,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13940,
											"end": 14079,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13940,
											"end": 14079,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13667,
											"end": 14086,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13667,
											"end": 14086,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13667,
											"end": 14086,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13667,
											"end": 14086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14092,
											"end": 14316,
											"name": "tag",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 14092,
											"end": 14316,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14232,
											"end": 14266,
											"name": "PUSH",
											"source": 11,
											"value": "4552433732313A207472616E736665722066726F6D20696E636F727265637420"
										},
										{
											"begin": 14228,
											"end": 14229,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14220,
											"end": 14226,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14216,
											"end": 14230,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14209,
											"end": 14267,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14301,
											"end": 14308,
											"name": "PUSH",
											"source": 11,
											"value": "6F776E6572000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14296,
											"end": 14298,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14288,
											"end": 14294,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14284,
											"end": 14299,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14277,
											"end": 14309,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14092,
											"end": 14316,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14092,
											"end": 14316,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14322,
											"end": 14688,
											"name": "tag",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 14322,
											"end": 14688,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14464,
											"end": 14467,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14485,
											"end": 14552,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "465"
										},
										{
											"begin": 14549,
											"end": 14551,
											"name": "PUSH",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 14544,
											"end": 14547,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14485,
											"end": 14552,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 14485,
											"end": 14552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14485,
											"end": 14552,
											"name": "tag",
											"source": 11,
											"value": "465"
										},
										{
											"begin": 14485,
											"end": 14552,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14478,
											"end": 14552,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14478,
											"end": 14552,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14561,
											"end": 14654,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "466"
										},
										{
											"begin": 14650,
											"end": 14653,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14561,
											"end": 14654,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 14561,
											"end": 14654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14561,
											"end": 14654,
											"name": "tag",
											"source": 11,
											"value": "466"
										},
										{
											"begin": 14561,
											"end": 14654,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14679,
											"end": 14681,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 14674,
											"end": 14677,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14670,
											"end": 14682,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14663,
											"end": 14682,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14663,
											"end": 14682,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14322,
											"end": 14688,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14322,
											"end": 14688,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14322,
											"end": 14688,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14322,
											"end": 14688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14694,
											"end": 15113,
											"name": "tag",
											"source": 11,
											"value": "126"
										},
										{
											"begin": 14694,
											"end": 15113,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14860,
											"end": 14864,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14898,
											"end": 14900,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14887,
											"end": 14896,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14883,
											"end": 14901,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14875,
											"end": 14901,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14875,
											"end": 14901,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14947,
											"end": 14956,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14941,
											"end": 14945,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14937,
											"end": 14957,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 14933,
											"end": 14934,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14922,
											"end": 14931,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14918,
											"end": 14935,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14911,
											"end": 14958,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14975,
											"end": 15106,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "468"
										},
										{
											"begin": 15101,
											"end": 15105,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14975,
											"end": 15106,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 14975,
											"end": 15106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14975,
											"end": 15106,
											"name": "tag",
											"source": 11,
											"value": "468"
										},
										{
											"begin": 14975,
											"end": 15106,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14967,
											"end": 15106,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14967,
											"end": 15106,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14694,
											"end": 15113,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14694,
											"end": 15113,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14694,
											"end": 15113,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14694,
											"end": 15113,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15119,
											"end": 15293,
											"name": "tag",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 15119,
											"end": 15293,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15259,
											"end": 15285,
											"name": "PUSH",
											"source": 11,
											"value": "4552433732313A20696E76616C696420746F6B656E2049440000000000000000"
										},
										{
											"begin": 15255,
											"end": 15256,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15247,
											"end": 15253,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15243,
											"end": 15257,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15236,
											"end": 15286,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15119,
											"end": 15293,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15119,
											"end": 15293,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15299,
											"end": 15665,
											"name": "tag",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 15299,
											"end": 15665,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15441,
											"end": 15444,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15462,
											"end": 15529,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "471"
										},
										{
											"begin": 15526,
											"end": 15528,
											"name": "PUSH",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 15521,
											"end": 15524,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 15462,
											"end": 15529,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 15462,
											"end": 15529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15462,
											"end": 15529,
											"name": "tag",
											"source": 11,
											"value": "471"
										},
										{
											"begin": 15462,
											"end": 15529,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15455,
											"end": 15529,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15455,
											"end": 15529,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15538,
											"end": 15631,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "472"
										},
										{
											"begin": 15627,
											"end": 15630,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15538,
											"end": 15631,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 15538,
											"end": 15631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15538,
											"end": 15631,
											"name": "tag",
											"source": 11,
											"value": "472"
										},
										{
											"begin": 15538,
											"end": 15631,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15656,
											"end": 15658,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15651,
											"end": 15654,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15647,
											"end": 15659,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15640,
											"end": 15659,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15640,
											"end": 15659,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15299,
											"end": 15665,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15299,
											"end": 15665,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15299,
											"end": 15665,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15299,
											"end": 15665,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15671,
											"end": 16090,
											"name": "tag",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 15671,
											"end": 16090,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15837,
											"end": 15841,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15875,
											"end": 15877,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15864,
											"end": 15873,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15860,
											"end": 15878,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15852,
											"end": 15878,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15852,
											"end": 15878,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15924,
											"end": 15933,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15918,
											"end": 15922,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15914,
											"end": 15934,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 15910,
											"end": 15911,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15899,
											"end": 15908,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 15895,
											"end": 15912,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15888,
											"end": 15935,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15952,
											"end": 16083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "474"
										},
										{
											"begin": 16078,
											"end": 16082,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15952,
											"end": 16083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 15952,
											"end": 16083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15952,
											"end": 16083,
											"name": "tag",
											"source": 11,
											"value": "474"
										},
										{
											"begin": 15952,
											"end": 16083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15944,
											"end": 16083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15944,
											"end": 16083,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15671,
											"end": 16090,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15671,
											"end": 16090,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15671,
											"end": 16090,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15671,
											"end": 16090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16096,
											"end": 16324,
											"name": "tag",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 16096,
											"end": 16324,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16236,
											"end": 16270,
											"name": "PUSH",
											"source": 11,
											"value": "4552433732313A2061646472657373207A65726F206973206E6F742061207661"
										},
										{
											"begin": 16232,
											"end": 16233,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16224,
											"end": 16230,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16220,
											"end": 16234,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16213,
											"end": 16271,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16305,
											"end": 16316,
											"name": "PUSH",
											"source": 11,
											"value": "6C6964206F776E65720000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16300,
											"end": 16302,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 16292,
											"end": 16298,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16288,
											"end": 16303,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16281,
											"end": 16317,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16096,
											"end": 16324,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16096,
											"end": 16324,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16330,
											"end": 16696,
											"name": "tag",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 16330,
											"end": 16696,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16472,
											"end": 16475,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16493,
											"end": 16560,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "477"
										},
										{
											"begin": 16557,
											"end": 16559,
											"name": "PUSH",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 16552,
											"end": 16555,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 16493,
											"end": 16560,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 16493,
											"end": 16560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16493,
											"end": 16560,
											"name": "tag",
											"source": 11,
											"value": "477"
										},
										{
											"begin": 16493,
											"end": 16560,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16486,
											"end": 16560,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16486,
											"end": 16560,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16569,
											"end": 16662,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "478"
										},
										{
											"begin": 16658,
											"end": 16661,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16569,
											"end": 16662,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 16569,
											"end": 16662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16569,
											"end": 16662,
											"name": "tag",
											"source": 11,
											"value": "478"
										},
										{
											"begin": 16569,
											"end": 16662,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16687,
											"end": 16689,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 16682,
											"end": 16685,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16678,
											"end": 16690,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16671,
											"end": 16690,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16671,
											"end": 16690,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16330,
											"end": 16696,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16330,
											"end": 16696,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16330,
											"end": 16696,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16330,
											"end": 16696,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16702,
											"end": 17121,
											"name": "tag",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 16702,
											"end": 17121,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16868,
											"end": 16872,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16906,
											"end": 16908,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 16895,
											"end": 16904,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16891,
											"end": 16909,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16883,
											"end": 16909,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16883,
											"end": 16909,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16955,
											"end": 16964,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16949,
											"end": 16953,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16945,
											"end": 16965,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 16941,
											"end": 16942,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16930,
											"end": 16939,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 16926,
											"end": 16943,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16919,
											"end": 16966,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16983,
											"end": 17114,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "480"
										},
										{
											"begin": 17109,
											"end": 17113,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16983,
											"end": 17114,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 16983,
											"end": 17114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16983,
											"end": 17114,
											"name": "tag",
											"source": 11,
											"value": "480"
										},
										{
											"begin": 16983,
											"end": 17114,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16975,
											"end": 17114,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16975,
											"end": 17114,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16702,
											"end": 17121,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16702,
											"end": 17121,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16702,
											"end": 17121,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16702,
											"end": 17121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17127,
											"end": 17275,
											"name": "tag",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 17127,
											"end": 17275,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17229,
											"end": 17240,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17266,
											"end": 17269,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17251,
											"end": 17269,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17251,
											"end": 17269,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17127,
											"end": 17275,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 17127,
											"end": 17275,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17127,
											"end": 17275,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17127,
											"end": 17275,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17127,
											"end": 17275,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17281,
											"end": 17671,
											"name": "tag",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 17281,
											"end": 17671,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17387,
											"end": 17390,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17415,
											"end": 17454,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "483"
										},
										{
											"begin": 17448,
											"end": 17453,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17415,
											"end": 17454,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 17415,
											"end": 17454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17415,
											"end": 17454,
											"name": "tag",
											"source": 11,
											"value": "483"
										},
										{
											"begin": 17415,
											"end": 17454,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17470,
											"end": 17559,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "484"
										},
										{
											"begin": 17552,
											"end": 17558,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17547,
											"end": 17550,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 17470,
											"end": 17559,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 17470,
											"end": 17559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17470,
											"end": 17559,
											"name": "tag",
											"source": 11,
											"value": "484"
										},
										{
											"begin": 17470,
											"end": 17559,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17463,
											"end": 17559,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 17463,
											"end": 17559,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17568,
											"end": 17633,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "485"
										},
										{
											"begin": 17626,
											"end": 17632,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17621,
											"end": 17624,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 17614,
											"end": 17618,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 17607,
											"end": 17612,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 17603,
											"end": 17619,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17568,
											"end": 17633,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 17568,
											"end": 17633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17568,
											"end": 17633,
											"name": "tag",
											"source": 11,
											"value": "485"
										},
										{
											"begin": 17568,
											"end": 17633,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17658,
											"end": 17664,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 17653,
											"end": 17656,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 17649,
											"end": 17665,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17642,
											"end": 17665,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17642,
											"end": 17665,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17391,
											"end": 17671,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17281,
											"end": 17671,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 17281,
											"end": 17671,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17281,
											"end": 17671,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17281,
											"end": 17671,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17281,
											"end": 17671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17677,
											"end": 18112,
											"name": "tag",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 17677,
											"end": 18112,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17857,
											"end": 17860,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17879,
											"end": 17974,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "487"
										},
										{
											"begin": 17970,
											"end": 17973,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17961,
											"end": 17967,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 17879,
											"end": 17974,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 17879,
											"end": 17974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17879,
											"end": 17974,
											"name": "tag",
											"source": 11,
											"value": "487"
										},
										{
											"begin": 17879,
											"end": 17974,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17872,
											"end": 17974,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17872,
											"end": 17974,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17991,
											"end": 18086,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "488"
										},
										{
											"begin": 18082,
											"end": 18085,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18073,
											"end": 18079,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 17991,
											"end": 18086,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 17991,
											"end": 18086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17991,
											"end": 18086,
											"name": "tag",
											"source": 11,
											"value": "488"
										},
										{
											"begin": 17991,
											"end": 18086,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17984,
											"end": 18086,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17984,
											"end": 18086,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18103,
											"end": 18106,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18096,
											"end": 18106,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18096,
											"end": 18106,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17677,
											"end": 18112,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 17677,
											"end": 18112,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 17677,
											"end": 18112,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17677,
											"end": 18112,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17677,
											"end": 18112,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17677,
											"end": 18112,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18118,
											"end": 18293,
											"name": "tag",
											"source": 11,
											"value": "309"
										},
										{
											"begin": 18118,
											"end": 18293,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18258,
											"end": 18285,
											"name": "PUSH",
											"source": 11,
											"value": "4552433732313A20617070726F766520746F2063616C6C657200000000000000"
										},
										{
											"begin": 18254,
											"end": 18255,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18246,
											"end": 18252,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18242,
											"end": 18256,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18235,
											"end": 18286,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18118,
											"end": 18293,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18118,
											"end": 18293,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18299,
											"end": 18665,
											"name": "tag",
											"source": 11,
											"value": "310"
										},
										{
											"begin": 18299,
											"end": 18665,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18441,
											"end": 18444,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18462,
											"end": 18529,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "491"
										},
										{
											"begin": 18526,
											"end": 18528,
											"name": "PUSH",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 18521,
											"end": 18524,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 18462,
											"end": 18529,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 18462,
											"end": 18529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18462,
											"end": 18529,
											"name": "tag",
											"source": 11,
											"value": "491"
										},
										{
											"begin": 18462,
											"end": 18529,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18455,
											"end": 18529,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 18455,
											"end": 18529,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18538,
											"end": 18631,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "492"
										},
										{
											"begin": 18627,
											"end": 18630,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18538,
											"end": 18631,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "309"
										},
										{
											"begin": 18538,
											"end": 18631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18538,
											"end": 18631,
											"name": "tag",
											"source": 11,
											"value": "492"
										},
										{
											"begin": 18538,
											"end": 18631,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18656,
											"end": 18658,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 18651,
											"end": 18654,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18647,
											"end": 18659,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18640,
											"end": 18659,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18640,
											"end": 18659,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18299,
											"end": 18665,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 18299,
											"end": 18665,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18299,
											"end": 18665,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18299,
											"end": 18665,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18671,
											"end": 19090,
											"name": "tag",
											"source": 11,
											"value": "195"
										},
										{
											"begin": 18671,
											"end": 19090,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18837,
											"end": 18841,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18875,
											"end": 18877,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 18864,
											"end": 18873,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18860,
											"end": 18878,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18852,
											"end": 18878,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18852,
											"end": 18878,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18924,
											"end": 18933,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18918,
											"end": 18922,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18914,
											"end": 18934,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 18910,
											"end": 18911,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18899,
											"end": 18908,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 18895,
											"end": 18912,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18888,
											"end": 18935,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18952,
											"end": 19083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "494"
										},
										{
											"begin": 19078,
											"end": 19082,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18952,
											"end": 19083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "310"
										},
										{
											"begin": 18952,
											"end": 19083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18952,
											"end": 19083,
											"name": "tag",
											"source": 11,
											"value": "494"
										},
										{
											"begin": 18952,
											"end": 19083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18944,
											"end": 19083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18944,
											"end": 19083,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18671,
											"end": 19090,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 18671,
											"end": 19090,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18671,
											"end": 19090,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18671,
											"end": 19090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19096,
											"end": 19333,
											"name": "tag",
											"source": 11,
											"value": "311"
										},
										{
											"begin": 19096,
											"end": 19333,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19236,
											"end": 19270,
											"name": "PUSH",
											"source": 11,
											"value": "4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
										},
										{
											"begin": 19232,
											"end": 19233,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19224,
											"end": 19230,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19220,
											"end": 19234,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19213,
											"end": 19271,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19305,
											"end": 19325,
											"name": "PUSH",
											"source": 11,
											"value": "63656976657220696D706C656D656E7465720000000000000000000000000000"
										},
										{
											"begin": 19300,
											"end": 19302,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 19292,
											"end": 19298,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19288,
											"end": 19303,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19281,
											"end": 19326,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19096,
											"end": 19333,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19096,
											"end": 19333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19339,
											"end": 19705,
											"name": "tag",
											"source": 11,
											"value": "312"
										},
										{
											"begin": 19339,
											"end": 19705,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19481,
											"end": 19484,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19502,
											"end": 19569,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "497"
										},
										{
											"begin": 19566,
											"end": 19568,
											"name": "PUSH",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 19561,
											"end": 19564,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 19502,
											"end": 19569,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 19502,
											"end": 19569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19502,
											"end": 19569,
											"name": "tag",
											"source": 11,
											"value": "497"
										},
										{
											"begin": 19502,
											"end": 19569,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19495,
											"end": 19569,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 19495,
											"end": 19569,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19578,
											"end": 19671,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "498"
										},
										{
											"begin": 19667,
											"end": 19670,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19578,
											"end": 19671,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "311"
										},
										{
											"begin": 19578,
											"end": 19671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19578,
											"end": 19671,
											"name": "tag",
											"source": 11,
											"value": "498"
										},
										{
											"begin": 19578,
											"end": 19671,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19696,
											"end": 19698,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 19691,
											"end": 19694,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19687,
											"end": 19699,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19680,
											"end": 19699,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19680,
											"end": 19699,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19339,
											"end": 19705,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 19339,
											"end": 19705,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19339,
											"end": 19705,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19339,
											"end": 19705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19711,
											"end": 20130,
											"name": "tag",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 19711,
											"end": 20130,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19877,
											"end": 19881,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19915,
											"end": 19917,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 19904,
											"end": 19913,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19900,
											"end": 19918,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19892,
											"end": 19918,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19892,
											"end": 19918,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19964,
											"end": 19973,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19958,
											"end": 19962,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19954,
											"end": 19974,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 19950,
											"end": 19951,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19939,
											"end": 19948,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 19935,
											"end": 19952,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19928,
											"end": 19975,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19992,
											"end": 20123,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "500"
										},
										{
											"begin": 20118,
											"end": 20122,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19992,
											"end": 20123,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "312"
										},
										{
											"begin": 19992,
											"end": 20123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19992,
											"end": 20123,
											"name": "tag",
											"source": 11,
											"value": "500"
										},
										{
											"begin": 19992,
											"end": 20123,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19984,
											"end": 20123,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19984,
											"end": 20123,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19711,
											"end": 20130,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 19711,
											"end": 20130,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19711,
											"end": 20130,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19711,
											"end": 20130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20136,
											"end": 20316,
											"name": "tag",
											"source": 11,
											"value": "216"
										},
										{
											"begin": 20136,
											"end": 20316,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20184,
											"end": 20261,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20181,
											"end": 20182,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20174,
											"end": 20262,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 20281,
											"end": 20285,
											"name": "PUSH",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 20278,
											"end": 20279,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 20271,
											"end": 20286,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 20305,
											"end": 20309,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 20302,
											"end": 20303,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20295,
											"end": 20310,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 20322,
											"end": 20420,
											"name": "tag",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 20322,
											"end": 20420,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20373,
											"end": 20379,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20407,
											"end": 20412,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20401,
											"end": 20413,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 20391,
											"end": 20413,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20391,
											"end": 20413,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20322,
											"end": 20420,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 20322,
											"end": 20420,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20322,
											"end": 20420,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20322,
											"end": 20420,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20426,
											"end": 20594,
											"name": "tag",
											"source": 11,
											"value": "314"
										},
										{
											"begin": 20426,
											"end": 20594,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20509,
											"end": 20520,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20543,
											"end": 20549,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 20538,
											"end": 20541,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 20531,
											"end": 20550,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 20583,
											"end": 20587,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 20578,
											"end": 20581,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 20574,
											"end": 20588,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20559,
											"end": 20588,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20559,
											"end": 20588,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20426,
											"end": 20594,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 20426,
											"end": 20594,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 20426,
											"end": 20594,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20426,
											"end": 20594,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20426,
											"end": 20594,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20600,
											"end": 20973,
											"name": "tag",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 20600,
											"end": 20973,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20686,
											"end": 20689,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20714,
											"end": 20752,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "505"
										},
										{
											"begin": 20746,
											"end": 20751,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 20714,
											"end": 20752,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 20714,
											"end": 20752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20714,
											"end": 20752,
											"name": "tag",
											"source": 11,
											"value": "505"
										},
										{
											"begin": 20714,
											"end": 20752,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20768,
											"end": 20838,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "506"
										},
										{
											"begin": 20831,
											"end": 20837,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20826,
											"end": 20829,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 20768,
											"end": 20838,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "314"
										},
										{
											"begin": 20768,
											"end": 20838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20768,
											"end": 20838,
											"name": "tag",
											"source": 11,
											"value": "506"
										},
										{
											"begin": 20768,
											"end": 20838,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20761,
											"end": 20838,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 20761,
											"end": 20838,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20847,
											"end": 20912,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "507"
										},
										{
											"begin": 20905,
											"end": 20911,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20900,
											"end": 20903,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 20893,
											"end": 20897,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 20886,
											"end": 20891,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 20882,
											"end": 20898,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20847,
											"end": 20912,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 20847,
											"end": 20912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20847,
											"end": 20912,
											"name": "tag",
											"source": 11,
											"value": "507"
										},
										{
											"begin": 20847,
											"end": 20912,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20937,
											"end": 20966,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "508"
										},
										{
											"begin": 20959,
											"end": 20965,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20937,
											"end": 20966,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 20937,
											"end": 20966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20937,
											"end": 20966,
											"name": "tag",
											"source": 11,
											"value": "508"
										},
										{
											"begin": 20937,
											"end": 20966,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20932,
											"end": 20935,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 20928,
											"end": 20967,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20921,
											"end": 20967,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 20921,
											"end": 20967,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20690,
											"end": 20973,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20600,
											"end": 20973,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 20600,
											"end": 20973,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 20600,
											"end": 20973,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20600,
											"end": 20973,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20600,
											"end": 20973,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20979,
											"end": 21619,
											"name": "tag",
											"source": 11,
											"value": "226"
										},
										{
											"begin": 20979,
											"end": 21619,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21174,
											"end": 21178,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21212,
											"end": 21215,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 21201,
											"end": 21210,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 21197,
											"end": 21216,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21189,
											"end": 21216,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 21189,
											"end": 21216,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21226,
											"end": 21297,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "510"
										},
										{
											"begin": 21294,
											"end": 21295,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21283,
											"end": 21292,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 21279,
											"end": 21296,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21270,
											"end": 21276,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 21226,
											"end": 21297,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 21226,
											"end": 21297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21226,
											"end": 21297,
											"name": "tag",
											"source": 11,
											"value": "510"
										},
										{
											"begin": 21226,
											"end": 21297,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21307,
											"end": 21379,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "511"
										},
										{
											"begin": 21375,
											"end": 21377,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 21364,
											"end": 21373,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 21360,
											"end": 21378,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21351,
											"end": 21357,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 21307,
											"end": 21379,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 21307,
											"end": 21379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21307,
											"end": 21379,
											"name": "tag",
											"source": 11,
											"value": "511"
										},
										{
											"begin": 21307,
											"end": 21379,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21389,
											"end": 21461,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "512"
										},
										{
											"begin": 21457,
											"end": 21459,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 21446,
											"end": 21455,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 21442,
											"end": 21460,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21433,
											"end": 21439,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 21389,
											"end": 21461,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 21389,
											"end": 21461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21389,
											"end": 21461,
											"name": "tag",
											"source": 11,
											"value": "512"
										},
										{
											"begin": 21389,
											"end": 21461,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21508,
											"end": 21517,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21502,
											"end": 21506,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21498,
											"end": 21518,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 21493,
											"end": 21495,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 21482,
											"end": 21491,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 21478,
											"end": 21496,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21471,
											"end": 21519,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 21536,
											"end": 21612,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "513"
										},
										{
											"begin": 21607,
											"end": 21611,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21598,
											"end": 21604,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 21536,
											"end": 21612,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 21536,
											"end": 21612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21536,
											"end": 21612,
											"name": "tag",
											"source": 11,
											"value": "513"
										},
										{
											"begin": 21536,
											"end": 21612,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21528,
											"end": 21612,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 21528,
											"end": 21612,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20979,
											"end": 21619,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 20979,
											"end": 21619,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 20979,
											"end": 21619,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20979,
											"end": 21619,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20979,
											"end": 21619,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20979,
											"end": 21619,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20979,
											"end": 21619,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20979,
											"end": 21619,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21625,
											"end": 21766,
											"name": "tag",
											"source": 11,
											"value": "316"
										},
										{
											"begin": 21625,
											"end": 21766,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21681,
											"end": 21686,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21712,
											"end": 21718,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21706,
											"end": 21719,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 21697,
											"end": 21719,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 21697,
											"end": 21719,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21728,
											"end": 21760,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "515"
										},
										{
											"begin": 21754,
											"end": 21759,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21728,
											"end": 21760,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 21728,
											"end": 21760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21728,
											"end": 21760,
											"name": "tag",
											"source": 11,
											"value": "515"
										},
										{
											"begin": 21728,
											"end": 21760,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21625,
											"end": 21766,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 21625,
											"end": 21766,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 21625,
											"end": 21766,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21625,
											"end": 21766,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21625,
											"end": 21766,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21772,
											"end": 22121,
											"name": "tag",
											"source": 11,
											"value": "229"
										},
										{
											"begin": 21772,
											"end": 22121,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21841,
											"end": 21847,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21890,
											"end": 21892,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 21878,
											"end": 21887,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 21869,
											"end": 21876,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 21865,
											"end": 21888,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 21861,
											"end": 21893,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 21858,
											"end": 21977,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 21858,
											"end": 21977,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "517"
										},
										{
											"begin": 21858,
											"end": 21977,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 21896,
											"end": 21975,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "518"
										},
										{
											"begin": 21896,
											"end": 21975,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 21896,
											"end": 21975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21896,
											"end": 21975,
											"name": "tag",
											"source": 11,
											"value": "518"
										},
										{
											"begin": 21896,
											"end": 21975,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21858,
											"end": 21977,
											"name": "tag",
											"source": 11,
											"value": "517"
										},
										{
											"begin": 21858,
											"end": 21977,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22016,
											"end": 22017,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 22041,
											"end": 22104,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "519"
										},
										{
											"begin": 22096,
											"end": 22103,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 22087,
											"end": 22093,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 22076,
											"end": 22085,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 22072,
											"end": 22094,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 22041,
											"end": 22104,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "316"
										},
										{
											"begin": 22041,
											"end": 22104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22041,
											"end": 22104,
											"name": "tag",
											"source": 11,
											"value": "519"
										},
										{
											"begin": 22041,
											"end": 22104,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22031,
											"end": 22104,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 22031,
											"end": 22104,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21987,
											"end": 22114,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21772,
											"end": 22121,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 21772,
											"end": 22121,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 21772,
											"end": 22121,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21772,
											"end": 22121,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21772,
											"end": 22121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol",
								".deps/npm/@openzeppelin/contracts/token/ERC721/IERC721.sol",
								".deps/npm/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								".deps/npm/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								".deps/npm/@openzeppelin/contracts/utils/Address.sol",
								".deps/npm/@openzeppelin/contracts/utils/Context.sol",
								".deps/npm/@openzeppelin/contracts/utils/Strings.sol",
								".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol",
								".deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol",
								".deps/npm/@openzeppelin/contracts/utils/math/Math.sol",
								".deps/npm/@openzeppelin/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"_owner()": "b2bdfa7b",
							"_transfer(address,address,uint256)": "30e0789e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"_transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"_transfer(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`.  As opposed to {transferFrom}, this imposes no restrictions on msg.sender. Requirements: - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. Emits a {Transfer} event.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x2810815e26d34e20305cb7ae2e55de7cd4d684a67bef23a02c539badf596be07\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://06f911ccc60a860d344d7498bb0c38f4df894421c8bbae356f6d3d432a5f3384\",\"dweb:/ipfs/QmTHAbnMyCcUQRMSYDrnB7hMy74p3dS1un4jvXadnycoPw\"]},\".deps/npm/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\".deps/npm/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\".deps/npm/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\".deps/npm/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\".deps/npm/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\".deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\".deps/npm/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 25,
								"contract": ".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 27,
								"contract": ".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 29,
								"contract": ".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 33,
								"contract": ".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 37,
								"contract": ".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 41,
								"contract": ".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 47,
								"contract": ".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/npm/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\".deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/npm/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/npm/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\".deps/npm/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\".deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/npm/@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":194:9363  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":194:9363  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a199da66af1aa29a7e30f21e9b08c17e246215d33b0714036f0d073495a8d59d64736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a199da66af1aa29a7e30f21e9b08c17e246215d33b0714036f0d073495a8d59d64736f6c63430008150033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 SWAP10 0xDA PUSH7 0xAF1AA29A7E30F2 0x1E SWAP12 ADDMOD 0xC1 PUSH31 0x246215D33B0714036F0D073495A8D59D64736F6C6343000815003300000000 ",
							"sourceMap": "194:9169:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a199da66af1aa29a7e30f21e9b08c17e246215d33b0714036f0d073495a8d59d64736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 SWAP10 0xDA PUSH7 0xAF1AA29A7E30F2 0x1E SWAP12 ADDMOD 0xC1 PUSH31 0x246215D33B0714036F0D073495A8D59D64736F6C6343000815003300000000 ",
							"sourceMap": "194:9169:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a199da66af1aa29a7e30f21e9b08c17e246215d33b0714036f0d073495a8d59d64736f6c63430008150033",
									".code": [
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol",
								".deps/npm/@openzeppelin/contracts/token/ERC721/IERC721.sol",
								".deps/npm/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								".deps/npm/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								".deps/npm/@openzeppelin/contracts/utils/Address.sol",
								".deps/npm/@openzeppelin/contracts/utils/Context.sol",
								".deps/npm/@openzeppelin/contracts/utils/Strings.sol",
								".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol",
								".deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol",
								".deps/npm/@openzeppelin/contracts/utils/math/Math.sol",
								".deps/npm/@openzeppelin/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/npm/@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/npm/@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":220:2779  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":220:2779  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d8755606b2e1fdda171af66cd76d9dc22aa6d4f765c0aa5e2c011739a0df9de664736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d8755606b2e1fdda171af66cd76d9dc22aa6d4f765c0aa5e2c011739a0df9de664736f6c63430008150033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD8 PUSH22 0x5606B2E1FDDA171AF66CD76D9DC22AA6D4F765C0AA5E 0x2C ADD OR CODECOPY LOG0 0xDF SWAP14 0xE6 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "220:2559:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d8755606b2e1fdda171af66cd76d9dc22aa6d4f765c0aa5e2c011739a0df9de664736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD8 PUSH22 0x5606B2E1FDDA171AF66CD76D9DC22AA6D4F765C0AA5E 0x2C ADD OR CODECOPY LOG0 0xDF SWAP14 0xE6 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "220:2559:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(int256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d8755606b2e1fdda171af66cd76d9dc22aa6d4f765c0aa5e2c011739a0df9de664736f6c63430008150033",
									".code": [
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol",
								".deps/npm/@openzeppelin/contracts/token/ERC721/IERC721.sol",
								".deps/npm/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								".deps/npm/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								".deps/npm/@openzeppelin/contracts/utils/Address.sol",
								".deps/npm/@openzeppelin/contracts/utils/Context.sol",
								".deps/npm/@openzeppelin/contracts/utils/Strings.sol",
								".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol",
								".deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol",
								".deps/npm/@openzeppelin/contracts/utils/math/Math.sol",
								".deps/npm/@openzeppelin/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\".deps/npm/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\".deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/npm/@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":202:12784  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":202:12784  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f39a255a15f4c3aefce9c8ce1ca131e6e51385b513e6f974c27ceb2c6d0a0a6e64736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f39a255a15f4c3aefce9c8ce1ca131e6e51385b513e6f974c27ceb2c6d0a0a6e64736f6c63430008150033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN SWAP11 0x25 GAS ISZERO DELEGATECALL 0xC3 0xAE 0xFC 0xE9 0xC8 0xCE SHR LOG1 BALANCE 0xE6 0xE5 SGT DUP6 0xB5 SGT 0xE6 0xF9 PUSH21 0xC27CEB2C6D0A0A6E64736F6C634300081500330000 ",
							"sourceMap": "202:12582:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f39a255a15f4c3aefce9c8ce1ca131e6e51385b513e6f974c27ceb2c6d0a0a6e64736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN SWAP11 0x25 GAS ISZERO DELEGATECALL 0xC3 0xAE 0xFC 0xE9 0xC8 0xCE SHR LOG1 BALANCE 0xE6 0xE5 SGT DUP6 0xB5 SGT 0xE6 0xF9 PUSH21 0xC27CEB2C6D0A0A6E64736F6C634300081500330000 ",
							"sourceMap": "202:12582:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f39a255a15f4c3aefce9c8ce1ca131e6e51385b513e6f974c27ceb2c6d0a0a6e64736f6c63430008150033",
									".code": [
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol",
								".deps/npm/@openzeppelin/contracts/token/ERC721/IERC721.sol",
								".deps/npm/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								".deps/npm/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								".deps/npm/@openzeppelin/contracts/utils/Address.sol",
								".deps/npm/@openzeppelin/contracts/utils/Context.sol",
								".deps/npm/@openzeppelin/contracts/utils/Strings.sol",
								".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol",
								".deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol",
								".deps/npm/@openzeppelin/contracts/utils/math/Math.sol",
								".deps/npm/@openzeppelin/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/npm/@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".deps/npm/@openzeppelin/contracts/utils/math/SignedMath.sol\":215:1262  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/SignedMath.sol\":215:1262  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ac774052a8f048c184858313fce6ea3e21ee8acd4fac8375762762ad9476d82064736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ac774052a8f048c184858313fce6ea3e21ee8acd4fac8375762762ad9476d82064736f6c63430008150033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAC PUSH24 0x4052A8F048C184858313FCE6EA3E21EE8ACD4FAC83757627 PUSH3 0xAD9476 0xD8 KECCAK256 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "215:1047:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ac774052a8f048c184858313fce6ea3e21ee8acd4fac8375762762ad9476d82064736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAC PUSH24 0x4052A8F048C184858313FCE6EA3E21EE8ACD4FAC83757627 PUSH3 0xAD9476 0xD8 KECCAK256 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "215:1047:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ac774052a8f048c184858313fce6ea3e21ee8acd4fac8375762762ad9476d82064736f6c63430008150033",
									".code": [
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol",
								".deps/npm/@openzeppelin/contracts/token/ERC721/IERC721.sol",
								".deps/npm/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								".deps/npm/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								".deps/npm/@openzeppelin/contracts/utils/Address.sol",
								".deps/npm/@openzeppelin/contracts/utils/Context.sol",
								".deps/npm/@openzeppelin/contracts/utils/Strings.sol",
								".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol",
								".deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol",
								".deps/npm/@openzeppelin/contracts/utils/math/Math.sol",
								".deps/npm/@openzeppelin/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Address": [
							1427
						],
						"Context": [
							1449
						],
						"ERC165": [
							1702
						],
						"ERC721": [
							936
						],
						"IERC165": [
							1714
						],
						"IERC721": [
							1052
						],
						"IERC721Metadata": [
							1097
						],
						"IERC721Receiver": [
							1070
						],
						"Math": [
							2580
						],
						"SignedMath": [
							2685
						],
						"Strings": [
							1678
						]
					},
					"id": 937,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:0"
						},
						{
							"absolutePath": ".deps/npm/@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 937,
							"sourceUnit": 1053,
							"src": "132:23:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/npm/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 937,
							"sourceUnit": 1071,
							"src": "156:31:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/npm/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 937,
							"sourceUnit": 1098,
							"src": "188:42:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/npm/@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 937,
							"sourceUnit": 1428,
							"src": "231:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/npm/@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 6,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 937,
							"sourceUnit": 1450,
							"src": "265:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/npm/@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 937,
							"sourceUnit": 1679,
							"src": "299:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 8,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 937,
							"sourceUnit": 1703,
							"src": "333:46:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 10,
										"name": "Context",
										"nameLocations": [
											"647:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1449,
										"src": "647:7:0"
									},
									"id": 11,
									"nodeType": "InheritanceSpecifier",
									"src": "647:7:0"
								},
								{
									"baseName": {
										"id": 12,
										"name": "ERC165",
										"nameLocations": [
											"656:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1702,
										"src": "656:6:0"
									},
									"id": 13,
									"nodeType": "InheritanceSpecifier",
									"src": "656:6:0"
								},
								{
									"baseName": {
										"id": 14,
										"name": "IERC721",
										"nameLocations": [
											"664:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1052,
										"src": "664:7:0"
									},
									"id": 15,
									"nodeType": "InheritanceSpecifier",
									"src": "664:7:0"
								},
								{
									"baseName": {
										"id": 16,
										"name": "IERC721Metadata",
										"nameLocations": [
											"673:15:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1097,
										"src": "673:15:0"
									},
									"id": 17,
									"nodeType": "InheritanceSpecifier",
									"src": "673:15:0"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 9,
								"nodeType": "StructuredDocumentation",
								"src": "381:246:0",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 936,
							"linearizedBaseContracts": [
								936,
								1097,
								1052,
								1702,
								1714,
								1449
							],
							"name": "ERC721",
							"nameLocation": "637:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 20,
									"libraryName": {
										"id": 18,
										"name": "Address",
										"nameLocations": [
											"701:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1427,
										"src": "701:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "695:26:0",
									"typeName": {
										"id": 19,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "713:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"global": false,
									"id": 23,
									"libraryName": {
										"id": 21,
										"name": "Strings",
										"nameLocations": [
											"732:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1678,
										"src": "732:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "726:26:0",
									"typeName": {
										"id": 22,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "744:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "b2bdfa7b",
									"id": 25,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "772:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 936,
									"src": "757:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 24,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "757:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 27,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "817:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 936,
									"src": "802:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 26,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "802:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 29,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "864:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 936,
									"src": "849:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 28,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "849:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 33,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "960:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 936,
									"src": "924:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 32,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 30,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "932:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "924:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 31,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "943:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 37,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1054:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 936,
									"src": "1018:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 36,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 34,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1026:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1018:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 35,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1037:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 41,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1155:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 936,
									"src": "1119:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 40,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 38,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1127:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1119:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 39,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1138:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 47,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1278:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 936,
									"src": "1225:71:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 46,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 42,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1233:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1225:44:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 45,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 43,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1252:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1244:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 44,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1263:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 69,
										"nodeType": "Block",
										"src": "1488:82:0",
										"statements": [
											{
												"expression": {
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 57,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1498:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 58,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 50,
														"src": "1506:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1498:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 60,
												"nodeType": "ExpressionStatement",
												"src": "1498:13:0"
											},
											{
												"expression": {
													"id": 63,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 61,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "1521:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 62,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 52,
														"src": "1531:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1521:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 64,
												"nodeType": "ExpressionStatement",
												"src": "1521:17:0"
											},
											{
												"expression": {
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 65,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "1548:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 66,
														"name": "owner_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1557:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1548:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 68,
												"nodeType": "ExpressionStatement",
												"src": "1548:15:0"
											}
										]
									},
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "1303:108:0",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 70,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1442:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "1428:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 49,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1428:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1463:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "1449:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 51,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1449:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "owner_",
												"nameLocation": "1480:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "1472:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1472:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1427:60:0"
									},
									"returnParameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1488:0:0"
									},
									"scope": 936,
									"src": "1416:154:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 81,
										"nodeType": "Block",
										"src": "1596:94:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 73,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1614:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 74,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1618:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1614:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 75,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 25,
																"src": "1628:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1614:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "636f756c64206f6e6c792062652063616c6c656420627920746865206f776e6572",
															"id": 77,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1636:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_022d67d49a1a9b3b3750d21e159cede74976c07ebd7dd7a0fbc2480dedda9a5c",
																"typeString": "literal_string \"could only be called by the owner\""
															},
															"value": "could only be called by the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_022d67d49a1a9b3b3750d21e159cede74976c07ebd7dd7a0fbc2480dedda9a5c",
																"typeString": "literal_string \"could only be called by the owner\""
															}
														],
														"id": 72,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1606:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1606:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "1606:66:0"
											},
											{
												"id": 80,
												"nodeType": "PlaceholderStatement",
												"src": "1682:1:0"
											}
										]
									},
									"id": 82,
									"name": "onlyOwner",
									"nameLocation": "1584:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1593:2:0"
									},
									"src": "1575:115:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1701,
										1713
									],
									"body": {
										"id": 112,
										"nodeType": "Block",
										"src": "1865:192:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 105,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 98,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 93,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 85,
																"src": "1894:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 95,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1052,
																			"src": "1914:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1052_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1052_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 94,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1909:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 96,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1909:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1052",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 97,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1923:11:0",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1909:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1894:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 99,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 85,
																"src": "1950:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 101,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1097,
																			"src": "1970:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1097_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1097_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 100,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1965:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 102,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1965:21:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1097",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 103,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1987:11:0",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1965:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1950:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1894:104:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 108,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 85,
																"src": "2038:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 106,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2014:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$936_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2020:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1701,
															"src": "2014:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 109,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2014:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1894:156:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 92,
												"id": 111,
												"nodeType": "Return",
												"src": "1875:175:0"
											}
										]
									},
									"documentation": {
										"id": 83,
										"nodeType": "StructuredDocumentation",
										"src": "1696:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1766:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 89,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 87,
												"name": "ERC165",
												"nameLocations": [
													"1833:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1702,
												"src": "1833:6:0"
											},
											{
												"id": 88,
												"name": "IERC165",
												"nameLocations": [
													"1841:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1714,
												"src": "1841:7:0"
											}
										],
										"src": "1824:25:0"
									},
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1791:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "1784:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 84,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1784:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1783:20:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "1859:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 90,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1859:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1858:6:0"
									},
									"scope": 936,
									"src": "1757:300:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										977
									],
									"body": {
										"id": 136,
										"nodeType": "Block",
										"src": "2197:123:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 123,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "2215:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 126,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2232:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 125,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2224:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 124,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2224:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 127,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2224:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2215:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572",
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2236:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159",
																"typeString": "literal_string \"ERC721: address zero is not a valid owner\""
															},
															"value": "ERC721: address zero is not a valid owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159",
																"typeString": "literal_string \"ERC721: address zero is not a valid owner\""
															}
														],
														"id": 122,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2207:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2207:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 131,
												"nodeType": "ExpressionStatement",
												"src": "2207:73:0"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 132,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "2297:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 134,
													"indexExpression": {
														"id": 133,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 116,
														"src": "2307:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2297:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 121,
												"id": 135,
												"nodeType": "Return",
												"src": "2290:23:0"
											}
										]
									},
									"documentation": {
										"id": 114,
										"nodeType": "StructuredDocumentation",
										"src": "2063:48:0",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2125:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 118,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2170:8:0"
									},
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2143:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "2135:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2135:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2134:15:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "2188:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2188:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2187:9:0"
									},
									"scope": 936,
									"src": "2116:204:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										985
									],
									"body": {
										"id": 164,
										"nodeType": "Block",
										"src": "2458:138:0",
										"statements": [
											{
												"assignments": [
													147
												],
												"declarations": [
													{
														"constant": false,
														"id": 147,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "2476:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 164,
														"src": "2468:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 146,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2468:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 151,
												"initialValue": {
													"arguments": [
														{
															"id": 149,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 140,
															"src": "2493:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 148,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "2484:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2484:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2468:33:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 158,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 153,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 147,
																"src": "2519:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 156,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2536:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2528:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 154,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2528:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 157,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2528:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2519:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
															"id": 159,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2540:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															},
															"value": "ERC721: invalid token ID"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															}
														],
														"id": 152,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2511:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2511:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 161,
												"nodeType": "ExpressionStatement",
												"src": "2511:56:0"
											},
											{
												"expression": {
													"id": 162,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 147,
													"src": "2584:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 145,
												"id": 163,
												"nodeType": "Return",
												"src": "2577:12:0"
											}
										]
									},
									"documentation": {
										"id": 138,
										"nodeType": "StructuredDocumentation",
										"src": "2326:46:0",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2386:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 142,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2431:8:0"
									},
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2402:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "2394:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2394:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2393:17:0"
									},
									"returnParameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "2449:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2449:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2448:9:0"
									},
									"scope": 936,
									"src": "2377:219:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1082
									],
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "2727:29:0",
										"statements": [
											{
												"expression": {
													"id": 172,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "2744:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 171,
												"id": 173,
												"nodeType": "Return",
												"src": "2737:12:0"
											}
										]
									},
									"documentation": {
										"id": 166,
										"nodeType": "StructuredDocumentation",
										"src": "2602:51:0",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2667:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 168,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2694:8:0"
									},
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2671:2:0"
									},
									"returnParameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2712:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 169,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2712:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:15:0"
									},
									"scope": 936,
									"src": "2658:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1088
									],
									"body": {
										"id": 184,
										"nodeType": "Block",
										"src": "2891:31:0",
										"statements": [
											{
												"expression": {
													"id": 182,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 29,
													"src": "2908:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 181,
												"id": 183,
												"nodeType": "Return",
												"src": "2901:14:0"
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "2762:53:0",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 185,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2829:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 178,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2858:8:0"
									},
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2835:2:0"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "2876:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 179,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2876:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2875:15:0"
									},
									"scope": 936,
									"src": "2820:102:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1096
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "3076:188:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 195,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 188,
															"src": "3101:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 194,
														"name": "_requireMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 832,
														"src": "3086:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
															"typeString": "function (uint256) view"
														}
													},
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3086:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 197,
												"nodeType": "ExpressionStatement",
												"src": "3086:23:0"
											},
											{
												"assignments": [
													199
												],
												"declarations": [
													{
														"constant": false,
														"id": 199,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "3134:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 223,
														"src": "3120:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 198,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "3120:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 200,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 233,
														"src": "3144:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3144:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3120:34:0"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 209,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 205,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 199,
																		"src": "3177:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 204,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3171:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 203,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3171:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 206,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3171:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3186:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3171:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3195:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3171:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 220,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3255:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3171:86:0",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 214,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 199,
																		"src": "3223:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 215,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 188,
																				"src": "3232:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 216,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3240:8:0",
																			"memberName": "toString",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1508,
																			"src": "3232:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 217,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3232:18:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 212,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "3206:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 213,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "3210:12:0",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "3206:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 218,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3206:45:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 211,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3199:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 210,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "3199:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 219,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3199:53:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 193,
												"id": 222,
												"nodeType": "Return",
												"src": "3164:93:0"
											}
										]
									},
									"documentation": {
										"id": 186,
										"nodeType": "StructuredDocumentation",
										"src": "2928:55:0",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2997:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 190,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3043:8:0"
									},
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3014:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "3006:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3006:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3005:17:0"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "3061:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3061:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3060:15:0"
									},
									"scope": 936,
									"src": "2988:276:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 232,
										"nodeType": "Block",
										"src": "3572:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3589:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 229,
												"id": 231,
												"nodeType": "Return",
												"src": "3582:9:0"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "3270:231:0",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 233,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3515:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3523:2:0"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "3557:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 227,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3557:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3556:15:0"
									},
									"scope": 936,
									"src": "3506:92:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1025
									],
									"body": {
										"id": 275,
										"nodeType": "Block",
										"src": "3725:336:0",
										"statements": [
											{
												"assignments": [
													243
												],
												"declarations": [
													{
														"constant": false,
														"id": 243,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3743:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 275,
														"src": "3735:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 242,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3735:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 248,
												"initialValue": {
													"arguments": [
														{
															"id": 246,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 238,
															"src": "3766:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 244,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 936,
															"src": "3751:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$936_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 245,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3758:7:0",
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 165,
														"src": "3751:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3751:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3735:39:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 250,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 236,
																"src": "3792:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 251,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 243,
																"src": "3798:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3792:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572",
															"id": 253,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3805:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
																"typeString": "literal_string \"ERC721: approval to current owner\""
															},
															"value": "ERC721: approval to current owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
																"typeString": "literal_string \"ERC721: approval to current owner\""
															}
														],
														"id": 249,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3784:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3784:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 255,
												"nodeType": "ExpressionStatement",
												"src": "3784:57:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 260,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 257,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1439,
																		"src": "3873:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 258,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3873:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 259,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 243,
																	"src": "3889:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3873:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 262,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 243,
																		"src": "3915:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 263,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1439,
																			"src": "3922:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 264,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3922:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 261,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 329,
																	"src": "3898:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 265,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3898:37:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3873:62:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c",
															"id": 267,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3949:63:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83",
																"typeString": "literal_string \"ERC721: approve caller is not token owner or approved for all\""
															},
															"value": "ERC721: approve caller is not token owner or approved for all"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83",
																"typeString": "literal_string \"ERC721: approve caller is not token owner or approved for all\""
															}
														],
														"id": 256,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3852:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3852:170:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 269,
												"nodeType": "ExpressionStatement",
												"src": "3852:170:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 271,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "4042:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 272,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 238,
															"src": "4046:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 270,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 786,
														"src": "4033:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4033:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 274,
												"nodeType": "ExpressionStatement",
												"src": "4033:21:0"
											}
										]
									},
									"documentation": {
										"id": 234,
										"nodeType": "StructuredDocumentation",
										"src": "3604:46:0",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 276,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3664:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 240,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3716:8:0"
									},
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3680:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "3672:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3672:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3692:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "3684:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3684:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3671:29:0"
									},
									"returnParameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3725:0:0"
									},
									"scope": 936,
									"src": "3655:406:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1041
									],
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "4207:82:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 286,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 279,
															"src": "4232:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 285,
														"name": "_requireMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 832,
														"src": "4217:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
															"typeString": "function (uint256) view"
														}
													},
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4217:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 288,
												"nodeType": "ExpressionStatement",
												"src": "4217:23:0"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 289,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "4258:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 291,
													"indexExpression": {
														"id": 290,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 279,
														"src": "4274:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4258:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 284,
												"id": 292,
												"nodeType": "Return",
												"src": "4251:31:0"
											}
										]
									},
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "4067:50:0",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4131:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 281,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4180:8:0"
									},
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4151:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "4143:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4143:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4142:17:0"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "4198:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4198:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4197:9:0"
									},
									"scope": 936,
									"src": "4122:167:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1033
									],
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "4440:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 304,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1439,
																"src": "4469:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4469:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 306,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "4483:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 307,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "4493:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 303,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 818,
														"src": "4450:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4450:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 309,
												"nodeType": "ExpressionStatement",
												"src": "4450:52:0"
											}
										]
									},
									"documentation": {
										"id": 295,
										"nodeType": "StructuredDocumentation",
										"src": "4295:56:0",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4365:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 301,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4431:8:0"
									},
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4391:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "4383:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4383:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4406:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "4401:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 298,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4401:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4382:33:0"
									},
									"returnParameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4440:0:0"
									},
									"scope": 936,
									"src": "4356:153:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1051
									],
									"body": {
										"id": 328,
										"nodeType": "Block",
										"src": "4678:59:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 322,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 47,
															"src": "4695:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 324,
														"indexExpression": {
															"id": 323,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 314,
															"src": "4714:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4695:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 326,
													"indexExpression": {
														"id": 325,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 316,
														"src": "4721:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4695:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 321,
												"id": 327,
												"nodeType": "Return",
												"src": "4688:42:0"
											}
										]
									},
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "4515:55:0",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4584:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 318,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4654:8:0"
									},
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4609:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "4601:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4601:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4624:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "4616:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4616:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4600:33:0"
									},
									"returnParameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "4672:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 319,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4672:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4671:6:0"
									},
									"scope": 936,
									"src": "4575:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1017
									],
									"body": {
										"id": 355,
										"nodeType": "Block",
										"src": "4888:207:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 342,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1439,
																		"src": "4977:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4977:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 344,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "4991:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 341,
																"name": "_isApprovedOrOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 499,
																"src": "4958:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) view returns (bool)"
																}
															},
															"id": 345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4958:41:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564",
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5001:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															},
															"value": "ERC721: caller is not token owner or approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															}
														],
														"id": 340,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4950:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4950:99:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 348,
												"nodeType": "ExpressionStatement",
												"src": "4950:99:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 350,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "5070:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 351,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "5076:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 352,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "5080:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 349,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 762,
														"src": "5060:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5060:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 354,
												"nodeType": "ExpressionStatement",
												"src": "5060:28:0"
											}
										]
									},
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "4743:51:0",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 356,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4808:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 338,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4879:8:0"
									},
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4829:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "4821:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4821:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4843:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "4835:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4835:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4855:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "4847:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4847:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4820:43:0"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4888:0:0"
									},
									"scope": 936,
									"src": "4799:296:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1007
									],
									"body": {
										"id": 374,
										"nodeType": "Block",
										"src": "5254:56:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 368,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "5281:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 369,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "5287:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 370,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "5291:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5300:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 367,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															375,
															405
														],
														"referencedDeclaration": 405,
														"src": "5264:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5264:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 373,
												"nodeType": "ExpressionStatement",
												"src": "5264:39:0"
											}
										]
									},
									"documentation": {
										"id": 357,
										"nodeType": "StructuredDocumentation",
										"src": "5101:55:0",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 375,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5170:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 365,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5245:8:0"
									},
									"parameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5195:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "5187:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5187:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5209:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "5201:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5201:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5221:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "5213:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5213:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5186:43:0"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5254:0:0"
									},
									"scope": 936,
									"src": "5161:149:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										997
									],
									"body": {
										"id": 404,
										"nodeType": "Block",
										"src": "5488:164:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 390,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1439,
																		"src": "5525:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5525:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 392,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 382,
																	"src": "5539:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 389,
																"name": "_isApprovedOrOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 499,
																"src": "5506:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) view returns (bool)"
																}
															},
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5506:41:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564",
															"id": 394,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5549:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															},
															"value": "ERC721: caller is not token owner or approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															}
														],
														"id": 388,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5498:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5498:99:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 396,
												"nodeType": "ExpressionStatement",
												"src": "5498:99:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 398,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "5621:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 399,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "5627:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 400,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 382,
															"src": "5631:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 401,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "5640:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 397,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 434,
														"src": "5607:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5607:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 403,
												"nodeType": "ExpressionStatement",
												"src": "5607:38:0"
											}
										]
									},
									"documentation": {
										"id": 376,
										"nodeType": "StructuredDocumentation",
										"src": "5316:55:0",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 405,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5385:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 386,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5479:8:0"
									},
									"parameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5410:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "5402:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5402:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5424:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "5416:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5416:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5436:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "5428:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5428:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5458:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "5445:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 383,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5445:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5401:62:0"
									},
									"returnParameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5488:0:0"
									},
									"scope": 936,
									"src": "5376:276:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 433,
										"nodeType": "Block",
										"src": "6615:165:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 418,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "6635:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 419,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 410,
															"src": "6641:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 420,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "6645:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 417,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 762,
														"src": "6625:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6625:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 422,
												"nodeType": "ExpressionStatement",
												"src": "6625:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 425,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 408,
																	"src": "6694:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 426,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 410,
																	"src": "6700:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 427,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 412,
																	"src": "6704:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 428,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 414,
																	"src": "6713:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 424,
																"name": "_checkOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 894,
																"src": "6671:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6671:47:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6720:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															},
															"value": "ERC721: transfer to non ERC721Receiver implementer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															}
														],
														"id": 423,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6663:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6663:110:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 432,
												"nodeType": "ExpressionStatement",
												"src": "6663:110:0"
											}
										]
									},
									"documentation": {
										"id": 406,
										"nodeType": "StructuredDocumentation",
										"src": "5658:850:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 434,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "6522:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6544:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "6536:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6536:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6558:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "6550:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6550:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6570:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "6562:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6562:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6592:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "6579:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 413,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6579:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6535:62:0"
									},
									"returnParameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6615:0:0"
									},
									"scope": 936,
									"src": "6513:267:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "6964:40:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 442,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "6981:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 444,
													"indexExpression": {
														"id": 443,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 437,
														"src": "6989:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6981:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 441,
												"id": 445,
												"nodeType": "Return",
												"src": "6974:23:0"
											}
										]
									},
									"documentation": {
										"id": 435,
										"nodeType": "StructuredDocumentation",
										"src": "6786:98:0",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist"
									},
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "6898:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6915:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "6907:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6907:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6906:17:0"
									},
									"returnParameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "6955:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6955:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6954:9:0"
									},
									"scope": 936,
									"src": "6889:115:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 464,
										"nodeType": "Block",
										"src": "7378:55:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 456,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 450,
																"src": "7404:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 455,
															"name": "_ownerOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "7395:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																"typeString": "function (uint256) view returns (address)"
															}
														},
														"id": 457,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7395:17:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 460,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7424:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 459,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7416:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 458,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7416:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 461,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7416:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7395:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 454,
												"id": 463,
												"nodeType": "Return",
												"src": "7388:38:0"
											}
										]
									},
									"documentation": {
										"id": 448,
										"nodeType": "StructuredDocumentation",
										"src": "7010:292:0",
										"text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."
									},
									"id": 465,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "7316:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7332:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "7324:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7324:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7323:17:0"
									},
									"returnParameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "7372:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 452,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7372:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7371:6:0"
									},
									"scope": 936,
									"src": "7307:126:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 498,
										"nodeType": "Block",
										"src": "7690:162:0",
										"statements": [
											{
												"assignments": [
													476
												],
												"declarations": [
													{
														"constant": false,
														"id": 476,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "7708:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 498,
														"src": "7700:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 475,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7700:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 481,
												"initialValue": {
													"arguments": [
														{
															"id": 479,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 470,
															"src": "7731:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 477,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 936,
															"src": "7716:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$936_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 478,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7723:7:0",
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 165,
														"src": "7716:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7716:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7700:39:0"
											},
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 489,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 482,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 468,
																		"src": "7757:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 483,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 476,
																		"src": "7768:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "7757:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 486,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 476,
																			"src": "7794:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 487,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 468,
																			"src": "7801:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 485,
																		"name": "isApprovedForAll",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 329,
																		"src": "7777:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																			"typeString": "function (address,address) view returns (bool)"
																		}
																	},
																	"id": 488,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7777:32:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "7757:52:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 494,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 491,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 470,
																			"src": "7825:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 490,
																		"name": "getApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 294,
																		"src": "7813:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																			"typeString": "function (uint256) view returns (address)"
																		}
																	},
																	"id": 492,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7813:20:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 493,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 468,
																	"src": "7837:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7813:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "7757:87:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 496,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "7756:89:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 474,
												"id": 497,
												"nodeType": "Return",
												"src": "7749:96:0"
											}
										]
									},
									"documentation": {
										"id": 466,
										"nodeType": "StructuredDocumentation",
										"src": "7439:147:0",
										"text": " @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."
									},
									"id": 499,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isApprovedOrOwner",
									"nameLocation": "7600:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7627:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "7619:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7619:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7644:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "7636:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7636:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7618:34:0"
									},
									"returnParameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "7684:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 472,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7684:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7683:6:0"
									},
									"scope": 936,
									"src": "7591:261:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 513,
										"nodeType": "Block",
										"src": "8247:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 508,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 502,
															"src": "8267:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 509,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "8271:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8280:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 507,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															514,
															543
														],
														"referencedDeclaration": 543,
														"src": "8257:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8257:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 512,
												"nodeType": "ExpressionStatement",
												"src": "8257:26:0"
											}
										]
									},
									"documentation": {
										"id": 500,
										"nodeType": "StructuredDocumentation",
										"src": "7858:319:0",
										"text": " @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 514,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "8191:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8209:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "8201:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 501,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8201:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8221:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "8213:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8213:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8200:29:0"
									},
									"returnParameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8247:0:0"
									},
									"scope": 936,
									"src": "8182:108:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 542,
										"nodeType": "Block",
										"src": "8595:195:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 525,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 517,
															"src": "8611:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 526,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "8615:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 524,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 620,
														"src": "8605:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8605:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 528,
												"nodeType": "ExpressionStatement",
												"src": "8605:18:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 533,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8685:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 532,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8677:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 531,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8677:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8677:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 535,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 517,
																	"src": "8689:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 536,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 519,
																	"src": "8693:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 537,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 521,
																	"src": "8702:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 530,
																"name": "_checkOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 894,
																"src": "8654:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8654:53:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8721:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															},
															"value": "ERC721: transfer to non ERC721Receiver implementer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															}
														],
														"id": 529,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8633:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8633:150:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 541,
												"nodeType": "ExpressionStatement",
												"src": "8633:150:0"
											}
										]
									},
									"documentation": {
										"id": 515,
										"nodeType": "StructuredDocumentation",
										"src": "8296:210:0",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 543,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "8520:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8538:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "8530:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8530:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8550:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "8542:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8542:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8572:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "8559:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 520,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8559:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8529:48:0"
									},
									"returnParameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8595:0:0"
									},
									"scope": 936,
									"src": "8511:279:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 619,
										"nodeType": "Block",
										"src": "9173:859:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 557,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 552,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 546,
																"src": "9191:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 555,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9205:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9197:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 553,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9197:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 556,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9197:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9191:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9209:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
																"typeString": "literal_string \"ERC721: mint to the zero address\""
															},
															"value": "ERC721: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
																"typeString": "literal_string \"ERC721: mint to the zero address\""
															}
														],
														"id": 551,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9183:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9183:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 560,
												"nodeType": "ExpressionStatement",
												"src": "9183:61:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 565,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "9262:17:0",
															"subExpression": {
																"arguments": [
																	{
																		"id": 563,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 548,
																		"src": "9271:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 562,
																	"name": "_exists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 465,
																	"src": "9263:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (uint256) view returns (bool)"
																	}
																},
																"id": 564,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9263:16:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9281:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															},
															"value": "ERC721: token already minted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															}
														],
														"id": 561,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9254:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9254:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 568,
												"nodeType": "ExpressionStatement",
												"src": "9254:58:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 572,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9352:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 571,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9344:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 570,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9344:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 573,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9344:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 574,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "9356:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 575,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 548,
															"src": "9360:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9369:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 569,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 907,
														"src": "9323:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9323:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 578,
												"nodeType": "ExpressionStatement",
												"src": "9323:48:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 583,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "9466:17:0",
															"subExpression": {
																"arguments": [
																	{
																		"id": 581,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 548,
																		"src": "9475:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 580,
																	"name": "_exists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 465,
																	"src": "9467:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (uint256) view returns (bool)"
																	}
																},
																"id": 582,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9467:16:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
															"id": 584,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9485:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															},
															"value": "ERC721: token already minted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															}
														],
														"id": 579,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9458:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9458:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 586,
												"nodeType": "ExpressionStatement",
												"src": "9458:58:0"
											},
											{
												"id": 593,
												"nodeType": "UncheckedBlock",
												"src": "9527:360:0",
												"statements": [
													{
														"expression": {
															"id": 591,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 587,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 37,
																	"src": "9858:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 589,
																"indexExpression": {
																	"id": 588,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 546,
																	"src": "9868:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9858:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 590,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9875:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "9858:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 592,
														"nodeType": "ExpressionStatement",
														"src": "9858:18:0"
													}
												]
											},
											{
												"expression": {
													"id": 598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 594,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 33,
															"src": "9897:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 596,
														"indexExpression": {
															"id": 595,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 548,
															"src": "9905:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9897:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 597,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 546,
														"src": "9916:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9897:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 599,
												"nodeType": "ExpressionStatement",
												"src": "9897:21:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 603,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9951:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 602,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9943:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 601,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9943:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 604,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9943:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 605,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "9955:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 606,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 548,
															"src": "9959:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 600,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "9934:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9934:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 608,
												"nodeType": "EmitStatement",
												"src": "9929:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 612,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10006:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 611,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9998:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 610,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9998:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 613,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9998:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 614,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "10010:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 615,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 548,
															"src": "10014:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10023:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 609,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 920,
														"src": "9978:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9978:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 618,
												"nodeType": "ExpressionStatement",
												"src": "9978:47:0"
											}
										]
									},
									"documentation": {
										"id": 544,
										"nodeType": "StructuredDocumentation",
										"src": "8796:311:0",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 620,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9121:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9135:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "9127:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9127:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9147:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "9139:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9139:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9126:29:0"
									},
									"returnParameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9173:0:0"
									},
									"scope": 936,
									"src": "9112:920:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 686,
										"nodeType": "Block",
										"src": "10407:713:0",
										"statements": [
											{
												"assignments": [
													627
												],
												"declarations": [
													{
														"constant": false,
														"id": 627,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "10425:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 686,
														"src": "10417:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 626,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10417:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 632,
												"initialValue": {
													"arguments": [
														{
															"id": 630,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 623,
															"src": "10448:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 628,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 936,
															"src": "10433:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$936_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 629,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10440:7:0",
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 165,
														"src": "10433:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10433:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10417:39:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 634,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "10488:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 637,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10503:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 636,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10495:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 635,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10495:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10495:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 639,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 623,
															"src": "10507:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10516:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 633,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 907,
														"src": "10467:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10467:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 642,
												"nodeType": "ExpressionStatement",
												"src": "10467:51:0"
											},
											{
												"expression": {
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 643,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 627,
														"src": "10620:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 646,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 623,
																"src": "10643:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 644,
																"name": "ERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 936,
																"src": "10628:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC721_$936_$",
																	"typeString": "type(contract ERC721)"
																}
															},
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10635:7:0",
															"memberName": "ownerOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 165,
															"src": "10628:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																"typeString": "function (uint256) view returns (address)"
															}
														},
														"id": 647,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10628:23:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10620:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 649,
												"nodeType": "ExpressionStatement",
												"src": "10620:31:0"
											},
											{
												"expression": {
													"id": 653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "10689:31:0",
													"subExpression": {
														"baseExpression": {
															"id": 650,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "10696:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 652,
														"indexExpression": {
															"id": 651,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 623,
															"src": "10712:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10696:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 654,
												"nodeType": "ExpressionStatement",
												"src": "10689:31:0"
											},
											{
												"id": 661,
												"nodeType": "UncheckedBlock",
												"src": "10731:237:0",
												"statements": [
													{
														"expression": {
															"id": 659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 655,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 37,
																	"src": "10936:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 657,
																"indexExpression": {
																	"id": 656,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 627,
																	"src": "10946:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "10936:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10956:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "10936:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 660,
														"nodeType": "ExpressionStatement",
														"src": "10936:21:0"
													}
												]
											},
											{
												"expression": {
													"id": 665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "10977:23:0",
													"subExpression": {
														"baseExpression": {
															"id": 662,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 33,
															"src": "10984:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 664,
														"indexExpression": {
															"id": 663,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 623,
															"src": "10992:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10984:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 666,
												"nodeType": "ExpressionStatement",
												"src": "10977:23:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 668,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "11025:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 671,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11040:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 670,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11032:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 669,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11032:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 672,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11032:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 673,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 623,
															"src": "11044:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 667,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "11016:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11016:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 675,
												"nodeType": "EmitStatement",
												"src": "11011:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 677,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "11083:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 680,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11098:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 679,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11090:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 678,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11090:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 681,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11090:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 682,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 623,
															"src": "11102:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 683,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11111:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 676,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 920,
														"src": "11063:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11063:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 685,
												"nodeType": "ExpressionStatement",
												"src": "11063:50:0"
											}
										]
									},
									"documentation": {
										"id": 621,
										"nodeType": "StructuredDocumentation",
										"src": "10038:315:0",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 687,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "10367:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10381:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "10373:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10373:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10372:17:0"
									},
									"returnParameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10407:0:0"
									},
									"scope": 936,
									"src": "10358:762:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 761,
										"nodeType": "Block",
										"src": "11514:1126:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 703,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 700,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 694,
																		"src": "11547:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 698,
																		"name": "ERC721",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 936,
																		"src": "11532:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721_$936_$",
																			"typeString": "type(contract ERC721)"
																		}
																	},
																	"id": 699,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11539:7:0",
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 165,
																	"src": "11532:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 701,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11532:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 702,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 690,
																"src": "11559:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11532:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572",
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11565:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															},
															"value": "ERC721: transfer from incorrect owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															}
														],
														"id": 697,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11524:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11524:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 706,
												"nodeType": "ExpressionStatement",
												"src": "11524:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 708,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 690,
															"src": "11714:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 709,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 692,
															"src": "11720:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 710,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 694,
															"src": "11724:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 711,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11733:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 707,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 907,
														"src": "11693:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11693:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 713,
												"nodeType": "ExpressionStatement",
												"src": "11693:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 717,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 694,
																		"src": "11850:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 715,
																		"name": "ERC721",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 936,
																		"src": "11835:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721_$936_$",
																			"typeString": "type(contract ERC721)"
																		}
																	},
																	"id": 716,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11842:7:0",
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 165,
																	"src": "11835:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 718,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11835:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 719,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 690,
																"src": "11862:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11835:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572",
															"id": 721,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11868:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															},
															"value": "ERC721: transfer from incorrect owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															}
														],
														"id": 714,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11827:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11827:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 723,
												"nodeType": "ExpressionStatement",
												"src": "11827:81:0"
											},
											{
												"expression": {
													"id": 727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "11970:31:0",
													"subExpression": {
														"baseExpression": {
															"id": 724,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "11977:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 726,
														"indexExpression": {
															"id": 725,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 694,
															"src": "11993:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11977:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 728,
												"nodeType": "ExpressionStatement",
												"src": "11970:31:0"
											},
											{
												"id": 741,
												"nodeType": "UncheckedBlock",
												"src": "12012:496:0",
												"statements": [
													{
														"expression": {
															"id": 733,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 729,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 37,
																	"src": "12445:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 731,
																"indexExpression": {
																	"id": 730,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 690,
																	"src": "12455:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "12445:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 732,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12464:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "12445:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 734,
														"nodeType": "ExpressionStatement",
														"src": "12445:20:0"
													},
													{
														"expression": {
															"id": 739,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 735,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 37,
																	"src": "12479:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 737,
																"indexExpression": {
																	"id": 736,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 692,
																	"src": "12489:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "12479:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 738,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12496:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "12479:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 740,
														"nodeType": "ExpressionStatement",
														"src": "12479:18:0"
													}
												]
											},
											{
												"expression": {
													"id": 746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 742,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 33,
															"src": "12517:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 744,
														"indexExpression": {
															"id": 743,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 694,
															"src": "12525:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12517:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 745,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 692,
														"src": "12536:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12517:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 747,
												"nodeType": "ExpressionStatement",
												"src": "12517:21:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 749,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 690,
															"src": "12563:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 750,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 692,
															"src": "12569:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 751,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 694,
															"src": "12573:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 748,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "12554:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12554:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 753,
												"nodeType": "EmitStatement",
												"src": "12549:32:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 755,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 690,
															"src": "12612:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 756,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 692,
															"src": "12618:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 757,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 694,
															"src": "12622:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 758,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12631:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 754,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 920,
														"src": "12592:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12592:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 760,
												"nodeType": "ExpressionStatement",
												"src": "12592:41:0"
											}
										]
									},
									"documentation": {
										"id": 688,
										"nodeType": "StructuredDocumentation",
										"src": "11126:313:0",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"functionSelector": "30e0789e",
									"id": 762,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "11453:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11471:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "11463:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 689,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11463:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11485:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "11477:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11477:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11497:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "11489:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11489:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11462:43:0"
									},
									"returnParameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11514:0:0"
									},
									"scope": 936,
									"src": "11444:1196:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 785,
										"nodeType": "Block",
										"src": "12816:107:0",
										"statements": [
											{
												"expression": {
													"id": 774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 770,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "12826:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 772,
														"indexExpression": {
															"id": 771,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "12842:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12826:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 773,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 765,
														"src": "12853:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12826:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 775,
												"nodeType": "ExpressionStatement",
												"src": "12826:29:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 779,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 767,
																	"src": "12894:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 777,
																	"name": "ERC721",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 936,
																	"src": "12879:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC721_$936_$",
																		"typeString": "type(contract ERC721)"
																	}
																},
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12886:7:0",
																"memberName": "ownerOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 165,
																"src": "12879:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																	"typeString": "function (uint256) view returns (address)"
																}
															},
															"id": 780,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12879:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 781,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "12904:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 782,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "12908:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 776,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "12870:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12870:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 784,
												"nodeType": "EmitStatement",
												"src": "12865:51:0"
											}
										]
									},
									"documentation": {
										"id": 763,
										"nodeType": "StructuredDocumentation",
										"src": "12646:101:0",
										"text": " @dev Approve `to` to operate on `tokenId`\n Emits an {Approval} event."
									},
									"id": 786,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "12761:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12778:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "12770:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12770:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12790:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "12782:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12782:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12769:29:0"
									},
									"returnParameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12816:0:0"
									},
									"scope": 936,
									"src": "12752:171:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 817,
										"nodeType": "Block",
										"src": "13152:184:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 799,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 797,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 789,
																"src": "13170:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 798,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "13179:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "13170:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
															"id": 800,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13189:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
																"typeString": "literal_string \"ERC721: approve to caller\""
															},
															"value": "ERC721: approve to caller"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
																"typeString": "literal_string \"ERC721: approve to caller\""
															}
														],
														"id": 796,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13162:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13162:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 802,
												"nodeType": "ExpressionStatement",
												"src": "13162:55:0"
											},
											{
												"expression": {
													"id": 809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 803,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 47,
																"src": "13227:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 806,
															"indexExpression": {
																"id": 804,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 789,
																"src": "13246:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13227:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 807,
														"indexExpression": {
															"id": 805,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "13253:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13227:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 808,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "13265:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "13227:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 810,
												"nodeType": "ExpressionStatement",
												"src": "13227:46:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 812,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 789,
															"src": "13303:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 813,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "13310:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 814,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "13320:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 811,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 969,
														"src": "13288:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13288:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 816,
												"nodeType": "EmitStatement",
												"src": "13283:46:0"
											}
										]
									},
									"documentation": {
										"id": 787,
										"nodeType": "StructuredDocumentation",
										"src": "12929:125:0",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event."
									},
									"id": 818,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "13068:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13095:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "13087:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 788,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13087:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13110:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "13102:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13102:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "13125:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "13120:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 792,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13120:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13086:48:0"
									},
									"returnParameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13152:0:0"
									},
									"scope": 936,
									"src": "13059:277:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 831,
										"nodeType": "Block",
										"src": "13483:70:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 826,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 821,
																	"src": "13509:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 825,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 465,
																"src": "13501:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 827,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13501:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
															"id": 828,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13519:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															},
															"value": "ERC721: invalid token ID"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															}
														],
														"id": 824,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13493:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13493:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 830,
												"nodeType": "ExpressionStatement",
												"src": "13493:53:0"
											}
										]
									},
									"documentation": {
										"id": 819,
										"nodeType": "StructuredDocumentation",
										"src": "13342:73:0",
										"text": " @dev Reverts if the `tokenId` has not been minted yet."
									},
									"id": 832,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireMinted",
									"nameLocation": "13429:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13452:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "13444:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13444:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13443:17:0"
									},
									"returnParameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13483:0:0"
									},
									"scope": 936,
									"src": "13420:133:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 893,
										"nodeType": "Block",
										"src": "14260:676:0",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 846,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "14274:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 847,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "14277:10:0",
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1115,
														"src": "14274:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14274:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 891,
													"nodeType": "Block",
													"src": "14894:36:0",
													"statements": [
														{
															"expression": {
																"hexValue": "74727565",
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14915:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 845,
															"id": 890,
															"nodeType": "Return",
															"src": "14908:11:0"
														}
													]
												},
												"id": 892,
												"nodeType": "IfStatement",
												"src": "14270:660:0",
												"trueBody": {
													"id": 888,
													"nodeType": "Block",
													"src": "14291:597:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 868,
																		"nodeType": "Block",
																		"src": "14405:91:0",
																		"statements": [
																			{
																				"expression": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 866,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 862,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 860,
																						"src": "14430:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 863,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1070,
																								"src": "14440:15:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1070_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 864,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "14456:16:0",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1069,
																							"src": "14440:32:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 865,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "14473:8:0",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "14440:41:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "14430:51:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"functionReturnParameters": 845,
																				"id": 867,
																				"nodeType": "Return",
																				"src": "14423:58:0"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 869,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 861,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 860,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "14397:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 869,
																				"src": "14390:13:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 859,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "14390:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14389:15:0"
																	},
																	"src": "14381:115:0"
																},
																{
																	"block": {
																		"id": 885,
																		"nodeType": "Block",
																		"src": "14525:353:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 876,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 873,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 871,
																							"src": "14547:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 874,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "14554:6:0",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "14547:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 875,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14564:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "14547:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 883,
																					"nodeType": "Block",
																					"src": "14674:190:0",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "14760:86:0",
																								"nodeType": "YulBlock",
																								"src": "14760:86:0",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "14797:2:0",
																															"nodeType": "YulLiteral",
																															"src": "14797:2:0",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "14801:6:0",
																															"nodeType": "YulIdentifier",
																															"src": "14801:6:0"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "14793:3:0",
																														"nodeType": "YulIdentifier",
																														"src": "14793:3:0"
																													},
																													"nativeSrc": "14793:15:0",
																													"nodeType": "YulFunctionCall",
																													"src": "14793:15:0"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "14816:6:0",
																															"nodeType": "YulIdentifier",
																															"src": "14816:6:0"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "14810:5:0",
																														"nodeType": "YulIdentifier",
																														"src": "14810:5:0"
																													},
																													"nativeSrc": "14810:13:0",
																													"nodeType": "YulFunctionCall",
																													"src": "14810:13:0"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "14786:6:0",
																												"nodeType": "YulIdentifier",
																												"src": "14786:6:0"
																											},
																											"nativeSrc": "14786:38:0",
																											"nodeType": "YulFunctionCall",
																											"src": "14786:38:0"
																										},
																										"nativeSrc": "14786:38:0",
																										"nodeType": "YulExpressionStatement",
																										"src": "14786:38:0"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "paris",
																							"externalReferences": [
																								{
																									"declaration": 871,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "14801:6:0",
																									"valueSize": 1
																								},
																								{
																									"declaration": 871,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "14816:6:0",
																									"valueSize": 1
																								}
																							],
																							"id": 882,
																							"nodeType": "InlineAssembly",
																							"src": "14751:95:0"
																						}
																					]
																				},
																				"id": 884,
																				"nodeType": "IfStatement",
																				"src": "14543:321:0",
																				"trueBody": {
																					"id": 881,
																					"nodeType": "Block",
																					"src": "14567:101:0",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
																										"id": 878,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "14596:52:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																											"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
																										},
																										"value": "ERC721: transfer to non ERC721Receiver implementer"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																											"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
																										}
																									],
																									"id": 877,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "14589:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 879,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "14589:60:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 880,
																							"nodeType": "ExpressionStatement",
																							"src": "14589:60:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 886,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 872,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 871,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "14517:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 886,
																				"src": "14504:19:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 870,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "14504:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14503:21:0"
																	},
																	"src": "14497:381:0"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 853,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1439,
																			"src": "14346:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 854,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14346:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 855,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 835,
																		"src": "14360:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 856,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 839,
																		"src": "14366:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 857,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 841,
																		"src": "14375:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 850,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 837,
																				"src": "14325:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 849,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1070,
																			"src": "14309:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1070_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 851,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14309:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1070",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 852,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "14329:16:0",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1069,
																	"src": "14309:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 858,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14309:71:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 887,
															"nodeType": "TryStatement",
															"src": "14305:573:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 833,
										"nodeType": "StructuredDocumentation",
										"src": "13559:541:0",
										"text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
									},
									"id": 894,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "14114:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14154:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "14146:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 834,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14146:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14176:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "14168:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14168:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14196:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "14188:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14188:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14226:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "14213:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 840,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14213:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14136:100:0"
									},
									"returnParameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "14254:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 843,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14254:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14253:6:0"
									},
									"scope": 936,
									"src": "14105:831:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 906,
										"nodeType": "Block",
										"src": "15766:2:0",
										"statements": []
									},
									"documentation": {
										"id": 895,
										"nodeType": "StructuredDocumentation",
										"src": "14942:705:0",
										"text": " @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n - When `from` is zero, the tokens will be minted for `to`.\n - When `to` is zero, ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 907,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "15661:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15690:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "15682:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 896,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15682:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15704:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "15696:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 898,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15696:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "firstTokenId",
												"nameLocation": "15716:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "15708:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15708:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "batchSize",
												"nameLocation": "15738:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "15730:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 902,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15730:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15681:67:0"
									},
									"returnParameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15766:0:0"
									},
									"scope": 936,
									"src": "15652:116:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 919,
										"nodeType": "Block",
										"src": "16587:2:0",
										"statements": []
									},
									"documentation": {
										"id": 908,
										"nodeType": "StructuredDocumentation",
										"src": "15774:695:0",
										"text": " @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n - When `from` is zero, the tokens were minted for `to`.\n - When `to` is zero, ``from``'s tokens were burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 920,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "16483:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16511:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "16503:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 909,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16503:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16525:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "16517:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 911,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16517:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "firstTokenId",
												"nameLocation": "16537:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "16529:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 913,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16529:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "batchSize",
												"nameLocation": "16559:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "16551:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 915,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16551:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16502:67:0"
									},
									"returnParameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16587:0:0"
									},
									"scope": 936,
									"src": "16474:115:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 934,
										"nodeType": "Block",
										"src": "17138:45:0",
										"statements": [
											{
												"expression": {
													"id": 932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 928,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 37,
															"src": "17148:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 930,
														"indexExpression": {
															"id": 929,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 923,
															"src": "17158:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "17148:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 931,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 925,
														"src": "17170:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17148:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 933,
												"nodeType": "ExpressionStatement",
												"src": "17148:28:0"
											}
										]
									},
									"documentation": {
										"id": 921,
										"nodeType": "StructuredDocumentation",
										"src": "16595:409:0",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\n being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\n that `ownerOf(tokenId)` is `a`."
									},
									"id": 935,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "__unsafe_increaseBalance",
									"nameLocation": "17071:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "17104:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 935,
												"src": "17096:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 922,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17096:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "17121:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 935,
												"src": "17113:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17113:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17095:33:0"
									},
									"returnParameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17138:0:0"
									},
									"scope": 936,
									"src": "17062:121:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 937,
							"src": "628:16557:0",
							"usedErrors": [],
							"usedEvents": [
								951,
								960,
								969
							]
						}
					],
					"src": "107:17079:0"
				},
				"id": 0
			},
			".deps/npm/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1714
						],
						"IERC721": [
							1052
						]
					},
					"id": 1053,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 938,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:1"
						},
						{
							"absolutePath": ".deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 939,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1053,
							"sourceUnit": 1715,
							"src": "133:47:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 941,
										"name": "IERC165",
										"nameLocations": [
											"271:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1714,
										"src": "271:7:1"
									},
									"id": 942,
									"nodeType": "InheritanceSpecifier",
									"src": "271:7:1"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 940,
								"nodeType": "StructuredDocumentation",
								"src": "182:67:1",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1052,
							"linearizedBaseContracts": [
								1052,
								1714
							],
							"name": "IERC721",
							"nameLocation": "260:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 943,
										"nodeType": "StructuredDocumentation",
										"src": "285:88:1",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 951,
									"name": "Transfer",
									"nameLocation": "384:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 945,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "409:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "393:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 944,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 947,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "431:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "415:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 946,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 949,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "451:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "435:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:67:1"
									},
									"src": "378:82:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 952,
										"nodeType": "StructuredDocumentation",
										"src": "466:94:1",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 960,
									"name": "Approval",
									"nameLocation": "571:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 954,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "596:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "580:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 953,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 956,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "619:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "603:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 955,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 958,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "645:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "629:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 957,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:74:1"
									},
									"src": "565:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 961,
										"nodeType": "StructuredDocumentation",
										"src": "660:117:1",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 969,
									"name": "ApprovalForAll",
									"nameLocation": "788:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "819:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "803:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 962,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "842:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "826:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 964,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "857:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "852:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 966,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "852:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:64:1"
									},
									"src": "782:85:1"
								},
								{
									"documentation": {
										"id": 970,
										"nodeType": "StructuredDocumentation",
										"src": "873:76:1",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 977,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "963:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "981:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 977,
												"src": "973:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 971,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:15:1"
									},
									"returnParameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1019:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 977,
												"src": "1011:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 974,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:17:1"
									},
									"scope": 1052,
									"src": "954:74:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 978,
										"nodeType": "StructuredDocumentation",
										"src": "1034:131:1",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 985,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1179:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1195:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "1187:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:17:1"
									},
									"returnParameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1235:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "1227:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 982,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:15:1"
									},
									"scope": 1052,
									"src": "1170:72:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 986,
										"nodeType": "StructuredDocumentation",
										"src": "1248:556:1",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 997,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1818:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1843:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "1835:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 987,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1835:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1857:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "1849:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 989,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1849:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1869:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "1861:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 991,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1861:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1893:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "1878:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 993,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1878:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:64:1"
									},
									"returnParameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1907:0:1"
									},
									"scope": 1052,
									"src": "1809:99:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 998,
										"nodeType": "StructuredDocumentation",
										"src": "1914:687:1",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1007,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2615:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2640:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "2632:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 999,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2632:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2654:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "2646:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1001,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2646:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2666:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "2658:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1003,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2658:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2631:43:1"
									},
									"returnParameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2683:0:1"
									},
									"scope": 1052,
									"src": "2606:78:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1008,
										"nodeType": "StructuredDocumentation",
										"src": "2690:732:1",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1017,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3436:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3457:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "3449:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1009,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3449:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3471:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "3463:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1011,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3463:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3483:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "3475:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1013,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3475:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3448:43:1"
									},
									"returnParameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3500:0:1"
									},
									"scope": 1052,
									"src": "3427:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1018,
										"nodeType": "StructuredDocumentation",
										"src": "3507:452:1",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1025,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3973:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3989:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "3981:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1019,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3981:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4001:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "3993:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1021,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3993:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3980:29:1"
									},
									"returnParameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4018:0:1"
									},
									"scope": 1052,
									"src": "3964:55:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1026,
										"nodeType": "StructuredDocumentation",
										"src": "4025:309:1",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1033,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4348:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4374:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "4366:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1027,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4366:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4389:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "4384:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1029,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4384:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:33:1"
									},
									"returnParameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4407:0:1"
									},
									"scope": 1052,
									"src": "4339:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1034,
										"nodeType": "StructuredDocumentation",
										"src": "4414:139:1",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1041,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4567:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4587:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "4579:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1035,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4579:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4578:17:1"
									},
									"returnParameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4627:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "4619:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1038,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4619:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4618:18:1"
									},
									"scope": 1052,
									"src": "4558:79:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1042,
										"nodeType": "StructuredDocumentation",
										"src": "4643:138:1",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1051,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4795:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4820:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "4812:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1043,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4835:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "4827:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1045,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4827:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4811:33:1"
									},
									"returnParameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "4868:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1048,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4868:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4867:6:1"
									},
									"scope": 1052,
									"src": "4786:88:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1053,
							"src": "250:4626:1",
							"usedErrors": [],
							"usedEvents": [
								951,
								960,
								969
							]
						}
					],
					"src": "108:4769:1"
				},
				"id": 1
			},
			".deps/npm/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1070
						]
					},
					"id": 1071,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1054,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "116:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1055,
								"nodeType": "StructuredDocumentation",
								"src": "141:152:2",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1070,
							"linearizedBaseContracts": [
								1070
							],
							"name": "IERC721Receiver",
							"nameLocation": "304:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1056,
										"nodeType": "StructuredDocumentation",
										"src": "326:493:2",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1069,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "833:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "867:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "859:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1057,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "859:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "893:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "885:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1059,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "885:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "915:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "907:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1061,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "947:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "932:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1063,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "932:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:108:2"
									},
									"returnParameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "976:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1066,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "976:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "975:8:2"
									},
									"scope": 1070,
									"src": "824:160:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1071,
							"src": "294:692:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:871:2"
				},
				"id": 2
			},
			".deps/npm/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC165": [
							1714
						],
						"IERC721": [
							1052
						],
						"IERC721Metadata": [
							1097
						]
					},
					"id": 1098,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1072,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:3"
						},
						{
							"absolutePath": ".deps/npm/@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1073,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1098,
							"sourceUnit": 1053,
							"src": "137:24:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1075,
										"name": "IERC721",
										"nameLocations": [
											"326:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1052,
										"src": "326:7:3"
									},
									"id": 1076,
									"nodeType": "InheritanceSpecifier",
									"src": "326:7:3"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1074,
								"nodeType": "StructuredDocumentation",
								"src": "163:133:3",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1097,
							"linearizedBaseContracts": [
								1097,
								1052,
								1714
							],
							"name": "IERC721Metadata",
							"nameLocation": "307:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1077,
										"nodeType": "StructuredDocumentation",
										"src": "340:58:3",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1082,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "412:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "416:2:3"
									},
									"returnParameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "442:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1079,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "442:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "441:15:3"
									},
									"scope": 1097,
									"src": "403:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1083,
										"nodeType": "StructuredDocumentation",
										"src": "463:60:3",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1088,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "537:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "543:2:3"
									},
									"returnParameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "569:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1085,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "569:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "568:15:3"
									},
									"scope": 1097,
									"src": "528:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1089,
										"nodeType": "StructuredDocumentation",
										"src": "590:90:3",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1096,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "694:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "711:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "703:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1090,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "703:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "702:17:3"
									},
									"returnParameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "743:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1093,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "743:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "742:15:3"
									},
									"scope": 1097,
									"src": "685:73:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1098,
							"src": "297:463:3",
							"usedErrors": [],
							"usedEvents": [
								951,
								960,
								969
							]
						}
					],
					"src": "112:649:3"
				},
				"id": 3
			},
			".deps/npm/@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1427
						]
					},
					"id": 1428,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1099,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1100,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:4",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1427,
							"linearizedBaseContracts": [
								1427
							],
							"name": "Address",
							"nameLocation": "202:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1114,
										"nodeType": "Block",
										"src": "1478:254:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1108,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1103,
																"src": "1702:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1109,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1710:4:4",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1702:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1715:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1702:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1111,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1724:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1702:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1107,
												"id": 1113,
												"nodeType": "Return",
												"src": "1695:30:4"
											}
										]
									},
									"documentation": {
										"id": 1101,
										"nodeType": "StructuredDocumentation",
										"src": "216:1191:4",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1115,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1421:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1440:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "1432:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1432:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1431:17:4"
									},
									"returnParameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "1472:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1105,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1472:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1471:6:4"
									},
									"scope": 1427,
									"src": "1412:320:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1148,
										"nodeType": "Block",
										"src": "2718:241:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1126,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2744:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1427",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1427",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1125,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2736:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1124,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2736:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2736:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1128,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2750:7:4",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2736:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1129,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1120,
																"src": "2761:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2736:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1131,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2769:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1123,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2728:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2728:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1133,
												"nodeType": "ExpressionStatement",
												"src": "2728:73:4"
											},
											{
												"assignments": [
													1135,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1135,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2818:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1148,
														"src": "2813:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1134,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2813:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1142,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1140,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2861:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1136,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1118,
																"src": "2831:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2841:4:4",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2831:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1139,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1138,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1120,
																"src": "2853:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2831:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2831:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2812:52:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1144,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1135,
															"src": "2882:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1145,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2891:60:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1143,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2874:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2874:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1147,
												"nodeType": "ExpressionStatement",
												"src": "2874:78:4"
											}
										]
									},
									"documentation": {
										"id": 1116,
										"nodeType": "StructuredDocumentation",
										"src": "1738:904:4",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1149,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2656:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1118,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2682:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "2666:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2666:15:4",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2701:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "2693:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2693:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2665:43:4"
									},
									"returnParameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2718:0:4"
									},
									"scope": 1427,
									"src": "2647:312:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1166,
										"nodeType": "Block",
										"src": "3790:96:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1160,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1152,
															"src": "3829:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1161,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1154,
															"src": "3837:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1162,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3843:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1163,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3846:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1159,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1207,
															1251
														],
														"referencedDeclaration": 1251,
														"src": "3807:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3807:72:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1158,
												"id": 1165,
												"nodeType": "Return",
												"src": "3800:79:4"
											}
										]
									},
									"documentation": {
										"id": 1150,
										"nodeType": "StructuredDocumentation",
										"src": "2965:731:4",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1167,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3710:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3731:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "3723:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3723:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3752:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "3739:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1153,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3739:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3722:35:4"
									},
									"returnParameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "3776:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1156,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3776:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3775:14:4"
									},
									"scope": 1427,
									"src": "3701:185:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1186,
										"nodeType": "Block",
										"src": "4255:76:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1180,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1170,
															"src": "4294:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1181,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1172,
															"src": "4302:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1182,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4308:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1183,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1174,
															"src": "4311:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1179,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1207,
															1251
														],
														"referencedDeclaration": 1251,
														"src": "4272:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4272:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1178,
												"id": 1185,
												"nodeType": "Return",
												"src": "4265:59:4"
											}
										]
									},
									"documentation": {
										"id": 1168,
										"nodeType": "StructuredDocumentation",
										"src": "3892:211:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "4117:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4147:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "4139:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4139:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1172,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4176:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "4163:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1171,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4163:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1174,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4204:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "4190:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4190:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4129:93:4"
									},
									"returnParameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "4241:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1176,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4241:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4240:14:4"
									},
									"scope": 1427,
									"src": "4108:223:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1206,
										"nodeType": "Block",
										"src": "4806:111:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1200,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1190,
															"src": "4845:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1201,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1192,
															"src": "4853:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1202,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1194,
															"src": "4859:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1203,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4866:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1199,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1207,
															1251
														],
														"referencedDeclaration": 1251,
														"src": "4823:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4823:87:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1198,
												"id": 1205,
												"nodeType": "Return",
												"src": "4816:94:4"
											}
										]
									},
									"documentation": {
										"id": 1188,
										"nodeType": "StructuredDocumentation",
										"src": "4337:351:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1207,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4702:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4732:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "4724:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4724:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4753:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "4740:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1191,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4740:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4767:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "4759:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4759:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4723:50:4"
									},
									"returnParameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "4792:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1196,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4792:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4791:14:4"
									},
									"scope": 1427,
									"src": "4693:224:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1250,
										"nodeType": "Block",
										"src": "5344:267:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1224,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5370:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1427",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1427",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1223,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5362:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1222,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5362:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1225,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5362:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1226,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5376:7:4",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5362:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1227,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1214,
																"src": "5387:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5362:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1229,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5394:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1221,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5354:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5354:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1231,
												"nodeType": "ExpressionStatement",
												"src": "5354:81:4"
											},
											{
												"assignments": [
													1233,
													1235
												],
												"declarations": [
													{
														"constant": false,
														"id": 1233,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5451:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1250,
														"src": "5446:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1232,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5446:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1235,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5473:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1250,
														"src": "5460:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1234,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5460:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1242,
												"initialValue": {
													"arguments": [
														{
															"id": 1240,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1212,
															"src": "5513:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1236,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1210,
																"src": "5487:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1237,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5494:4:4",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5487:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1239,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1238,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1214,
																"src": "5506:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5487:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5487:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5445:73:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1244,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1210,
															"src": "5562:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1245,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1233,
															"src": "5570:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1246,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1235,
															"src": "5579:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1247,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1216,
															"src": "5591:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1243,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1382,
														"src": "5535:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5535:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1220,
												"id": 1249,
												"nodeType": "Return",
												"src": "5528:76:4"
											}
										]
									},
									"documentation": {
										"id": 1208,
										"nodeType": "StructuredDocumentation",
										"src": "4923:237:4",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5174:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1210,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5213:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "5205:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5205:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5242:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "5229:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1211,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5229:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5264:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "5256:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5256:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5293:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "5279:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1215,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5279:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5195:116:4"
									},
									"returnParameters": {
										"id": 1220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "5330:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1218,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5330:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5329:14:4"
									},
									"scope": 1427,
									"src": "5165:446:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1267,
										"nodeType": "Block",
										"src": "5888:97:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1262,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1254,
															"src": "5924:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1263,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1256,
															"src": "5932:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1264,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5938:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1261,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1268,
															1297
														],
														"referencedDeclaration": 1297,
														"src": "5905:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5905:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1260,
												"id": 1266,
												"nodeType": "Return",
												"src": "5898:80:4"
											}
										]
									},
									"documentation": {
										"id": 1252,
										"nodeType": "StructuredDocumentation",
										"src": "5617:166:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5797:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5824:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "5816:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5816:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5845:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "5832:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1255,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5832:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5815:35:4"
									},
									"returnParameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "5874:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1258,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5874:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5873:14:4"
									},
									"scope": 1427,
									"src": "5788:197:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1296,
										"nodeType": "Block",
										"src": "6327:168:4",
										"statements": [
											{
												"assignments": [
													1281,
													1283
												],
												"declarations": [
													{
														"constant": false,
														"id": 1281,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6343:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1296,
														"src": "6338:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1280,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6338:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1283,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6365:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1296,
														"src": "6352:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1282,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6352:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1288,
												"initialValue": {
													"arguments": [
														{
															"id": 1286,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1273,
															"src": "6397:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1284,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1271,
															"src": "6379:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1285,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6386:10:4",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6379:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6379:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6337:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1290,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1271,
															"src": "6446:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1291,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1281,
															"src": "6454:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1292,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1283,
															"src": "6463:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1293,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1275,
															"src": "6475:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1289,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1382,
														"src": "6419:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6419:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1279,
												"id": 1295,
												"nodeType": "Return",
												"src": "6412:76:4"
											}
										]
									},
									"documentation": {
										"id": 1269,
										"nodeType": "StructuredDocumentation",
										"src": "5991:173:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6178:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6214:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "6206:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6206:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6243:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "6230:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1272,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6230:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6271:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "6257:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1274,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6257:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6196:93:4"
									},
									"returnParameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "6313:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1277,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6313:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6312:14:4"
									},
									"scope": 1427,
									"src": "6169:326:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1313,
										"nodeType": "Block",
										"src": "6771:101:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1308,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1300,
															"src": "6809:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1309,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1302,
															"src": "6817:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1310,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6823:41:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1307,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1314,
															1343
														],
														"referencedDeclaration": 1343,
														"src": "6788:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6788:77:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1306,
												"id": 1312,
												"nodeType": "Return",
												"src": "6781:84:4"
											}
										]
									},
									"documentation": {
										"id": 1298,
										"nodeType": "StructuredDocumentation",
										"src": "6501:168:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1314,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6683:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6712:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "6704:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6704:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6733:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "6720:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1301,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6720:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6703:35:4"
									},
									"returnParameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "6757:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1304,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6757:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6756:14:4"
									},
									"scope": 1427,
									"src": "6674:198:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1342,
										"nodeType": "Block",
										"src": "7213:170:4",
										"statements": [
											{
												"assignments": [
													1327,
													1329
												],
												"declarations": [
													{
														"constant": false,
														"id": 1327,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7229:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1342,
														"src": "7224:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1326,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7224:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1329,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7251:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1342,
														"src": "7238:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1328,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7238:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1334,
												"initialValue": {
													"arguments": [
														{
															"id": 1332,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1319,
															"src": "7285:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1330,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1317,
															"src": "7265:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1331,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7272:12:4",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7265:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7265:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7223:67:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1336,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1317,
															"src": "7334:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1337,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1327,
															"src": "7342:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1338,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1329,
															"src": "7351:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1339,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1321,
															"src": "7363:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1335,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1382,
														"src": "7307:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7307:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1325,
												"id": 1341,
												"nodeType": "Return",
												"src": "7300:76:4"
											}
										]
									},
									"documentation": {
										"id": 1315,
										"nodeType": "StructuredDocumentation",
										"src": "6878:175:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1343,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7067:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1317,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7105:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "7097:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7097:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7134:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "7121:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1318,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7121:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1321,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7162:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "7148:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1320,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7148:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7087:93:4"
									},
									"returnParameters": {
										"id": 1325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "7199:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1323,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7199:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7198:14:4"
									},
									"scope": 1427,
									"src": "7058:325:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1381,
										"nodeType": "Block",
										"src": "7865:434:4",
										"statements": [
											{
												"condition": {
													"id": 1357,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1348,
													"src": "7879:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1379,
													"nodeType": "Block",
													"src": "8235:58:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1375,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1350,
																		"src": "8257:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1376,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1352,
																		"src": "8269:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1374,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1426,
																	"src": "8249:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1377,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8249:33:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1378,
															"nodeType": "ExpressionStatement",
															"src": "8249:33:4"
														}
													]
												},
												"id": 1380,
												"nodeType": "IfStatement",
												"src": "7875:418:4",
												"trueBody": {
													"id": 1373,
													"nodeType": "Block",
													"src": "7888:341:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1361,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1358,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1350,
																		"src": "7906:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1359,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7917:6:4",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7906:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1360,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7927:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7906:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1370,
															"nodeType": "IfStatement",
															"src": "7902:286:4",
															"trueBody": {
																"id": 1369,
																"nodeType": "Block",
																"src": "7930:258:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1364,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1346,
																							"src": "8132:6:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1363,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1115,
																						"src": "8121:10:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 1365,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8121:18:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 1366,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8141:31:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 1362,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8113:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8113:60:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1368,
																		"nodeType": "ExpressionStatement",
																		"src": "8113:60:4"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1371,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1350,
																"src": "8208:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1356,
															"id": 1372,
															"nodeType": "Return",
															"src": "8201:17:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1344,
										"nodeType": "StructuredDocumentation",
										"src": "7389:277:4",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 1382,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7680:26:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1346,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7724:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "7716:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7716:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1348,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7745:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "7740:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1347,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7740:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7775:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "7762:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1349,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7762:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7809:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "7795:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1351,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7795:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:121:4"
									},
									"returnParameters": {
										"id": 1356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "7851:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1354,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7851:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7850:14:4"
									},
									"scope": 1427,
									"src": "7671:628:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1405,
										"nodeType": "Block",
										"src": "8680:135:4",
										"statements": [
											{
												"condition": {
													"id": 1394,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1385,
													"src": "8694:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1403,
													"nodeType": "Block",
													"src": "8751:58:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1399,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1387,
																		"src": "8773:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1400,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1389,
																		"src": "8785:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1398,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1426,
																	"src": "8765:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1401,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8765:33:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1402,
															"nodeType": "ExpressionStatement",
															"src": "8765:33:4"
														}
													]
												},
												"id": 1404,
												"nodeType": "IfStatement",
												"src": "8690:119:4",
												"trueBody": {
													"id": 1397,
													"nodeType": "Block",
													"src": "8703:42:4",
													"statements": [
														{
															"expression": {
																"id": 1395,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1387,
																"src": "8724:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1393,
															"id": 1396,
															"nodeType": "Return",
															"src": "8717:17:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1383,
										"nodeType": "StructuredDocumentation",
										"src": "8305:210:4",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 1406,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8529:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1385,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8560:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1406,
												"src": "8555:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1384,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8555:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1387,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8590:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 1406,
												"src": "8577:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1386,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8577:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8624:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1406,
												"src": "8610:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1388,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8610:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8545:97:4"
									},
									"returnParameters": {
										"id": 1393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1392,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1406,
												"src": "8666:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1391,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8666:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8665:14:4"
									},
									"scope": 1427,
									"src": "8520:295:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1425,
										"nodeType": "Block",
										"src": "8904:457:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1413,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1408,
															"src": "8980:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1414,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8991:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8980:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1415,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9000:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8980:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1423,
													"nodeType": "Block",
													"src": "9310:45:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1420,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1410,
																		"src": "9331:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1419,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9324:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 1421,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9324:20:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1422,
															"nodeType": "ExpressionStatement",
															"src": "9324:20:4"
														}
													]
												},
												"id": 1424,
												"nodeType": "IfStatement",
												"src": "8976:379:4",
												"trueBody": {
													"id": 1418,
													"nodeType": "Block",
													"src": "9003:301:4",
													"statements": [
														{
															"AST": {
																"nativeSrc": "9161:133:4",
																"nodeType": "YulBlock",
																"src": "9161:133:4",
																"statements": [
																	{
																		"nativeSrc": "9179:40:4",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9179:40:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "9208:10:4",
																					"nodeType": "YulIdentifier",
																					"src": "9208:10:4"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "9202:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "9202:5:4"
																			},
																			"nativeSrc": "9202:17:4",
																			"nodeType": "YulFunctionCall",
																			"src": "9202:17:4"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "9183:15:4",
																				"nodeType": "YulTypedName",
																				"src": "9183:15:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "9247:2:4",
																							"nodeType": "YulLiteral",
																							"src": "9247:2:4",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "9251:10:4",
																							"nodeType": "YulIdentifier",
																							"src": "9251:10:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "9243:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "9243:3:4"
																					},
																					"nativeSrc": "9243:19:4",
																					"nodeType": "YulFunctionCall",
																					"src": "9243:19:4"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "9264:15:4",
																					"nodeType": "YulIdentifier",
																					"src": "9264:15:4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9236:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "9236:6:4"
																			},
																			"nativeSrc": "9236:44:4",
																			"nodeType": "YulFunctionCall",
																			"src": "9236:44:4"
																		},
																		"nativeSrc": "9236:44:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "9236:44:4"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "paris",
															"externalReferences": [
																{
																	"declaration": 1408,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9208:10:4",
																	"valueSize": 1
																},
																{
																	"declaration": 1408,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9251:10:4",
																	"valueSize": 1
																}
															],
															"id": 1417,
															"nodeType": "InlineAssembly",
															"src": "9152:142:4"
														}
													]
												}
											}
										]
									},
									"id": 1426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8830:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8851:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 1426,
												"src": "8838:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1407,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8838:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8877:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1426,
												"src": "8863:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1409,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8863:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8837:53:4"
									},
									"returnParameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8904:0:4"
									},
									"scope": 1427,
									"src": "8821:540:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1428,
							"src": "194:9169:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:9263:4"
				},
				"id": 4
			},
			".deps/npm/@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1449
						]
					},
					"id": 1450,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1429,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1430,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1449,
							"linearizedBaseContracts": [
								1449
							],
							"name": "Context",
							"nameLocation": "626:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1438,
										"nodeType": "Block",
										"src": "702:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1435,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1434,
												"id": 1437,
												"nodeType": "Return",
												"src": "712:17:5"
											}
										]
									},
									"id": 1439,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1431,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:5"
									},
									"returnParameters": {
										"id": 1434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1433,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1439,
												"src": "693:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:5"
									},
									"scope": 1449,
									"src": "640:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1447,
										"nodeType": "Block",
										"src": "809:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1444,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1443,
												"id": 1446,
												"nodeType": "Return",
												"src": "819:15:5"
											}
										]
									},
									"id": 1448,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:5"
									},
									"returnParameters": {
										"id": 1443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1442,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1448,
												"src": "793:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1441,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:5"
									},
									"scope": 1449,
									"src": "742:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1450,
							"src": "608:235:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "86:758:5"
				},
				"id": 5
			},
			".deps/npm/@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							2580
						],
						"SignedMath": [
							2685
						],
						"Strings": [
							1678
						]
					},
					"id": 1679,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1451,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:6"
						},
						{
							"absolutePath": ".deps/npm/@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1452,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1679,
							"sourceUnit": 2581,
							"src": "126:25:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/npm/@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1453,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1679,
							"sourceUnit": 2686,
							"src": "152:31:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1454,
								"nodeType": "StructuredDocumentation",
								"src": "185:34:6",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1678,
							"linearizedBaseContracts": [
								1678
							],
							"name": "Strings",
							"nameLocation": "228:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1457,
									"mutability": "constant",
									"name": "_SYMBOLS",
									"nameLocation": "267:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 1678,
									"src": "242:54:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1455,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "242:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1456,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "278:18:6",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1460,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "325:15:6",
									"nodeType": "VariableDeclaration",
									"scope": 1678,
									"src": "302:43:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1458,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "302:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1459,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "343:2:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1507,
										"nodeType": "Block",
										"src": "518:625:6",
										"statements": [
											{
												"id": 1506,
												"nodeType": "UncheckedBlock",
												"src": "528:609:6",
												"statements": [
													{
														"assignments": [
															1469
														],
														"declarations": [
															{
																"constant": false,
																"id": 1469,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "560:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 1506,
																"src": "552:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1468,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "552:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1476,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1475,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1472,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1463,
																		"src": "580:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1470,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2580,
																		"src": "569:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2580_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1471,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "574:5:6",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2417,
																	"src": "569:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1473,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "569:17:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1474,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "589:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "569:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "552:38:6"
													},
													{
														"assignments": [
															1478
														],
														"declarations": [
															{
																"constant": false,
																"id": 1478,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "618:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 1506,
																"src": "604:20:6",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1477,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "604:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1483,
														"initialValue": {
															"arguments": [
																{
																	"id": 1481,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1469,
																	"src": "638:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1480,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "627:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1479,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "631:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1482,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "627:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "604:41:6"
													},
													{
														"assignments": [
															1485
														],
														"declarations": [
															{
																"constant": false,
																"id": 1485,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "667:3:6",
																"nodeType": "VariableDeclaration",
																"scope": 1506,
																"src": "659:11:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1484,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "659:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1486,
														"nodeType": "VariableDeclarationStatement",
														"src": "659:11:6"
													},
													{
														"AST": {
															"nativeSrc": "740:67:6",
															"nodeType": "YulBlock",
															"src": "740:67:6",
															"statements": [
																{
																	"nativeSrc": "758:35:6",
																	"nodeType": "YulAssignment",
																	"src": "758:35:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "769:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "769:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "781:2:6",
																						"nodeType": "YulLiteral",
																						"src": "781:2:6",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "785:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "785:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "777:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "777:3:6"
																				},
																				"nativeSrc": "777:15:6",
																				"nodeType": "YulFunctionCall",
																				"src": "777:15:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "765:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "765:3:6"
																		},
																		"nativeSrc": "765:28:6",
																		"nodeType": "YulFunctionCall",
																		"src": "765:28:6"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "758:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "758:3:6"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 1478,
																"isOffset": false,
																"isSlot": false,
																"src": "769:6:6",
																"valueSize": 1
															},
															{
																"declaration": 1469,
																"isOffset": false,
																"isSlot": false,
																"src": "785:6:6",
																"valueSize": 1
															},
															{
																"declaration": 1485,
																"isOffset": false,
																"isSlot": false,
																"src": "758:3:6",
																"valueSize": 1
															}
														],
														"id": 1487,
														"nodeType": "InlineAssembly",
														"src": "731:76:6"
													},
													{
														"body": {
															"id": 1502,
															"nodeType": "Block",
															"src": "833:267:6",
															"statements": [
																{
																	"expression": {
																		"id": 1490,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "851:5:6",
																		"subExpression": {
																			"id": 1489,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1485,
																			"src": "851:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1491,
																	"nodeType": "ExpressionStatement",
																	"src": "851:5:6"
																},
																{
																	"AST": {
																		"nativeSrc": "934:84:6",
																		"nodeType": "YulBlock",
																		"src": "934:84:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "964:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "964:3:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "978:5:6",
																											"nodeType": "YulIdentifier",
																											"src": "978:5:6"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "985:2:6",
																											"nodeType": "YulLiteral",
																											"src": "985:2:6",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "974:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "974:3:6"
																									},
																									"nativeSrc": "974:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "974:14:6"
																								},
																								{
																									"name": "_SYMBOLS",
																									"nativeSrc": "990:8:6",
																									"nodeType": "YulIdentifier",
																									"src": "990:8:6"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "969:4:6",
																								"nodeType": "YulIdentifier",
																								"src": "969:4:6"
																							},
																							"nativeSrc": "969:30:6",
																							"nodeType": "YulFunctionCall",
																							"src": "969:30:6"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "956:7:6",
																						"nodeType": "YulIdentifier",
																						"src": "956:7:6"
																					},
																					"nativeSrc": "956:44:6",
																					"nodeType": "YulFunctionCall",
																					"src": "956:44:6"
																				},
																				"nativeSrc": "956:44:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "956:44:6"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "paris",
																	"externalReferences": [
																		{
																			"declaration": 1457,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "990:8:6",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1485,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "964:3:6",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1463,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "978:5:6",
																			"valueSize": 1
																		}
																	],
																	"id": 1492,
																	"nodeType": "InlineAssembly",
																	"src": "925:93:6"
																},
																{
																	"expression": {
																		"id": 1495,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1493,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1463,
																			"src": "1035:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1494,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1044:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1035:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1496,
																	"nodeType": "ExpressionStatement",
																	"src": "1035:11:6"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1497,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1463,
																			"src": "1068:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1498,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1077:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1068:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1501,
																	"nodeType": "IfStatement",
																	"src": "1064:21:6",
																	"trueBody": {
																		"id": 1500,
																		"nodeType": "Break",
																		"src": "1080:5:6"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1488,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "827:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1503,
														"nodeType": "WhileStatement",
														"src": "820:280:6"
													},
													{
														"expression": {
															"id": 1504,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1478,
															"src": "1120:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1467,
														"id": 1505,
														"nodeType": "Return",
														"src": "1113:13:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1461,
										"nodeType": "StructuredDocumentation",
										"src": "352:90:6",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1508,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "456:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "473:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "465:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "465:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "464:15:6"
									},
									"returnParameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "503:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1465,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "503:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "502:15:6"
									},
									"scope": 1678,
									"src": "447:696:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1535,
										"nodeType": "Block",
										"src": "1313:103:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 1522,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1520,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1511,
																			"src": "1354:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1521,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1362:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1354:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"hexValue": "",
																		"id": 1524,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1372:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	},
																	"id": 1525,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1354:20:6",
																	"trueExpression": {
																		"hexValue": "2d",
																		"id": 1523,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1366:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																			"typeString": "literal_string \"-\""
																		},
																		"value": "-"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1529,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1511,
																					"src": "1400:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				],
																				"expression": {
																					"id": 1527,
																					"name": "SignedMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2685,
																					"src": "1385:10:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SignedMath_$2685_$",
																						"typeString": "type(library SignedMath)"
																					}
																				},
																				"id": 1528,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1396:3:6",
																				"memberName": "abs",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2684,
																				"src": "1385:14:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																					"typeString": "function (int256) pure returns (uint256)"
																				}
																			},
																			"id": 1530,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1385:21:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1526,
																		"name": "toString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1508,
																			1536
																		],
																		"referencedDeclaration": 1508,
																		"src": "1376:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (string memory)"
																		}
																	},
																	"id": 1531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1376:31:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 1518,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1337:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1519,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1341:12:6",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "1337:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1337:71:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1517,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1330:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1516,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1330:6:6",
															"typeDescriptions": {}
														}
													},
													"id": 1533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1330:79:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1515,
												"id": 1534,
												"nodeType": "Return",
												"src": "1323:86:6"
											}
										]
									},
									"documentation": {
										"id": 1509,
										"nodeType": "StructuredDocumentation",
										"src": "1149:89:6",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1536,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "1252:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1511,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1268:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1536,
												"src": "1261:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1510,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1261:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1260:14:6"
									},
									"returnParameters": {
										"id": 1515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1514,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1536,
												"src": "1298:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1513,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1298:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1297:15:6"
									},
									"scope": 1678,
									"src": "1243:173:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1555,
										"nodeType": "Block",
										"src": "1595:100:6",
										"statements": [
											{
												"id": 1554,
												"nodeType": "UncheckedBlock",
												"src": "1605:84:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1545,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1539,
																	"src": "1648:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1551,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1548,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1539,
																				"src": "1667:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1546,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2580,
																				"src": "1655:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$2580_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1547,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1660:6:6",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2540,
																			"src": "1655:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1549,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1655:18:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1550,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1676:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1655:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1544,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1556,
																	1632,
																	1652
																],
																"referencedDeclaration": 1632,
																"src": "1636:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1636:42:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1543,
														"id": 1553,
														"nodeType": "Return",
														"src": "1629:49:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1537,
										"nodeType": "StructuredDocumentation",
										"src": "1422:94:6",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1556,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1530:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1539,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1550:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "1542:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1542:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1541:15:6"
									},
									"returnParameters": {
										"id": 1543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1542,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "1580:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1541,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1580:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1579:15:6"
									},
									"scope": 1678,
									"src": "1521:174:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1631,
										"nodeType": "Block",
										"src": "1908:347:6",
										"statements": [
											{
												"assignments": [
													1567
												],
												"declarations": [
													{
														"constant": false,
														"id": 1567,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1931:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1631,
														"src": "1918:19:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1566,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1918:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1576,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1574,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1572,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1950:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1571,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1561,
																	"src": "1954:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1950:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1573,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1963:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1950:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1569,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1940:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1568,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1944:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1940:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1918:47:6"
											},
											{
												"expression": {
													"id": 1581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1577,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1567,
															"src": "1975:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1579,
														"indexExpression": {
															"hexValue": "30",
															"id": 1578,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1982:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1975:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1580,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1987:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1975:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1582,
												"nodeType": "ExpressionStatement",
												"src": "1975:15:6"
											},
											{
												"expression": {
													"id": 1587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1583,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1567,
															"src": "2000:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1585,
														"indexExpression": {
															"hexValue": "31",
															"id": 1584,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2007:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2000:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1586,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2012:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2000:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1588,
												"nodeType": "ExpressionStatement",
												"src": "2000:15:6"
											},
											{
												"body": {
													"id": 1617,
													"nodeType": "Block",
													"src": "2070:83:6",
													"statements": [
														{
															"expression": {
																"id": 1611,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1603,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1567,
																		"src": "2084:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1605,
																	"indexExpression": {
																		"id": 1604,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1590,
																		"src": "2091:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2084:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1606,
																		"name": "_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1457,
																		"src": "2096:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1610,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1609,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1607,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1559,
																			"src": "2105:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1608,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2113:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2105:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2096:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2084:33:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1612,
															"nodeType": "ExpressionStatement",
															"src": "2084:33:6"
														},
														{
															"expression": {
																"id": 1615,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1613,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1559,
																	"src": "2131:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1614,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2141:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2131:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1616,
															"nodeType": "ExpressionStatement",
															"src": "2131:11:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1597,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1590,
														"src": "2058:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1598,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2062:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2058:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1618,
												"initializationExpression": {
													"assignments": [
														1590
													],
													"declarations": [
														{
															"constant": false,
															"id": 1590,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2038:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 1618,
															"src": "2030:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1589,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2030:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1596,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1595,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1591,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2042:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1592,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1561,
																"src": "2046:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2042:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1594,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2055:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2042:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2030:26:6"
												},
												"loopExpression": {
													"expression": {
														"id": 1601,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2065:3:6",
														"subExpression": {
															"id": 1600,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1590,
															"src": "2067:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1602,
													"nodeType": "ExpressionStatement",
													"src": "2065:3:6"
												},
												"nodeType": "ForStatement",
												"src": "2025:128:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1620,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1559,
																"src": "2170:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1621,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2179:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2170:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 1623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2182:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 1619,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2162:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2162:55:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1625,
												"nodeType": "ExpressionStatement",
												"src": "2162:55:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1628,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1567,
															"src": "2241:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1627,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2234:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1626,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2234:6:6",
															"typeDescriptions": {}
														}
													},
													"id": 1629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2234:14:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1565,
												"id": 1630,
												"nodeType": "Return",
												"src": "2227:21:6"
											}
										]
									},
									"documentation": {
										"id": 1557,
										"nodeType": "StructuredDocumentation",
										"src": "1701:112:6",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1632,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1827:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1559,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1847:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1632,
												"src": "1839:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1558,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1862:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1632,
												"src": "1854:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1560,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1854:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:6"
									},
									"returnParameters": {
										"id": 1565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1564,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1632,
												"src": "1893:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1563,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1893:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:15:6"
									},
									"scope": 1678,
									"src": "1818:437:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1651,
										"nodeType": "Block",
										"src": "2480:76:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1645,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1635,
																			"src": "2525:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2517:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1643,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2517:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1646,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2517:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1642,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2509:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1641,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2509:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1647,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2509:22:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1648,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1460,
															"src": "2533:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1640,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1556,
															1632,
															1652
														],
														"referencedDeclaration": 1632,
														"src": "2497:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2497:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1639,
												"id": 1650,
												"nodeType": "Return",
												"src": "2490:59:6"
											}
										]
									},
									"documentation": {
										"id": 1633,
										"nodeType": "StructuredDocumentation",
										"src": "2261:141:6",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 1652,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2416:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1635,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2436:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1652,
												"src": "2428:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2428:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2427:14:6"
									},
									"returnParameters": {
										"id": 1639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1638,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1652,
												"src": "2465:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1637,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2465:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:6"
									},
									"scope": 1678,
									"src": "2407:149:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1676,
										"nodeType": "Block",
										"src": "2711:66:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 1674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1665,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1655,
																		"src": "2744:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1664,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2738:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1663,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2738:5:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1666,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2738:8:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1662,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2728:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1667,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:19:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1671,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1657,
																		"src": "2767:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1670,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2761:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1669,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2761:5:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1672,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2761:8:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1668,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2751:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1673,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2751:19:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2728:42:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1661,
												"id": 1675,
												"nodeType": "Return",
												"src": "2721:49:6"
											}
										]
									},
									"documentation": {
										"id": 1653,
										"nodeType": "StructuredDocumentation",
										"src": "2562:66:6",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1677,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2642:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1655,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2662:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1677,
												"src": "2648:15:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1654,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2648:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1657,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2679:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1677,
												"src": "2665:15:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1656,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2665:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2647:34:6"
									},
									"returnParameters": {
										"id": 1661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1660,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1677,
												"src": "2705:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1659,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2705:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2704:6:6"
									},
									"scope": 1678,
									"src": "2633:144:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1679,
							"src": "220:2559:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:2679:6"
				},
				"id": 6
			},
			".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1702
						],
						"IERC165": [
							1714
						]
					},
					"id": 1703,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1680,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:7"
						},
						{
							"absolutePath": ".deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1681,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1703,
							"sourceUnit": 1715,
							"src": "124:23:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1683,
										"name": "IERC165",
										"nameLocations": [
											"754:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1714,
										"src": "754:7:7"
									},
									"id": 1684,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:7"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1682,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:7",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 1702,
							"linearizedBaseContracts": [
								1702,
								1714
							],
							"name": "ERC165",
							"nameLocation": "744:6:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1713
									],
									"body": {
										"id": 1700,
										"nodeType": "Block",
										"src": "920:64:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1693,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1687,
														"src": "937:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1695,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1714,
																	"src": "957:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1714_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1714_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1694,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1696,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1714",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1697,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "966:11:7",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1692,
												"id": 1699,
												"nodeType": "Return",
												"src": "930:47:7"
											}
										]
									},
									"documentation": {
										"id": 1685,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:7",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1701,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1689,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:7"
									},
									"parameters": {
										"id": 1688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1687,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1701,
												"src": "856:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1686,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:7"
									},
									"returnParameters": {
										"id": 1692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1691,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1701,
												"src": "914:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1690,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:7"
									},
									"scope": 1702,
									"src": "829:155:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1703,
							"src": "726:260:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "99:888:7"
				},
				"id": 7
			},
			".deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1714
						]
					},
					"id": 1715,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1704,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1705,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:8",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1714,
							"linearizedBaseContracts": [
								1714
							],
							"name": "IERC165",
							"nameLocation": "415:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1706,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:8",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1713,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1708,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "801:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1707,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:8"
									},
									"returnParameters": {
										"id": 1712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1711,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "844:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1710,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:8"
									},
									"scope": 1714,
									"src": "774:76:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1715,
							"src": "405:447:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "100:753:8"
				},
				"id": 8
			},
			".deps/npm/@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2580
						]
					},
					"id": 2581,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1716,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1717,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:9",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2580,
							"linearizedBaseContracts": [
								2580
							],
							"name": "Math",
							"nameLocation": "210:4:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 1721,
									"members": [
										{
											"id": 1718,
											"name": "Down",
											"nameLocation": "245:4:9",
											"nodeType": "EnumValue",
											"src": "245:4:9"
										},
										{
											"id": 1719,
											"name": "Up",
											"nameLocation": "287:2:9",
											"nodeType": "EnumValue",
											"src": "287:2:9"
										},
										{
											"id": 1720,
											"name": "Zero",
											"nameLocation": "318:4:9",
											"nodeType": "EnumValue",
											"src": "318:4:9"
										}
									],
									"name": "Rounding",
									"nameLocation": "226:8:9",
									"nodeType": "EnumDefinition",
									"src": "221:122:9"
								},
								{
									"body": {
										"id": 1738,
										"nodeType": "Block",
										"src": "480:37:9",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1733,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1731,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1724,
															"src": "497:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1732,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1726,
															"src": "501:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "497:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1735,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1726,
														"src": "509:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "497:13:9",
													"trueExpression": {
														"id": 1734,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1724,
														"src": "505:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1730,
												"id": 1737,
												"nodeType": "Return",
												"src": "490:20:9"
											}
										]
									},
									"documentation": {
										"id": 1722,
										"nodeType": "StructuredDocumentation",
										"src": "349:59:9",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1739,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "422:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1724,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "434:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1739,
												"src": "426:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1726,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "445:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1739,
												"src": "437:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:22:9"
									},
									"returnParameters": {
										"id": 1730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1729,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1739,
												"src": "471:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:9:9"
									},
									"scope": 2580,
									"src": "413:104:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1756,
										"nodeType": "Block",
										"src": "655:37:9",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1751,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1749,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1742,
															"src": "672:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1750,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1744,
															"src": "676:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "672:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1753,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1744,
														"src": "684:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "672:13:9",
													"trueExpression": {
														"id": 1752,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1742,
														"src": "680:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1748,
												"id": 1755,
												"nodeType": "Return",
												"src": "665:20:9"
											}
										]
									},
									"documentation": {
										"id": 1740,
										"nodeType": "StructuredDocumentation",
										"src": "523:60:9",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1757,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "597:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1742,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "601:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1741,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1744,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "612:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:9"
									},
									"returnParameters": {
										"id": 1748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1747,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "646:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1746,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:9:9"
									},
									"scope": 2580,
									"src": "588:104:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1779,
										"nodeType": "Block",
										"src": "876:82:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1769,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1767,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1760,
																	"src": "931:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1768,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1762,
																	"src": "935:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "931:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1770,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "930:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1776,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1773,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1771,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1760,
																		"src": "941:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1772,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1762,
																		"src": "945:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "941:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1774,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "940:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 1775,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "950:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "940:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "930:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1766,
												"id": 1778,
												"nodeType": "Return",
												"src": "923:28:9"
											}
										]
									},
									"documentation": {
										"id": 1758,
										"nodeType": "StructuredDocumentation",
										"src": "698:102:9",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 1780,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "814:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1760,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "830:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "822:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1759,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1762,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "841:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "833:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:22:9"
									},
									"returnParameters": {
										"id": 1766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1765,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "867:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:9:9"
									},
									"scope": 2580,
									"src": "805:153:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1804,
										"nodeType": "Block",
										"src": "1228:123:9",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1792,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1790,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1783,
															"src": "1316:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1791,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1321:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1316:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1801,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1799,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1796,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1794,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1783,
																			"src": "1330:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1795,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1334:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1330:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1797,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1329:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1798,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1785,
																"src": "1339:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1329:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1800,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1343:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1329:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1316:28:9",
													"trueExpression": {
														"hexValue": "30",
														"id": 1793,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1325:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1789,
												"id": 1803,
												"nodeType": "Return",
												"src": "1309:35:9"
											}
										]
									},
									"documentation": {
										"id": 1781,
										"nodeType": "StructuredDocumentation",
										"src": "964:188:9",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 1805,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1166:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1783,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1182:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1805,
												"src": "1174:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1782,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1174:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1785,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1193:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1805,
												"src": "1185:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1173:22:9"
									},
									"returnParameters": {
										"id": 1789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1788,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1805,
												"src": "1219:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1218:9:9"
									},
									"scope": 2580,
									"src": "1157:194:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1927,
										"nodeType": "Block",
										"src": "1765:4115:9",
										"statements": [
											{
												"id": 1926,
												"nodeType": "UncheckedBlock",
												"src": "1775:4099:9",
												"statements": [
													{
														"assignments": [
															1818
														],
														"declarations": [
															{
																"constant": false,
																"id": 1818,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2104:5:9",
																"nodeType": "VariableDeclaration",
																"scope": 1926,
																"src": "2096:13:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1817,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2096:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1819,
														"nodeType": "VariableDeclarationStatement",
														"src": "2096:13:9"
													},
													{
														"assignments": [
															1821
														],
														"declarations": [
															{
																"constant": false,
																"id": 1821,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2176:5:9",
																"nodeType": "VariableDeclaration",
																"scope": 1926,
																"src": "2168:13:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1820,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2168:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1822,
														"nodeType": "VariableDeclarationStatement",
														"src": "2168:13:9"
													},
													{
														"AST": {
															"nativeSrc": "2248:157:9",
															"nodeType": "YulBlock",
															"src": "2248:157:9",
															"statements": [
																{
																	"nativeSrc": "2266:30:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2266:30:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "2283:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "2283:1:9"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "2286:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "2286:1:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2293:1:9",
																						"nodeType": "YulLiteral",
																						"src": "2293:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2289:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2289:3:9"
																				},
																				"nativeSrc": "2289:6:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2289:6:9"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "2276:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "2276:6:9"
																		},
																		"nativeSrc": "2276:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2276:20:9"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "2270:2:9",
																			"nodeType": "YulTypedName",
																			"src": "2270:2:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2313:18:9",
																	"nodeType": "YulAssignment",
																	"src": "2313:18:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "2326:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "2326:1:9"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "2329:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "2329:1:9"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "2322:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2322:3:9"
																		},
																		"nativeSrc": "2322:9:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2322:9:9"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "2313:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "2313:5:9"
																		}
																	]
																},
																{
																	"nativeSrc": "2348:43:9",
																	"nodeType": "YulAssignment",
																	"src": "2348:43:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "2365:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "2365:2:9"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "2369:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "2369:5:9"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2361:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2361:3:9"
																				},
																				"nativeSrc": "2361:14:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2361:14:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "2380:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "2380:2:9"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "2384:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "2384:5:9"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "2377:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "2377:2:9"
																				},
																				"nativeSrc": "2377:13:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2377:13:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2357:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2357:3:9"
																		},
																		"nativeSrc": "2357:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2357:34:9"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "2348:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "2348:5:9"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 1818,
																"isOffset": false,
																"isSlot": false,
																"src": "2313:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1818,
																"isOffset": false,
																"isSlot": false,
																"src": "2369:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1818,
																"isOffset": false,
																"isSlot": false,
																"src": "2384:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1821,
																"isOffset": false,
																"isSlot": false,
																"src": "2348:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1808,
																"isOffset": false,
																"isSlot": false,
																"src": "2283:1:9",
																"valueSize": 1
															},
															{
																"declaration": 1808,
																"isOffset": false,
																"isSlot": false,
																"src": "2326:1:9",
																"valueSize": 1
															},
															{
																"declaration": 1810,
																"isOffset": false,
																"isSlot": false,
																"src": "2286:1:9",
																"valueSize": 1
															},
															{
																"declaration": 1810,
																"isOffset": false,
																"isSlot": false,
																"src": "2329:1:9",
																"valueSize": 1
															}
														],
														"id": 1823,
														"nodeType": "InlineAssembly",
														"src": "2239:166:9"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1826,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1824,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1821,
																"src": "2486:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1825,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2495:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2486:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1832,
														"nodeType": "IfStatement",
														"src": "2482:368:9",
														"trueBody": {
															"id": 1831,
															"nodeType": "Block",
															"src": "2498:352:9",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1829,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1827,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1818,
																			"src": "2816:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1828,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1812,
																			"src": "2824:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2816:19:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1816,
																	"id": 1830,
																	"nodeType": "Return",
																	"src": "2809:26:9"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1836,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1834,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1812,
																		"src": "2960:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 1835,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1821,
																		"src": "2974:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2960:19:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "4d6174683a206d756c446976206f766572666c6f77",
																	"id": 1837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2981:23:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	},
																	"value": "Math: mulDiv overflow"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	}
																],
																"id": 1833,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2952:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1838,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2952:53:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1839,
														"nodeType": "ExpressionStatement",
														"src": "2952:53:9"
													},
													{
														"assignments": [
															1841
														],
														"declarations": [
															{
																"constant": false,
																"id": 1841,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "3269:9:9",
																"nodeType": "VariableDeclaration",
																"scope": 1926,
																"src": "3261:17:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1840,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3261:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1842,
														"nodeType": "VariableDeclarationStatement",
														"src": "3261:17:9"
													},
													{
														"AST": {
															"nativeSrc": "3301:291:9",
															"nodeType": "YulBlock",
															"src": "3301:291:9",
															"statements": [
																{
																	"nativeSrc": "3370:38:9",
																	"nodeType": "YulAssignment",
																	"src": "3370:38:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "3390:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "3390:1:9"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "3393:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "3393:1:9"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "3396:11:9",
																				"nodeType": "YulIdentifier",
																				"src": "3396:11:9"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "3383:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "3383:6:9"
																		},
																		"nativeSrc": "3383:25:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3383:25:9"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "3370:9:9",
																			"nodeType": "YulIdentifier",
																			"src": "3370:9:9"
																		}
																	]
																},
																{
																	"nativeSrc": "3490:41:9",
																	"nodeType": "YulAssignment",
																	"src": "3490:41:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "3503:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3503:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "3513:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "3513:9:9"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "3524:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "3524:5:9"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "3510:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "3510:2:9"
																				},
																				"nativeSrc": "3510:20:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3510:20:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3499:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3499:3:9"
																		},
																		"nativeSrc": "3499:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3499:32:9"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "3490:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "3490:5:9"
																		}
																	]
																},
																{
																	"nativeSrc": "3548:30:9",
																	"nodeType": "YulAssignment",
																	"src": "3548:30:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "3561:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3561:5:9"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "3568:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3568:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3557:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3557:3:9"
																		},
																		"nativeSrc": "3557:21:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3557:21:9"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "3548:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "3548:5:9"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 1812,
																"isOffset": false,
																"isSlot": false,
																"src": "3396:11:9",
																"valueSize": 1
															},
															{
																"declaration": 1818,
																"isOffset": false,
																"isSlot": false,
																"src": "3524:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1818,
																"isOffset": false,
																"isSlot": false,
																"src": "3548:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1818,
																"isOffset": false,
																"isSlot": false,
																"src": "3561:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1821,
																"isOffset": false,
																"isSlot": false,
																"src": "3490:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1821,
																"isOffset": false,
																"isSlot": false,
																"src": "3503:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1841,
																"isOffset": false,
																"isSlot": false,
																"src": "3370:9:9",
																"valueSize": 1
															},
															{
																"declaration": 1841,
																"isOffset": false,
																"isSlot": false,
																"src": "3513:9:9",
																"valueSize": 1
															},
															{
																"declaration": 1841,
																"isOffset": false,
																"isSlot": false,
																"src": "3568:9:9",
																"valueSize": 1
															},
															{
																"declaration": 1808,
																"isOffset": false,
																"isSlot": false,
																"src": "3390:1:9",
																"valueSize": 1
															},
															{
																"declaration": 1810,
																"isOffset": false,
																"isSlot": false,
																"src": "3393:1:9",
																"valueSize": 1
															}
														],
														"id": 1843,
														"nodeType": "InlineAssembly",
														"src": "3292:300:9"
													},
													{
														"assignments": [
															1845
														],
														"declarations": [
															{
																"constant": false,
																"id": 1845,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3907:4:9",
																"nodeType": "VariableDeclaration",
																"scope": 1926,
																"src": "3899:12:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1844,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3899:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1853,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1852,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1846,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1812,
																"src": "3914:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1850,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1848,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3929:12:9",
																			"subExpression": {
																				"id": 1847,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1812,
																				"src": "3930:11:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1849,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3944:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3929:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1851,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3928:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3914:32:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3899:47:9"
													},
													{
														"AST": {
															"nativeSrc": "3969:362:9",
															"nodeType": "YulBlock",
															"src": "3969:362:9",
															"statements": [
																{
																	"nativeSrc": "4034:37:9",
																	"nodeType": "YulAssignment",
																	"src": "4034:37:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "4053:11:9",
																				"nodeType": "YulIdentifier",
																				"src": "4053:11:9"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "4066:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "4066:4:9"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "4049:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4049:3:9"
																		},
																		"nativeSrc": "4049:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4049:22:9"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "4034:11:9",
																			"nodeType": "YulIdentifier",
																			"src": "4034:11:9"
																		}
																	]
																},
																{
																	"nativeSrc": "4138:25:9",
																	"nodeType": "YulAssignment",
																	"src": "4138:25:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "4151:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "4151:5:9"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "4158:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "4158:4:9"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "4147:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4147:3:9"
																		},
																		"nativeSrc": "4147:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4147:16:9"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "4138:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "4138:5:9"
																		}
																	]
																},
																{
																	"nativeSrc": "4278:39:9",
																	"nodeType": "YulAssignment",
																	"src": "4278:39:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4298:1:9",
																								"nodeType": "YulLiteral",
																								"src": "4298:1:9",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "4301:4:9",
																								"nodeType": "YulIdentifier",
																								"src": "4301:4:9"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "4294:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "4294:3:9"
																						},
																						"nativeSrc": "4294:12:9",
																						"nodeType": "YulFunctionCall",
																						"src": "4294:12:9"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "4308:4:9",
																						"nodeType": "YulIdentifier",
																						"src": "4308:4:9"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "4290:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4290:3:9"
																				},
																				"nativeSrc": "4290:23:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4290:23:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4315:1:9",
																				"nodeType": "YulLiteral",
																				"src": "4315:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4286:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4286:3:9"
																		},
																		"nativeSrc": "4286:31:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4286:31:9"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "4278:4:9",
																			"nodeType": "YulIdentifier",
																			"src": "4278:4:9"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 1812,
																"isOffset": false,
																"isSlot": false,
																"src": "4034:11:9",
																"valueSize": 1
															},
															{
																"declaration": 1812,
																"isOffset": false,
																"isSlot": false,
																"src": "4053:11:9",
																"valueSize": 1
															},
															{
																"declaration": 1818,
																"isOffset": false,
																"isSlot": false,
																"src": "4138:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1818,
																"isOffset": false,
																"isSlot": false,
																"src": "4151:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1845,
																"isOffset": false,
																"isSlot": false,
																"src": "4066:4:9",
																"valueSize": 1
															},
															{
																"declaration": 1845,
																"isOffset": false,
																"isSlot": false,
																"src": "4158:4:9",
																"valueSize": 1
															},
															{
																"declaration": 1845,
																"isOffset": false,
																"isSlot": false,
																"src": "4278:4:9",
																"valueSize": 1
															},
															{
																"declaration": 1845,
																"isOffset": false,
																"isSlot": false,
																"src": "4301:4:9",
																"valueSize": 1
															},
															{
																"declaration": 1845,
																"isOffset": false,
																"isSlot": false,
																"src": "4308:4:9",
																"valueSize": 1
															}
														],
														"id": 1854,
														"nodeType": "InlineAssembly",
														"src": "3960:371:9"
													},
													{
														"expression": {
															"id": 1859,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1855,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1818,
																"src": "4397:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1858,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1856,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1821,
																	"src": "4406:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1857,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1845,
																	"src": "4414:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4406:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4397:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1860,
														"nodeType": "ExpressionStatement",
														"src": "4397:21:9"
													},
													{
														"assignments": [
															1862
														],
														"declarations": [
															{
																"constant": false,
																"id": 1862,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4744:7:9",
																"nodeType": "VariableDeclaration",
																"scope": 1926,
																"src": "4736:15:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1861,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4736:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1869,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1868,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1865,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 1863,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4755:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1864,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1812,
																			"src": "4759:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4755:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1866,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4754:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1867,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4774:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4754:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4736:39:9"
													},
													{
														"expression": {
															"id": 1876,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1870,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1862,
																"src": "4992:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1875,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1871,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5003:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1874,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1872,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1812,
																		"src": "5007:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1873,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1862,
																		"src": "5021:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5007:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5003:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4992:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1877,
														"nodeType": "ExpressionStatement",
														"src": "4992:36:9"
													},
													{
														"expression": {
															"id": 1884,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1878,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1862,
																"src": "5061:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1883,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1879,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5072:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1882,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1880,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1812,
																		"src": "5076:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1881,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1862,
																		"src": "5090:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5076:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5072:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5061:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1885,
														"nodeType": "ExpressionStatement",
														"src": "5061:36:9"
													},
													{
														"expression": {
															"id": 1892,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1886,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1862,
																"src": "5131:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1891,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1887,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5142:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1890,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1888,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1812,
																		"src": "5146:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1889,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1862,
																		"src": "5160:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5146:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5142:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5131:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1893,
														"nodeType": "ExpressionStatement",
														"src": "5131:36:9"
													},
													{
														"expression": {
															"id": 1900,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1894,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1862,
																"src": "5201:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1899,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1895,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5212:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1898,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1896,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1812,
																		"src": "5216:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1897,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1862,
																		"src": "5230:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5216:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5212:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5201:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1901,
														"nodeType": "ExpressionStatement",
														"src": "5201:36:9"
													},
													{
														"expression": {
															"id": 1908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1902,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1862,
																"src": "5271:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1907,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1903,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5282:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1906,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1904,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1812,
																		"src": "5286:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1905,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1862,
																		"src": "5300:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5286:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5282:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5271:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1909,
														"nodeType": "ExpressionStatement",
														"src": "5271:36:9"
													},
													{
														"expression": {
															"id": 1916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1910,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1862,
																"src": "5342:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1915,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1911,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5353:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1914,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1912,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1812,
																		"src": "5357:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1913,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1862,
																		"src": "5371:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5357:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5353:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5342:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1917,
														"nodeType": "ExpressionStatement",
														"src": "5342:36:9"
													},
													{
														"expression": {
															"id": 1922,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1918,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1815,
																"src": "5812:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1921,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1919,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1818,
																	"src": "5821:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1920,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1862,
																	"src": "5829:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5821:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5812:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1923,
														"nodeType": "ExpressionStatement",
														"src": "5812:24:9"
													},
													{
														"expression": {
															"id": 1924,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1815,
															"src": "5857:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1816,
														"id": 1925,
														"nodeType": "Return",
														"src": "5850:13:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1806,
										"nodeType": "StructuredDocumentation",
										"src": "1357:305:9",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 1928,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1676:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1808,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1691:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1928,
												"src": "1683:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1807,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1683:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1810,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1702:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1928,
												"src": "1694:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1809,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1694:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1812,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1713:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1928,
												"src": "1705:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1705:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1682:43:9"
									},
									"returnParameters": {
										"id": 1816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1815,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1757:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1928,
												"src": "1749:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1814,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1749:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1748:16:9"
									},
									"scope": 2580,
									"src": "1667:4213:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1971,
										"nodeType": "Block",
										"src": "6122:189:9",
										"statements": [
											{
												"assignments": [
													1944
												],
												"declarations": [
													{
														"constant": false,
														"id": 1944,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "6140:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1971,
														"src": "6132:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1943,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6132:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1950,
												"initialValue": {
													"arguments": [
														{
															"id": 1946,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1931,
															"src": "6156:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1947,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1933,
															"src": "6159:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1948,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1935,
															"src": "6162:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1945,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1928,
															1972
														],
														"referencedDeclaration": 1928,
														"src": "6149:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6149:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6132:42:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$1721",
															"typeString": "enum Math.Rounding"
														},
														"id": 1954,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1951,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1938,
															"src": "6188:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$1721",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1952,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1721,
																"src": "6200:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$1721_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 1953,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6209:2:9",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1719,
															"src": "6200:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$1721",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "6188:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1961,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1956,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1931,
																	"src": "6222:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1957,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1933,
																	"src": "6225:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1958,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1935,
																	"src": "6228:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1955,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "6215:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1959,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6215:25:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1960,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6243:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6215:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6188:56:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1968,
												"nodeType": "IfStatement",
												"src": "6184:98:9",
												"trueBody": {
													"id": 1967,
													"nodeType": "Block",
													"src": "6246:36:9",
													"statements": [
														{
															"expression": {
																"id": 1965,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1963,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1944,
																	"src": "6260:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1964,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6270:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6260:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1966,
															"nodeType": "ExpressionStatement",
															"src": "6260:11:9"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1969,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1944,
													"src": "6298:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1942,
												"id": 1970,
												"nodeType": "Return",
												"src": "6291:13:9"
											}
										]
									},
									"documentation": {
										"id": 1929,
										"nodeType": "StructuredDocumentation",
										"src": "5886:121:9",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 1972,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "6021:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1931,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "6036:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1972,
												"src": "6028:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1930,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6028:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1933,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "6047:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1972,
												"src": "6039:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1932,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1935,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "6058:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1972,
												"src": "6050:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1934,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6050:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1938,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "6080:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1972,
												"src": "6071:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1721",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1937,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1936,
														"name": "Rounding",
														"nameLocations": [
															"6071:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1721,
														"src": "6071:8:9"
													},
													"referencedDeclaration": 1721,
													"src": "6071:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1721",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6027:62:9"
									},
									"returnParameters": {
										"id": 1942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1941,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1972,
												"src": "6113:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1940,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6113:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6112:9:9"
									},
									"scope": 2580,
									"src": "6012:299:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2083,
										"nodeType": "Block",
										"src": "6587:1585:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1980,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1975,
														"src": "6601:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1981,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6606:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6601:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1986,
												"nodeType": "IfStatement",
												"src": "6597:45:9",
												"trueBody": {
													"id": 1985,
													"nodeType": "Block",
													"src": "6609:33:9",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1983,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6630:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1979,
															"id": 1984,
															"nodeType": "Return",
															"src": "6623:8:9"
														}
													]
												}
											},
											{
												"assignments": [
													1988
												],
												"declarations": [
													{
														"constant": false,
														"id": 1988,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7329:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 2083,
														"src": "7321:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1987,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7321:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1997,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1989,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7338:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1994,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1991,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1975,
																			"src": "7349:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1990,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2252,
																			2288
																		],
																		"referencedDeclaration": 2252,
																		"src": "7344:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1992,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7344:7:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1993,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7355:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7344:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1995,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7343:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7338:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7321:36:9"
											},
											{
												"id": 2082,
												"nodeType": "UncheckedBlock",
												"src": "7758:408:9",
												"statements": [
													{
														"expression": {
															"id": 2007,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1998,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1988,
																"src": "7782:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2006,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2003,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1999,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1988,
																				"src": "7792:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2002,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2000,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1975,
																					"src": "7801:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2001,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1988,
																					"src": "7805:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7801:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7792:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2004,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7791:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2005,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7816:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7791:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7782:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2008,
														"nodeType": "ExpressionStatement",
														"src": "7782:35:9"
													},
													{
														"expression": {
															"id": 2018,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2009,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1988,
																"src": "7831:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2017,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2014,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2010,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1988,
																				"src": "7841:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2013,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2011,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1975,
																					"src": "7850:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2012,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1988,
																					"src": "7854:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7850:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7841:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2015,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7840:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2016,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7865:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7840:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7831:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2019,
														"nodeType": "ExpressionStatement",
														"src": "7831:35:9"
													},
													{
														"expression": {
															"id": 2029,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2020,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1988,
																"src": "7880:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2028,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2025,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2021,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1988,
																				"src": "7890:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2024,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2022,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1975,
																					"src": "7899:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2023,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1988,
																					"src": "7903:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7899:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7890:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2026,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7889:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2027,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7914:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7889:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7880:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2030,
														"nodeType": "ExpressionStatement",
														"src": "7880:35:9"
													},
													{
														"expression": {
															"id": 2040,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2031,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1988,
																"src": "7929:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2039,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2036,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2032,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1988,
																				"src": "7939:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2035,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2033,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1975,
																					"src": "7948:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2034,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1988,
																					"src": "7952:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7948:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7939:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2037,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7938:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2038,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7963:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7938:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7929:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2041,
														"nodeType": "ExpressionStatement",
														"src": "7929:35:9"
													},
													{
														"expression": {
															"id": 2051,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2042,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1988,
																"src": "7978:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2050,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2047,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2043,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1988,
																				"src": "7988:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2046,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2044,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1975,
																					"src": "7997:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2045,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1988,
																					"src": "8001:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7997:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7988:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2048,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7987:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2049,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8012:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7987:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7978:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2052,
														"nodeType": "ExpressionStatement",
														"src": "7978:35:9"
													},
													{
														"expression": {
															"id": 2062,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2053,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1988,
																"src": "8027:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2061,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2058,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2054,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1988,
																				"src": "8037:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2057,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2055,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1975,
																					"src": "8046:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2056,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1988,
																					"src": "8050:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8046:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8037:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2059,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8036:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2060,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8061:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8036:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8027:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2063,
														"nodeType": "ExpressionStatement",
														"src": "8027:35:9"
													},
													{
														"expression": {
															"id": 2073,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2064,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1988,
																"src": "8076:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2072,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2069,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2065,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1988,
																				"src": "8086:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2068,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2066,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1975,
																					"src": "8095:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2067,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1988,
																					"src": "8099:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8095:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8086:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2070,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8085:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2071,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8110:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8085:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8076:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2074,
														"nodeType": "ExpressionStatement",
														"src": "8076:35:9"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2076,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1988,
																	"src": "8136:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2079,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2077,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1975,
																		"src": "8144:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2078,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1988,
																		"src": "8148:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8144:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2075,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1757,
																"src": "8132:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2080,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8132:23:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1979,
														"id": 2081,
														"nodeType": "Return",
														"src": "8125:30:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1973,
										"nodeType": "StructuredDocumentation",
										"src": "6317:208:9",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2084,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6539:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1975,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6552:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2084,
												"src": "6544:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1974,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6544:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6543:11:9"
									},
									"returnParameters": {
										"id": 1979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1978,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2084,
												"src": "6578:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1977,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6578:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6577:9:9"
									},
									"scope": 2580,
									"src": "6530:1642:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2119,
										"nodeType": "Block",
										"src": "8348:161:9",
										"statements": [
											{
												"id": 2118,
												"nodeType": "UncheckedBlock",
												"src": "8358:145:9",
												"statements": [
													{
														"assignments": [
															2096
														],
														"declarations": [
															{
																"constant": false,
																"id": 2096,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "8390:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 2118,
																"src": "8382:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2095,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8382:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2100,
														"initialValue": {
															"arguments": [
																{
																	"id": 2098,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2087,
																	"src": "8404:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2097,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2084,
																	2120
																],
																"referencedDeclaration": 2084,
																"src": "8399:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2099,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8399:7:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8382:24:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2101,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2096,
																"src": "8427:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2111,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1721",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2105,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2102,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2090,
																					"src": "8437:8:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1721",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2103,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1721,
																						"src": "8449:8:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1721_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2104,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "8458:2:9",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1719,
																					"src": "8449:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1721",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "8437:23:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2110,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2108,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2106,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2096,
																						"src": "8464:6:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2107,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2096,
																						"src": "8473:6:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8464:15:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2109,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2087,
																					"src": "8482:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8464:19:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "8437:46:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2113,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8490:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2114,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "8437:54:9",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2112,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8486:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2115,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8436:56:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "8427:65:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2094,
														"id": 2117,
														"nodeType": "Return",
														"src": "8420:72:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2085,
										"nodeType": "StructuredDocumentation",
										"src": "8178:89:9",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8281:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2087,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8294:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2120,
												"src": "8286:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2086,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8286:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2090,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8306:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2120,
												"src": "8297:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1721",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2089,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2088,
														"name": "Rounding",
														"nameLocations": [
															"8297:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1721,
														"src": "8297:8:9"
													},
													"referencedDeclaration": 1721,
													"src": "8297:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1721",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8285:30:9"
									},
									"returnParameters": {
										"id": 2094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2093,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2120,
												"src": "8339:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2092,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8339:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8338:9:9"
									},
									"scope": 2580,
									"src": "8272:237:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2251,
										"nodeType": "Block",
										"src": "8694:922:9",
										"statements": [
											{
												"assignments": [
													2129
												],
												"declarations": [
													{
														"constant": false,
														"id": 2129,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8712:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 2251,
														"src": "8704:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2128,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8704:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2131,
												"initialValue": {
													"hexValue": "30",
													"id": 2130,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8721:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8704:18:9"
											},
											{
												"id": 2248,
												"nodeType": "UncheckedBlock",
												"src": "8732:855:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2134,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2132,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2123,
																	"src": "8760:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2133,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8769:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "8760:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2135,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8775:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8760:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2146,
														"nodeType": "IfStatement",
														"src": "8756:99:9",
														"trueBody": {
															"id": 2145,
															"nodeType": "Block",
															"src": "8778:77:9",
															"statements": [
																{
																	"expression": {
																		"id": 2139,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2137,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2123,
																			"src": "8796:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2138,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8806:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8796:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2140,
																	"nodeType": "ExpressionStatement",
																	"src": "8796:13:9"
																},
																{
																	"expression": {
																		"id": 2143,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2141,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2129,
																			"src": "8827:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2142,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8837:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8827:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2144,
																	"nodeType": "ExpressionStatement",
																	"src": "8827:13:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2149,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2147,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2123,
																	"src": "8872:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2148,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8881:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "8872:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2150,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8886:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8872:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2161,
														"nodeType": "IfStatement",
														"src": "8868:96:9",
														"trueBody": {
															"id": 2160,
															"nodeType": "Block",
															"src": "8889:75:9",
															"statements": [
																{
																	"expression": {
																		"id": 2154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2152,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2123,
																			"src": "8907:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2153,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8917:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8907:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2155,
																	"nodeType": "ExpressionStatement",
																	"src": "8907:12:9"
																},
																{
																	"expression": {
																		"id": 2158,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2156,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2129,
																			"src": "8937:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2157,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8947:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8937:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2159,
																	"nodeType": "ExpressionStatement",
																	"src": "8937:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2166,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2164,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2162,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2123,
																	"src": "8981:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8990:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "8981:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2165,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8995:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8981:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2176,
														"nodeType": "IfStatement",
														"src": "8977:96:9",
														"trueBody": {
															"id": 2175,
															"nodeType": "Block",
															"src": "8998:75:9",
															"statements": [
																{
																	"expression": {
																		"id": 2169,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2167,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2123,
																			"src": "9016:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2168,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9026:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9016:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2170,
																	"nodeType": "ExpressionStatement",
																	"src": "9016:12:9"
																},
																{
																	"expression": {
																		"id": 2173,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2171,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2129,
																			"src": "9046:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2172,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9056:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9046:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2174,
																	"nodeType": "ExpressionStatement",
																	"src": "9046:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2177,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2123,
																	"src": "9090:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2178,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9099:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "9090:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2180,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9104:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9090:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2191,
														"nodeType": "IfStatement",
														"src": "9086:96:9",
														"trueBody": {
															"id": 2190,
															"nodeType": "Block",
															"src": "9107:75:9",
															"statements": [
																{
																	"expression": {
																		"id": 2184,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2182,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2123,
																			"src": "9125:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2183,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9135:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9125:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2185,
																	"nodeType": "ExpressionStatement",
																	"src": "9125:12:9"
																},
																{
																	"expression": {
																		"id": 2188,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2186,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2129,
																			"src": "9155:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2187,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9165:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9155:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2189,
																	"nodeType": "ExpressionStatement",
																	"src": "9155:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2194,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2192,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2123,
																	"src": "9199:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2193,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9208:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "9199:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2195,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9212:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9199:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2206,
														"nodeType": "IfStatement",
														"src": "9195:93:9",
														"trueBody": {
															"id": 2205,
															"nodeType": "Block",
															"src": "9215:73:9",
															"statements": [
																{
																	"expression": {
																		"id": 2199,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2197,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2123,
																			"src": "9233:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2198,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9243:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9233:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2200,
																	"nodeType": "ExpressionStatement",
																	"src": "9233:11:9"
																},
																{
																	"expression": {
																		"id": 2203,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2201,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2129,
																			"src": "9262:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2202,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9272:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9262:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2204,
																	"nodeType": "ExpressionStatement",
																	"src": "9262:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2209,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2207,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2123,
																	"src": "9305:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2208,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9314:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "9305:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2210,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9318:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9305:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2221,
														"nodeType": "IfStatement",
														"src": "9301:93:9",
														"trueBody": {
															"id": 2220,
															"nodeType": "Block",
															"src": "9321:73:9",
															"statements": [
																{
																	"expression": {
																		"id": 2214,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2212,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2123,
																			"src": "9339:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2213,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9349:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9339:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2215,
																	"nodeType": "ExpressionStatement",
																	"src": "9339:11:9"
																},
																{
																	"expression": {
																		"id": 2218,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2216,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2129,
																			"src": "9368:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2217,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9378:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9368:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2219,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2226,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2224,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2222,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2123,
																	"src": "9411:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2223,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9420:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "9411:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2225,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9424:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9411:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2236,
														"nodeType": "IfStatement",
														"src": "9407:93:9",
														"trueBody": {
															"id": 2235,
															"nodeType": "Block",
															"src": "9427:73:9",
															"statements": [
																{
																	"expression": {
																		"id": 2229,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2227,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2123,
																			"src": "9445:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2228,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9455:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9445:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2230,
																	"nodeType": "ExpressionStatement",
																	"src": "9445:11:9"
																},
																{
																	"expression": {
																		"id": 2233,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2231,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2129,
																			"src": "9474:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2232,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9484:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9474:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2234,
																	"nodeType": "ExpressionStatement",
																	"src": "9474:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2237,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2123,
																	"src": "9517:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9526:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9517:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2240,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9530:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9517:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2247,
														"nodeType": "IfStatement",
														"src": "9513:64:9",
														"trueBody": {
															"id": 2246,
															"nodeType": "Block",
															"src": "9533:44:9",
															"statements": [
																{
																	"expression": {
																		"id": 2244,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2242,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2129,
																			"src": "9551:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2243,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9561:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9551:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2245,
																	"nodeType": "ExpressionStatement",
																	"src": "9551:11:9"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2249,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2129,
													"src": "9603:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2127,
												"id": 2250,
												"nodeType": "Return",
												"src": "9596:13:9"
											}
										]
									},
									"documentation": {
										"id": 2121,
										"nodeType": "StructuredDocumentation",
										"src": "8515:113:9",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "8642:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2123,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8655:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2252,
												"src": "8647:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8647:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8646:15:9"
									},
									"returnParameters": {
										"id": 2127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2126,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2252,
												"src": "8685:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8685:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8684:9:9"
									},
									"scope": 2580,
									"src": "8633:983:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2287,
										"nodeType": "Block",
										"src": "9849:165:9",
										"statements": [
											{
												"id": 2286,
												"nodeType": "UncheckedBlock",
												"src": "9859:149:9",
												"statements": [
													{
														"assignments": [
															2264
														],
														"declarations": [
															{
																"constant": false,
																"id": 2264,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "9891:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 2286,
																"src": "9883:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2263,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9883:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2268,
														"initialValue": {
															"arguments": [
																{
																	"id": 2266,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2255,
																	"src": "9905:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2265,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2252,
																	2288
																],
																"referencedDeclaration": 2252,
																"src": "9900:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9900:11:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9883:28:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2284,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2269,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2264,
																"src": "9932:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2279,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1721",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2273,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2270,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2258,
																					"src": "9942:8:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1721",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2271,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1721,
																						"src": "9954:8:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1721_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2272,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "9963:2:9",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1719,
																					"src": "9954:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1721",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "9942:23:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2278,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2276,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2274,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9969:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2275,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2264,
																						"src": "9974:6:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9969:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2277,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2255,
																					"src": "9983:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9969:19:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "9942:46:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2281,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9995:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "9942:54:9",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2280,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9991:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2283,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9941:56:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "9932:65:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2262,
														"id": 2285,
														"nodeType": "Return",
														"src": "9925:72:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2253,
										"nodeType": "StructuredDocumentation",
										"src": "9622:142:9",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2288,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "9778:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2255,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9791:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2288,
												"src": "9783:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9783:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2258,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9807:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2288,
												"src": "9798:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1721",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2257,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2256,
														"name": "Rounding",
														"nameLocations": [
															"9798:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1721,
														"src": "9798:8:9"
													},
													"referencedDeclaration": 1721,
													"src": "9798:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1721",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9782:34:9"
									},
									"returnParameters": {
										"id": 2262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2261,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2288,
												"src": "9840:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9840:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9839:9:9"
									},
									"scope": 2580,
									"src": "9769:245:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2416,
										"nodeType": "Block",
										"src": "10201:854:9",
										"statements": [
											{
												"assignments": [
													2297
												],
												"declarations": [
													{
														"constant": false,
														"id": 2297,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10219:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 2416,
														"src": "10211:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2296,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10211:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2299,
												"initialValue": {
													"hexValue": "30",
													"id": 2298,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10228:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10211:18:9"
											},
											{
												"id": 2413,
												"nodeType": "UncheckedBlock",
												"src": "10239:787:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2300,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2291,
																"src": "10267:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2303,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2301,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10276:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2302,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10282:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10276:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "10267:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2316,
														"nodeType": "IfStatement",
														"src": "10263:103:9",
														"trueBody": {
															"id": 2315,
															"nodeType": "Block",
															"src": "10286:80:9",
															"statements": [
																{
																	"expression": {
																		"id": 2309,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2305,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2291,
																			"src": "10304:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2308,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2306,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10313:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2307,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10319:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "10313:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "10304:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2310,
																	"nodeType": "ExpressionStatement",
																	"src": "10304:17:9"
																},
																{
																	"expression": {
																		"id": 2313,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2311,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2297,
																			"src": "10339:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2312,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10349:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10339:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2314,
																	"nodeType": "ExpressionStatement",
																	"src": "10339:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2317,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2291,
																"src": "10383:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2320,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10392:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2319,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10398:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "10392:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "10383:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2333,
														"nodeType": "IfStatement",
														"src": "10379:103:9",
														"trueBody": {
															"id": 2332,
															"nodeType": "Block",
															"src": "10402:80:9",
															"statements": [
																{
																	"expression": {
																		"id": 2326,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2322,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2291,
																			"src": "10420:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2325,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2323,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10429:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2324,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10435:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "10429:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "10420:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2327,
																	"nodeType": "ExpressionStatement",
																	"src": "10420:17:9"
																},
																{
																	"expression": {
																		"id": 2330,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2328,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2297,
																			"src": "10455:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2329,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10465:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "10455:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2331,
																	"nodeType": "ExpressionStatement",
																	"src": "10455:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2338,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2334,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2291,
																"src": "10499:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2337,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2335,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10508:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2336,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10514:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10508:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "10499:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2350,
														"nodeType": "IfStatement",
														"src": "10495:103:9",
														"trueBody": {
															"id": 2349,
															"nodeType": "Block",
															"src": "10518:80:9",
															"statements": [
																{
																	"expression": {
																		"id": 2343,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2339,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2291,
																			"src": "10536:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2342,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2340,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10545:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2341,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10551:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "10545:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "10536:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2344,
																	"nodeType": "ExpressionStatement",
																	"src": "10536:17:9"
																},
																{
																	"expression": {
																		"id": 2347,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2345,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2297,
																			"src": "10571:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2346,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10581:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "10571:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2348,
																	"nodeType": "ExpressionStatement",
																	"src": "10571:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2351,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2291,
																"src": "10615:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2354,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2352,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10624:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2353,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10630:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "10624:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "10615:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2367,
														"nodeType": "IfStatement",
														"src": "10611:100:9",
														"trueBody": {
															"id": 2366,
															"nodeType": "Block",
															"src": "10633:78:9",
															"statements": [
																{
																	"expression": {
																		"id": 2360,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2356,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2291,
																			"src": "10651:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2359,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2357,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10660:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2358,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10666:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "10660:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "10651:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2361,
																	"nodeType": "ExpressionStatement",
																	"src": "10651:16:9"
																},
																{
																	"expression": {
																		"id": 2364,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2362,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2297,
																			"src": "10685:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2363,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10695:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "10685:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2365,
																	"nodeType": "ExpressionStatement",
																	"src": "10685:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2368,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2291,
																"src": "10728:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2371,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2369,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10737:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2370,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10743:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "10737:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "10728:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2384,
														"nodeType": "IfStatement",
														"src": "10724:100:9",
														"trueBody": {
															"id": 2383,
															"nodeType": "Block",
															"src": "10746:78:9",
															"statements": [
																{
																	"expression": {
																		"id": 2377,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2373,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2291,
																			"src": "10764:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2376,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2374,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10773:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2375,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10779:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "10773:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "10764:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2378,
																	"nodeType": "ExpressionStatement",
																	"src": "10764:16:9"
																},
																{
																	"expression": {
																		"id": 2381,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2379,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2297,
																			"src": "10798:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2380,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10808:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "10798:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2382,
																	"nodeType": "ExpressionStatement",
																	"src": "10798:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2385,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2291,
																"src": "10841:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2388,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10850:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10856:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "10850:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "10841:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2401,
														"nodeType": "IfStatement",
														"src": "10837:100:9",
														"trueBody": {
															"id": 2400,
															"nodeType": "Block",
															"src": "10859:78:9",
															"statements": [
																{
																	"expression": {
																		"id": 2394,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2390,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2291,
																			"src": "10877:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2393,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2391,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10886:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2392,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10892:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "10886:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "10877:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2395,
																	"nodeType": "ExpressionStatement",
																	"src": "10877:16:9"
																},
																{
																	"expression": {
																		"id": 2398,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2396,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2297,
																			"src": "10911:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2397,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10921:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "10911:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2399,
																	"nodeType": "ExpressionStatement",
																	"src": "10911:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2402,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2291,
																"src": "10954:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2405,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2403,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10963:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2404,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10969:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10963:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "10954:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2412,
														"nodeType": "IfStatement",
														"src": "10950:66:9",
														"trueBody": {
															"id": 2411,
															"nodeType": "Block",
															"src": "10972:44:9",
															"statements": [
																{
																	"expression": {
																		"id": 2409,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2407,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2297,
																			"src": "10990:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2408,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11000:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "10990:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2410,
																	"nodeType": "ExpressionStatement",
																	"src": "10990:11:9"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2414,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2297,
													"src": "11042:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2295,
												"id": 2415,
												"nodeType": "Return",
												"src": "11035:13:9"
											}
										]
									},
									"documentation": {
										"id": 2289,
										"nodeType": "StructuredDocumentation",
										"src": "10020:114:9",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2417,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "10148:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2291,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10162:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2417,
												"src": "10154:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10154:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10153:15:9"
									},
									"returnParameters": {
										"id": 2295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2417,
												"src": "10192:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10192:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10191:9:9"
									},
									"scope": 2580,
									"src": "10139:916:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2452,
										"nodeType": "Block",
										"src": "11290:167:9",
										"statements": [
											{
												"id": 2451,
												"nodeType": "UncheckedBlock",
												"src": "11300:151:9",
												"statements": [
													{
														"assignments": [
															2429
														],
														"declarations": [
															{
																"constant": false,
																"id": 2429,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11332:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 2451,
																"src": "11324:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2428,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11324:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2433,
														"initialValue": {
															"arguments": [
																{
																	"id": 2431,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2420,
																	"src": "11347:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2430,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2417,
																	2453
																],
																"referencedDeclaration": 2417,
																"src": "11341:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2432,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11341:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11324:29:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2434,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2429,
																"src": "11374:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2444,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1721",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2438,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2435,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2423,
																					"src": "11384:8:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1721",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2436,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1721,
																						"src": "11396:8:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1721_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2437,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "11405:2:9",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1719,
																					"src": "11396:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1721",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "11384:23:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2443,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2441,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2439,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11411:2:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2440,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2429,
																						"src": "11417:6:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11411:12:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2442,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2420,
																					"src": "11426:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11411:20:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11384:47:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2446,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11438:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2447,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11384:55:9",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2445,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11434:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2448,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11383:57:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11374:66:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2427,
														"id": 2450,
														"nodeType": "Return",
														"src": "11367:73:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2418,
										"nodeType": "StructuredDocumentation",
										"src": "11061:143:9",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "11218:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2420,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11232:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2453,
												"src": "11224:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11224:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2423,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11248:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2453,
												"src": "11239:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1721",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2422,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2421,
														"name": "Rounding",
														"nameLocations": [
															"11239:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1721,
														"src": "11239:8:9"
													},
													"referencedDeclaration": 1721,
													"src": "11239:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1721",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11223:34:9"
									},
									"returnParameters": {
										"id": 2427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2426,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2453,
												"src": "11281:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11281:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11280:9:9"
									},
									"scope": 2580,
									"src": "11209:248:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2539,
										"nodeType": "Block",
										"src": "11771:600:9",
										"statements": [
											{
												"assignments": [
													2462
												],
												"declarations": [
													{
														"constant": false,
														"id": 2462,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11789:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 2539,
														"src": "11781:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2461,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11781:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2464,
												"initialValue": {
													"hexValue": "30",
													"id": 2463,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11798:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11781:18:9"
											},
											{
												"id": 2536,
												"nodeType": "UncheckedBlock",
												"src": "11809:533:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2467,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2465,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2456,
																	"src": "11837:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2466,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11846:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11837:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2468,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11852:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11837:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2479,
														"nodeType": "IfStatement",
														"src": "11833:98:9",
														"trueBody": {
															"id": 2478,
															"nodeType": "Block",
															"src": "11855:76:9",
															"statements": [
																{
																	"expression": {
																		"id": 2472,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2470,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2456,
																			"src": "11873:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2471,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11883:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11873:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2473,
																	"nodeType": "ExpressionStatement",
																	"src": "11873:13:9"
																},
																{
																	"expression": {
																		"id": 2476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2474,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2462,
																			"src": "11904:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2475,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11914:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11904:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2477,
																	"nodeType": "ExpressionStatement",
																	"src": "11904:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2482,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2480,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2456,
																	"src": "11948:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2481,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11957:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11948:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11962:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11948:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2494,
														"nodeType": "IfStatement",
														"src": "11944:95:9",
														"trueBody": {
															"id": 2493,
															"nodeType": "Block",
															"src": "11965:74:9",
															"statements": [
																{
																	"expression": {
																		"id": 2487,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2485,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2456,
																			"src": "11983:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2486,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11993:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11983:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2488,
																	"nodeType": "ExpressionStatement",
																	"src": "11983:12:9"
																},
																{
																	"expression": {
																		"id": 2491,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2489,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2462,
																			"src": "12013:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2490,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12023:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12013:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2492,
																	"nodeType": "ExpressionStatement",
																	"src": "12013:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2497,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2495,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2456,
																	"src": "12056:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2496,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12065:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12056:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2498,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12070:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12056:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2509,
														"nodeType": "IfStatement",
														"src": "12052:95:9",
														"trueBody": {
															"id": 2508,
															"nodeType": "Block",
															"src": "12073:74:9",
															"statements": [
																{
																	"expression": {
																		"id": 2502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2500,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2456,
																			"src": "12091:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2501,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12101:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12091:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2503,
																	"nodeType": "ExpressionStatement",
																	"src": "12091:12:9"
																},
																{
																	"expression": {
																		"id": 2506,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2504,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2462,
																			"src": "12121:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2505,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12131:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12121:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2507,
																	"nodeType": "ExpressionStatement",
																	"src": "12121:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2512,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2510,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2456,
																	"src": "12164:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2511,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12173:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12164:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2513,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12178:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12164:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2524,
														"nodeType": "IfStatement",
														"src": "12160:95:9",
														"trueBody": {
															"id": 2523,
															"nodeType": "Block",
															"src": "12181:74:9",
															"statements": [
																{
																	"expression": {
																		"id": 2517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2515,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2456,
																			"src": "12199:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2516,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12209:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12199:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2518,
																	"nodeType": "ExpressionStatement",
																	"src": "12199:12:9"
																},
																{
																	"expression": {
																		"id": 2521,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2519,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2462,
																			"src": "12229:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2520,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12239:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12229:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2522,
																	"nodeType": "ExpressionStatement",
																	"src": "12229:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2527,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2525,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2456,
																	"src": "12272:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2526,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12281:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12272:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2528,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12272:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2535,
														"nodeType": "IfStatement",
														"src": "12268:64:9",
														"trueBody": {
															"id": 2534,
															"nodeType": "Block",
															"src": "12288:44:9",
															"statements": [
																{
																	"expression": {
																		"id": 2532,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2530,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2462,
																			"src": "12306:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2531,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12316:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12306:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2533,
																	"nodeType": "ExpressionStatement",
																	"src": "12306:11:9"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2537,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2462,
													"src": "12358:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2460,
												"id": 2538,
												"nodeType": "Return",
												"src": "12351:13:9"
											}
										]
									},
									"documentation": {
										"id": 2454,
										"nodeType": "StructuredDocumentation",
										"src": "11463:240:9",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2540,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "11717:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2456,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11732:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2540,
												"src": "11724:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11724:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11723:15:9"
									},
									"returnParameters": {
										"id": 2460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2459,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2540,
												"src": "11762:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2458,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11762:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11761:9:9"
									},
									"scope": 2580,
									"src": "11708:663:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2578,
										"nodeType": "Block",
										"src": "12608:174:9",
										"statements": [
											{
												"id": 2577,
												"nodeType": "UncheckedBlock",
												"src": "12618:158:9",
												"statements": [
													{
														"assignments": [
															2552
														],
														"declarations": [
															{
																"constant": false,
																"id": 2552,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12650:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 2577,
																"src": "12642:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2551,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12642:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2556,
														"initialValue": {
															"arguments": [
																{
																	"id": 2554,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2543,
																	"src": "12666:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2553,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2540,
																	2579
																],
																"referencedDeclaration": 2540,
																"src": "12659:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12659:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12642:30:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2575,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2557,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2552,
																"src": "12693:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2570,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1721",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2561,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2558,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2546,
																					"src": "12703:8:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1721",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2559,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1721,
																						"src": "12715:8:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1721_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2560,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "12724:2:9",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1719,
																					"src": "12715:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1721",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "12703:23:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2569,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2567,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2562,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12730:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2565,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2563,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2552,
																									"src": "12736:6:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2564,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12746:1:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "12736:11:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2566,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "12735:13:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12730:18:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2568,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2543,
																					"src": "12751:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12730:26:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12703:53:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12763:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12703:61:9",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2571,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12759:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2574,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12702:63:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12693:72:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2550,
														"id": 2576,
														"nodeType": "Return",
														"src": "12686:79:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2541,
										"nodeType": "StructuredDocumentation",
										"src": "12377:144:9",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2579,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "12535:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2543,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12550:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2579,
												"src": "12542:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12542:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2546,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12566:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2579,
												"src": "12557:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1721",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2545,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2544,
														"name": "Rounding",
														"nameLocations": [
															"12557:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1721,
														"src": "12557:8:9"
													},
													"referencedDeclaration": 1721,
													"src": "12557:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1721",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12541:34:9"
									},
									"returnParameters": {
										"id": 2550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2549,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2579,
												"src": "12599:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12599:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12598:9:9"
									},
									"scope": 2580,
									"src": "12526:256:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2581,
							"src": "202:12582:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "103:12682:9"
				},
				"id": 9
			},
			".deps/npm/@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							2685
						]
					},
					"id": 2686,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2582,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2583,
								"nodeType": "StructuredDocumentation",
								"src": "134:80:10",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2685,
							"linearizedBaseContracts": [
								2685
							],
							"name": "SignedMath",
							"nameLocation": "223:10:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2600,
										"nodeType": "Block",
										"src": "375:37:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2595,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2593,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2586,
															"src": "392:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2594,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2588,
															"src": "396:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "392:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2597,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2588,
														"src": "404:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "392:13:10",
													"trueExpression": {
														"id": 2596,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2586,
														"src": "400:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2592,
												"id": 2599,
												"nodeType": "Return",
												"src": "385:20:10"
											}
										]
									},
									"documentation": {
										"id": 2584,
										"nodeType": "StructuredDocumentation",
										"src": "240:66:10",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 2601,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "320:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2586,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "331:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2601,
												"src": "324:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2585,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "324:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2588,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "341:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2601,
												"src": "334:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2587,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "334:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "323:20:10"
									},
									"returnParameters": {
										"id": 2592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2591,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2601,
												"src": "367:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2590,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "367:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "366:8:10"
									},
									"scope": 2685,
									"src": "311:101:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2618,
										"nodeType": "Block",
										"src": "554:37:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2613,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2611,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2604,
															"src": "571:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2612,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2606,
															"src": "575:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "571:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2615,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2606,
														"src": "583:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "571:13:10",
													"trueExpression": {
														"id": 2614,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2604,
														"src": "579:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2610,
												"id": 2617,
												"nodeType": "Return",
												"src": "564:20:10"
											}
										]
									},
									"documentation": {
										"id": 2602,
										"nodeType": "StructuredDocumentation",
										"src": "418:67:10",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 2619,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "499:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2604,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "510:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2619,
												"src": "503:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2603,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "503:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2606,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "520:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2619,
												"src": "513:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2605,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "513:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "502:20:10"
									},
									"returnParameters": {
										"id": 2610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2609,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2619,
												"src": "546:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2608,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "546:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "545:8:10"
									},
									"scope": 2685,
									"src": "490:101:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2662,
										"nodeType": "Block",
										"src": "796:162:10",
										"statements": [
											{
												"assignments": [
													2630
												],
												"declarations": [
													{
														"constant": false,
														"id": 2630,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "865:1:10",
														"nodeType": "VariableDeclaration",
														"scope": 2662,
														"src": "858:8:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2629,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "858:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2643,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2633,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2631,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2622,
																	"src": "870:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2632,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2624,
																	"src": "874:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "870:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2634,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "869:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2640,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2637,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2635,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2622,
																				"src": "881:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2636,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2624,
																				"src": "885:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "881:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2638,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "880:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2639,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "891:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "880:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2641,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "879:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "869:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "858:35:10"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2644,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2630,
														"src": "910:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2652,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2649,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2630,
																						"src": "930:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 2648,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "922:7:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 2647,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "922:7:10",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2650,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "922:10:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 2651,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "936:3:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "922:17:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2646,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "915:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 2645,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "915:6:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2653,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "915:25:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2656,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2654,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2622,
																				"src": "944:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2655,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2624,
																				"src": "948:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "944:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2657,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "943:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "915:35:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2659,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "914:37:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "910:41:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2628,
												"id": 2661,
												"nodeType": "Return",
												"src": "903:48:10"
											}
										]
									},
									"documentation": {
										"id": 2620,
										"nodeType": "StructuredDocumentation",
										"src": "597:126:10",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 2663,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "737:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2622,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "752:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2663,
												"src": "745:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2621,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "745:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2624,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "762:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2663,
												"src": "755:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2623,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "755:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "744:20:10"
									},
									"returnParameters": {
										"id": 2628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2627,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2663,
												"src": "788:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2626,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "788:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:8:10"
									},
									"scope": 2685,
									"src": "728:230:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2683,
										"nodeType": "Block",
										"src": "1102:158:10",
										"statements": [
											{
												"id": 2682,
												"nodeType": "UncheckedBlock",
												"src": "1112:142:10",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2675,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2673,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2666,
																			"src": "1227:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2674,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1232:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1227:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 2678,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1240:2:10",
																		"subExpression": {
																			"id": 2677,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2666,
																			"src": "1241:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 2679,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1227:15:10",
																	"trueExpression": {
																		"id": 2676,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2666,
																		"src": "1236:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 2672,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1219:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2671,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1219:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1219:24:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2670,
														"id": 2681,
														"nodeType": "Return",
														"src": "1212:31:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2664,
										"nodeType": "StructuredDocumentation",
										"src": "964:78:10",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 2684,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1056:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2666,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1067:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2684,
												"src": "1060:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2665,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1059:10:10"
									},
									"returnParameters": {
										"id": 2670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2669,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2684,
												"src": "1093:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:9:10"
									},
									"scope": 2685,
									"src": "1047:213:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2686,
							"src": "215:1047:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1154:10"
				},
				"id": 10
			}
		}
	}
}